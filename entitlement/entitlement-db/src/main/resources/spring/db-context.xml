<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.junbo.entitlement.db"/>

    <!-- DataSource -->
    <bean id="entitlementDataSource" class="bitronix.tm.resource.jdbc.PoolingDataSource"
          init-method="init" destroy-method="close">
        <property name="uniqueName" value="jdbc/id_ds1"/>
        <property name="className" value="org.postgresql.xa.PGXADataSource"/>
        <property name="minPoolSize" value="${entitlement.db.minConnectionsPerPartition}"/>
        <property name="maxPoolSize" value="${entitlement.db.maxConnectionsPerPartition}"/>
        <property name="driverProperties">
            <props>
                <prop key="url">${entitlement.db.url}</prop>
                <prop key="user">${entitlement.db.username}</prop>
                <prop key="password">${entitlement.db.password}</prop>
            </props>
        </property>
    </bean>


    <!-- SessionFactory for Hibernate -->
    <bean id="entitlementSessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="entitlementDataSource"/>
        <property name="packagesToScan" value="com.junbo.entitlement.db.entity"/>
        <property name="jtaTransactionManager" ref="transactionManager"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${entitlement.hibernate.dialect}</prop>
                <prop key="hibernate.max_fetch_depth">${entitlement.hibernate.max_fetch_depth}</prop>
                <prop key="hibernate.jdbc.fetch_size">${entitlement.hibernate.fetch_size}</prop>
                <prop key="hibernate.jdbc.batch_size">${entitlement.hibernate.batch_size}</prop>
                <prop key="hibernate.show_sql">${entitlement.hibernate.show_sql}</prop>
            </props>
        </property>
    </bean>

    <tx:annotation-driven/>

    <!-- Dao -->
    <bean id="baseDao" class="com.junbo.entitlement.db.dao.hibernate.BaseDao" abstract="true">
        <property name="sessionFactory" ref="entitlementSessionFactory"/>
    </bean>

    <bean id="entitlementDao" class="com.junbo.entitlement.db.dao.hibernate.EntitlementDaoImpl" parent="baseDao">
        <property name="entityType" value="com.junbo.entitlement.db.entity.EntitlementEntity"/>
    </bean>
    <bean id="entitlementDefinitionDao" class="com.junbo.entitlement.db.dao.hibernate.EntitlementDefinitionDaoImpl" parent="baseDao">
        <property name="entityType" value="com.junbo.entitlement.db.entity.EntitlementDefinitionEntity"/>
    </bean>
    <bean id="entitlementHistoryDao" class="com.junbo.entitlement.db.dao.hibernate.EntitlementHistoryDaoImpl">
        <property name="sessionFactory" ref="entitlementSessionFactory"/>
    </bean>

    <!-- repository -->
    <bean id="entitlementRepository" class="com.junbo.entitlement.db.repository.EntitlementRepository"/>
    <bean id="entitlementDefinitionRepository" class="com.junbo.entitlement.db.repository.EntitlementDefinitionRepository"/>
</beans>