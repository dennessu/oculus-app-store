<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

    <changeSet author="chriszhu" id = "1" context="PREDEPLOY">
        <sql><![CDATA[
                create table user_order (
                    order_id bigint not null,
                    user_id bigint not null,
                    order_status_id smallint not null,
                    is_tentative boolean not null,
                    country varchar(2) not null,
                    currency varchar(3) not null,
                    locale varchar(5) not null,
                    shipping_method_id varchar(64) default null,
                    shipping_address_id bigint default null,
                    shipping_name_id bigint default null,
                    shipping_phone_id bigint default null,
                    total_amount decimal not null,
                    total_tax decimal not null,
                    is_tax_inclusive boolean not null,
                    total_discount decimal not null,
                    total_shipping_fee decimal not null,
                    total_shipping_fee_discount decimal not null,
                    honor_until_time timestamp default null,
                    honored_time timestamp not null,
                    payment_description varchar(4000) default null,
                    properties varchar(4000) default null,
                    is_audited boolean default false,
					resource_age bigint not null,
					purchase_time timestamp default null,
					latest_order_revision_id bigint default null,
                    created_time timestamp not null,
                    created_by bigint not null,
                    updated_time timestamp not null,
                    updated_by bigint not null,
                    primary key (order_id)
                );
                create unique index user_order_index on user_order (user_id, order_id);
                create unique index user_order_time_index on user_order (user_id, order_id, updated_time, created_time);

                create table order_revision (
                    order_revision_id bigint not null,
                    order_id bigint not null,
                    shipping_method_id varchar(64) default null,
                    shipping_address_id bigint default null,
                    shipping_name_id bigint default null,
                    shipping_phone_id bigint default null,
                    total_amount decimal not null,
                    total_tax decimal not null,
                    is_tax_inclusive boolean not null,
                    total_discount decimal not null,
                    total_shipping_fee decimal not null,
                    total_shipping_fee_discount decimal not null,
					resource_age bigint not null,
                    created_time timestamp not null,
                    created_by bigint not null,
                    updated_time timestamp not null,
                    updated_by bigint not null,
                    primary key (order_revision_id)
                );
                create index order_time_index on order_revision (order_id, updated_time, created_time);

                create table order_event (
                    event_id bigint not null,
                    action_id smallint not null,
                    status_id smallint not null,
					resource_age bigint not null,
                    created_time timestamp not null,
                    created_by bigint not null,
                    updated_time timestamp not null,
                    updated_by bigint not null,
                    order_id bigint not null,
                    tracking_uuid uuid not null,
                    event_tracking_uuid uuid not null,
                    flow_name varchar(128) default null,
                    primary key (event_id)
                );
                create unique index order_event_order_id_event_tracking_uuid on order_event (order_id, event_tracking_uuid);
                create index order_event_tracking_uuid on order_event (tracking_uuid);

                create table order_item (
                    order_item_id bigint not null,
                    order_id bigint not null,
                    order_item_type smallint not null,
                    offer_id varchar(128) not null,
                    unit_price decimal not null,
                    quantity int not null,
                    shipping_method_id varchar(64) default null,
                    shipping_address_id bigint default null,
                    total_amount decimal not null,
                    total_tax decimal not null,
                    total_discount decimal not null,
                    total_shipping_fee decimal default null,
                    total_shipping_fee_discount decimal default null,
                    latest_order_item_revision_id bigint default null,
                    honor_until_time timestamp default null,
                    honored_time timestamp not null,
                    is_preorder boolean default null,
                    properties varchar(4000) default null,
                    is_deleted boolean not null,
					resource_age bigint not null,
                    created_time timestamp not null,
                    created_by bigint not null,
                    updated_time timestamp not null,
                    updated_by bigint not null,
                    primary key (order_item_id)
                );
                create unique index item_order_time_index on order_item (order_item_id, order_id, updated_time, created_time);

                create table order_item_revision (
                    order_item_revision_id bigint not null,
                    order_item_id bigint not null,
                    order_id bigint not null,
                    revision_type smallint not null,
                    quantity int not null,
                    shipping_method_id varchar(64) default null,
                    shipping_address_id bigint default null,
                    total_amount decimal not null,
                    total_tax decimal not null,
                    total_discount decimal not null,
                    total_shipping_fee decimal default null,
                    total_shipping_fee_discount decimal default null,
					resource_age bigint not null,
                    created_time timestamp not null,
                    created_by bigint not null,
                    updated_time timestamp not null,
                    updated_by bigint not null,
                    primary key (order_item_revision_id)
                );
                create index revision_item_order_time_index on order_item_revision (order_item_id, order_id, updated_time, created_time);

                create table order_discount_info (
                    order_item_discount_info_id bigint not null,
                    order_id bigint not null,
                    order_item_id bigint default null,
                    discount_type smallint not null,
                    discount_rate decimal default null,
                    discount_amount decimal not null,
                    coupon varchar(128) default null,
                    promotion_id varchar(128) default null,
                    is_deleted boolean not null,
					resource_age bigint not null,
                    created_time timestamp not null,
                    created_by bigint not null,
                    updated_time timestamp not null,
                    updated_by bigint not null,
                    primary key (order_item_discount_info_id)
                );
                create unique index discount_order_index on order_discount_info (order_item_discount_info_id, order_id);

                create table order_billing_history (
                    history_id bigint not null,
                    billing_event_id smallint not null,
					resource_age bigint not null,
                    created_time timestamp not null,
                    created_by bigint not null,
                    updated_time timestamp not null,
                    updated_by bigint not null,
                    order_id bigint not null,
                    total_amount decimal NOT NULL,
                    balance_id varchar(128) not null,
                    success boolean not null,
                    primary key (history_id)
                );
                create unique index history_order_balance_time_index on order_billing_history (history_id, order_id, balance_id, updated_time);

                create table order_item_fulfillment_history (
                    history_id bigint not null,
                    fulfillment_event_id smallint not null,
					resource_age bigint not null,
                    created_time timestamp not null,
                    created_by bigint not null,
                    updated_time timestamp not null,
                    updated_by bigint not null,
                    order_item_id bigint not null,
                    tracking_uuid uuid not null,
                    fulfillment_id varchar(128) not null,
                    success boolean not null,
                    primary key (history_id)
                );
                create unique index fulfillment_history_order_item_time_index on order_item_fulfillment_history (history_id, order_item_id, updated_time);
                create unique index fulfillment_history_tracking_uuid_index on order_item_fulfillment_history (history_id, tracking_uuid);

                create table order_item_preorder_info (
                    order_item_preorder_info_id bigint not null,
                    order_item_id bigint not null,
                    billing_time timestamp not null,
                    pre_notification_time timestamp default null,
                    release_time timestamp not null,
					resource_age bigint not null,
                    created_time timestamp not null,
                    created_by bigint not null,
                    updated_time timestamp not null,
                    updated_by bigint not null,
                    primary key (order_item_preorder_info_id)
                );
                create unique index preorder_info_order_item_time_index on order_item_preorder_info (order_item_preorder_info_id, order_item_id, billing_time, pre_notification_time, release_time);
                create unique index preorder_info_time_index on order_item_preorder_info (order_item_preorder_info_id, created_time, updated_time);

                create table order_item_preorder_event (
                    event_id bigint not null,
                    action_id smallint not null,
                    status_id smallint not null,
					resource_age bigint not null,
                    created_time timestamp not null,
                    created_by bigint not null,
                    updated_time timestamp not null,
                    updated_by bigint not null,
                    order_item_id bigint not null,
                    primary key (event_id)
                );
                create unique index event_order_item_time_index on order_item_preorder_event (event_id, order_item_id, updated_time);

                create table order_item_preorder_update_history (
                    order_item_preorder_update_history_id bigint not null,
                    order_item_id bigint not null,
                    update_type_id smallint not null,
                    update_column varchar(128) not null,
                    update_before_value varchar(128) not null,
                    update_after_value varchar(128) not null,
                    updated_time timestamp not null,
                    updated_by bigint not null,
                    primary key (order_item_preorder_update_history_id)
                );
                create unique index history_order_item_time_index on order_item_preorder_update_history (order_item_preorder_update_history_id, order_item_id, updated_time);

                create table order_item_tax_info (
                    order_item_tax_info_id bigint not null,
                    order_item_id bigint not null,
                    total_tax decimal not null,
                    tax_code varchar(128) not null,
                    is_tax_inclusive boolean not null,
                    is_tax_exempt boolean not null,
					resource_age bigint not null,
                    created_time timestamp not null,
                    created_by bigint not null,
                    updated_time timestamp not null,
                    updated_by bigint not null,
                    primary key (order_item_tax_info_id)
                );
                create unique index tax_item_time_index on order_item_tax_info (order_item_tax_info_id, order_item_tax_info_id, created_time, updated_time);

                create table order_payment_info (
                    order_payment_info_id bigint not null,
                    order_id bigint not null,
                    payment_method_id varchar(128) not null,
                    payment_method_type varchar(128) not null,
                    success_redirect_url varchar(512) default null,
                    cancel_redirect_url varchar(512) default null,
                    provider_confirm_url varchar(512) default null,
                    is_deleted boolean not null,
					resource_age bigint not null,
                    created_time timestamp not null,
                    created_by bigint not null,
                    updated_time timestamp not null,
                    updated_by bigint not null,
                    primary key (order_payment_info_id)
                );
                create unique index payment_order_index on order_payment_info (order_payment_info_id, order_payment_info_id, payment_method_id);
                create unique index payment_time_index on order_payment_info (order_payment_info_id, created_time, updated_time);

                create table subledger (
                    subledger_id bigint not null,
                    seller_id bigint not null,
                    seller_tax_profile_id bigint default null,
                    product_item_id varchar(128) not null,
                    currency varchar(3) not null,
                    country varchar(2) not null,
                    payout_status_id smallint not null,
                    total_amount decimal not null,
                    start_time timestamp not null,
                    end_time timestamp not null,
                    property varchar(4000) default null,
					resource_age bigint not null,
                    created_time timestamp not null,
                    created_by bigint not null,
                    updated_time timestamp not null,
                    updated_by bigint not null,
                    primary key (subledger_id)
                );

                create table subledger_event (
                    event_id bigint not null,
                    action_id smallint not null,
                    status_id smallint not null,
					resource_age bigint not null,
                    created_time timestamp not null,
                    created_by bigint not null,
                    updated_time timestamp not null,
                    updated_by bigint not null,
                    subledger_id bigint not null,
                    primary key (event_id)
                );

                create table subledger_item (
                    subledger_item_id bigint not null,
                    subledger_id bigint default null,
                    order_item_id bigint not null,
                    product_item_id varchar(128) not null,
                    original_subledger_item_id bigint default null,
                    subledger_item_action smallint not null,
                    status_id smallint not null,
                    total_amount decimal not null,
					resource_age bigint not null,
                    created_time timestamp not null,
                    created_by bigint not null,
                    updated_time timestamp not null,
                    updated_by bigint not null,
                    primary key (subledger_item_id)
                );

                create table subledger_item_event (
                    event_id bigint not null,
                    action_id smallint not null,
                    status_id smallint not null,
					resource_age bigint not null,
                    created_time timestamp not null,
                    created_by bigint not null,
                    updated_time timestamp not null,
                    updated_by bigint not null,
                    subledger_item_id bigint not null,
                    primary key (event_id)
                );

                ]]>
        </sql>
    </changeSet>

    <changeSet author="chriszhu" id = "1.1" context="PREDEPLOY">
        <sql><![CDATA[
                alter table order_item add column developer_revenue decimal default null;

                alter table subledger rename column product_item_id to offer_id;
                alter table subledger add column total_payout_amount decimal not null;
                alter table subledger add column total_quantity bigint not null;

                create index subledger_seller_status_starttime on subledger (seller_id, payout_status_id, start_time, offer_id, country);

                alter table subledger_item rename column product_item_id to offer_id;
                alter table subledger_item add column total_payout_amount decimal not null;
                alter table subledger_item add column total_quantity bigint not null;

                create index subledger_item_status_subledger_id on subledger_item (status_id, subledger_id);
                create index subledger_item_order_item_id on subledger_item (order_item_id);
                ]]>
        </sql>
    </changeSet>

    <changeSet author="chriszhu" id = "1.2" context="PREDEPLOY">
        <sql><![CDATA[
                alter table order_billing_history add column note varchar(4000) default null;
                ]]>
        </sql>
    </changeSet>

    <changeSet author="chriszhu" id = "1.3" context="PREDEPLOY">
        <sql><![CDATA[
                alter table order_item add column preorder_amount decimal default null;
                ]]>
        </sql>
    </changeSet>

    <changeSet author="chriszhu" id = "1.4" context="PREDEPLOY">
        <sql><![CDATA[
                create table order_offer_snapshot (
                    offer_snapshot_id bigint not null,
                    order_id bigint not null,
                    offer_id varchar(128) not null,
                    offer_revision_id varchar(128) not null,
					resource_age bigint not null,
                    created_time timestamp not null,
                    created_by bigint not null,
                    updated_time timestamp not null,
                    updated_by bigint not null,
                    primary key (offer_snapshot_id)
                );
                create unique index offer_snapshot_index on order_offer_snapshot (offer_snapshot_id, order_id);

                create table order_offer_item_snapshot (
                    item_snapshot_id bigint not null,
                    offer_snapshot_id bigint not null,
                    item_id varchar(128) not null,
                    item_revision_id varchar(128) not null,
					resource_age bigint not null,
                    created_time timestamp not null,
                    created_by bigint not null,
                    updated_time timestamp not null,
                    updated_by bigint not null,
                    primary key (offer_snapshot_id)
                );
                create unique index item_snapshot_index on order_offer_item_snapshot (item_snapshot_id, offer_snapshot_id);
                ]]>
        </sql>
    </changeSet>

    <changeSet author="chriszhu" id = "1.5" context="PREDEPLOY">
        <sql><![CDATA[
                drop index user_order_index;
                drop index user_order_time_index;
                create index user_order_time_index on user_order (user_id, updated_time);
                drop index item_order_time_index;
                create index item_order_time_index on order_item (order_id, updated_time);
                drop index discount_order_index;
                create index discount_order_index on order_discount_info (order_id);
                drop index history_order_balance_time_index;
                create index history_order_balance_time_index on order_billing_history (order_id, balance_id, updated_time);
                drop index fulfillment_history_order_item_time_index;
                create index fulfillment_history_order_item_time_index on order_item_fulfillment_history (order_item_id, updated_time);
                drop index fulfillment_history_tracking_uuid_index;
                create index fulfillment_history_tracking_uuid_index on order_item_fulfillment_history (tracking_uuid);
                drop index preorder_info_order_item_time_index;
                create index preorder_info_order_item_time_index on order_item_preorder_info (order_item_id, billing_time, pre_notification_time, release_time);
                drop index preorder_info_time_index;
                create index preorder_info_time_index on order_item_preorder_info (updated_time);
                drop index event_order_item_time_index;
                create index event_order_item_time_index on order_item_preorder_event (order_item_id, updated_time);
                drop index history_order_item_time_index;
                create index history_order_item_time_index on order_item_preorder_update_history (order_item_id, updated_time);
                drop index tax_item_time_index;
                create index tax_item_time_index on order_item_tax_info (order_item_id, updated_time);
                drop index payment_order_index;
                create index payment_order_index on order_payment_info (order_id, payment_method_id);
                drop index payment_time_index;
                create index payment_time_index on order_payment_info (updated_time);
                drop index offer_snapshot_index;
                create index offer_snapshot_index on order_offer_snapshot (order_id);
                drop index item_snapshot_index;
                create index item_snapshot_index on order_offer_item_snapshot (offer_snapshot_id);
                ]]>
        </sql>
    </changeSet>

    <changeSet author="fzhang" id = "1.6" context="PREDEPLOY">
        <sql><![CDATA[
                alter table subledger add column payout_id bigint default null;
                create index subledger_payout_id on subledger (payout_id);
                create index subledger_status_starttime_sellerId on subledger (payout_status_id, start_time, seller_id);
                alter table subledger_event add column properties varchar(4000) default null;
                create index subledger_event_subledger_id on subledger_event (subledger_id);

                create index subledger_item_status_offer_id_created_time on subledger_item(status_id, offer_id, created_time);
                create unique index subledger_offer_seller_start_time_country_currency on subledger (offer_id, seller_id, start_time, country, currency);
            ]]>
        </sql>
    </changeSet>

    <changeSet author="chriszhu" id = "1.7" context="PREDEPLOY">
        <sql><![CDATA[
                alter table order_item_revision add column revoked boolean default false;
                ]]>
        </sql>
    </changeSet>

    <changeSet author="fzhang" id = "1.7" context="PREDEPLOY">
        <sql><![CDATA[
                alter table subledger add column subledger_type smallint default 0;
                alter table subledger add column item_id varchar(128) default null;
                alter table subledger add column tax_amount decimal default 0;
                alter table subledger add column subledger_key varchar(128) default '';
                alter table subledger add column properties varchar(4000) default null;
                drop index subledger_offer_seller_start_time_country_currency;
                create unique index subledger_start_time_seller_item_unique on subledger (start_time, seller_id, item_id, subledger_type, subledger_key, country, currency);

                update subledger_item set status_id = 2 where status_id = 1;
                alter table subledger_item add column subledger_type smallint default 0;
                alter table subledger_item add column item_id varchar(128) default null;
                alter table subledger_item add column tax_amount decimal default 0;
                alter table subledger_item drop column subledger_item_action;
                drop index subledger_item_status_offer_id_created_time;
                create index subledger_item_status_item_id_created_time on subledger_item(status_id, item_id, created_time);
            ]]>
        </sql>
    </changeSet>

    <changeSet author="fzhang" id = "1.8" context="PREDEPLOY">
        <sql><![CDATA[
                create table order_pending_action (
                    pending_action_id bigint not null,
                    action_type smallint not null,
                    is_completed boolean not null,
                    order_id bigint not null,
					resource_age bigint not null,
                    created_time timestamp not null,
                    created_by bigint not null,
                    updated_time timestamp not null,
                    updated_by bigint not null,
                    properties varchar(4000) default null,
                    primary key (pending_action_id)
                );
                create index completed_action_type_created_time on order_pending_action (is_completed, action_type, created_time);
                create index completed_order_id on order_pending_action (is_completed, order_id);
            ]]>
        </sql>
    </changeSet>

    <changeSet author="fzhang" id = "1.9" context="PREDEPLOY">
        <sql><![CDATA[
                alter table order_billing_history add column total_tax decimal default 0;
                alter table order_billing_history add column is_tax_inclusive boolean default false;
            ]]>
        </sql>
    </changeSet>

    <changeSet author="fzhang" id = "1.10" context="PREDEPLOY">
        <sql><![CDATA[
                create unique index subledger_start_time_seller_item_pending_unique on subledger (start_time, seller_id, item_id, subledger_type, subledger_key, country, currency, nullif(payout_status_id = 0, false));
                drop index subledger_start_time_seller_item_unique
            ]]>
        </sql>
    </changeSet>

    <include file="../../common/ping.xml" relativeToChangelogFile="true" />
</databaseChangeLog>
