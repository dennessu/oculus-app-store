<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.junbo.common.rs"/>

    <bean id="asyncHttpClientConfig" class="com.ning.http.client.AsyncHttpClientConfigBean">
        <!-- TODO: a lot of things to configure here -->
        <property name="connectionTimeOutInMs" value="10000"/>
        <property name="requestTimeoutInMs" value="30000"/>
    </bean>

    <!-- due to https://github.com/AsyncHttpClient/async-http-client/issues/484, use the default provider: netty -->
    <bean id="commonAsyncHttpClient" class="com.ning.http.client.AsyncHttpClient">
        <constructor-arg ref="asyncHttpClientConfig" />
    </bean>

    <bean id="commonPathParamTranscoder" class="com.junbo.common.json.IdPathParamTranscoder"/>
    <bean id="commonQueryParamTranscoder" class="com.junbo.common.json.QueryParamTranscoderImpl"/>
    <bean id="commonTranscoder" class="com.junbo.common.json.JsonMessageTranscoder"/>
    <bean id="commonIgnoreUnknownTranscoder" class="com.junbo.common.json.JsonMessageIgnoreUnknownTranscoder"/>
    <bean id="commonExceptionHandler" class="com.junbo.common.error.CommonExceptionHandler">
        <property name="messageTranscoder" ref="commonTranscoder"/>
    </bean>
    <bean id="commonClientProxyHeadersProvider" class="com.junbo.common.client.ClientProxyHeadersProvider">
        <property name="forwardedHeaders">
            <list>
                <value>X-Request-Id</value>
                <value>X-Routing-Path</value>
            </list>
        </property>
    </bean>

    <bean id="baseClientProxy" class="com.junbo.langur.core.client.AbstractClientProxy" abstract="true">
        <property name="client" ref="commonAsyncHttpClient"/>
        <property name="exceptionHandler" ref="commonExceptionHandler"/>
        <property name="executor" ref="junboThreadPool"/>
        <property name="pathParamTranscoder" ref="commonPathParamTranscoder"/>
        <property name="queryParamTranscoder" ref="commonQueryParamTranscoder"/>
        <property name="headersProvider" ref="commonClientProxyHeadersProvider"/>
        <property name="transcoder" ref="commonTranscoder"/>
        <property name="inProcessCallable" value="${common.clientproxy.inProcessCallable}"/>
    </bean>

    <bean id="defaultAfterInvocationFilter" class="com.junbo.common.filter.RestAdapterAfterInvocationFilter" />

    <bean id="oculus40IdShuffle" class="com.junbo.common.shuffle.Oculus40Id" />
    <bean id="oculus48IdShuffle" class="com.junbo.common.shuffle.Oculus48Id" />

    <bean id="cloudantClient" class="com.junbo.common.cloudant.CloudantClient" abstract="true">
        <property name="asyncHttpClient" ref="commonAsyncHttpClient" />
        <property name="marshaller" ref="cloudantDefaultMarshaller" />
        <property name="cloudantDBUri" value="${common.cloudant.url}" />
        <property name="cloudantUser" value="${common.cloudant.user}" />
        <property name="cloudantPassword" value="${common.cloudant.password}" />
        <property name="dbNamePrefix" value="${common.cloudant.dbNamePrefix}" />
        <property name="executor" ref="junboThreadPool"/>
    </bean>

    <bean id="cloudantClientWithSearch" parent="cloudantClient" abstract="true">
        <property name="cloudantDBUri" value="${common.cloudantWithSearch.url}" />
        <property name="cloudantUser" value="${common.cloudantWithSearch.user}" />
        <property name="cloudantPassword" value="${common.cloudantWithSearch.password}" />
    </bean>

    <bean id="cloudantDefaultMarshaller" class="com.junbo.common.cloudant.DefaultCloudantMarshaller" factory-method="instance" />

    <bean id="contextScopeListener" class="com.junbo.common.util.ContextScopeListener" />

    <bean id="polymorphicCloudantMarshaller" class="com.junbo.common.cloudant.PolymorphicCloudantMarshaller" factory-method="instance" />
</beans>
