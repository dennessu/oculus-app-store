<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       ">
    <import resource="transaction.xml"/>

    <bean id="btmDataSourceTemplate" class="bitronix.tm.resource.jdbc.PoolingDataSource" scope="prototype" lazy-init="true" abstract="true">
        <property name="className" value="${sharding.dataSource.driverClassName}"/>
        <property name="minPoolSize" value="${sharding.dataSource.db.minConnections}"/>
        <property name="maxPoolSize" value="${sharding.dataSource.db.maxConnections}"/>
        <property name="driverProperties">
            <props>
                <prop key="user">${sharding.dataSource.db.username}</prop>
                <prop key="password">${sharding.dataSource.db.password}</prop>
            </props>
        </property>
    </bean>

    <bean id="btmDataSource" scope="prototype" lazy-init="true" parent="btmDataSourceTemplate"/>

    <bean id="shardDataSourceMapper" class="com.junbo.sharding.core.ds.ShardDataSourceMapper">
        <property name="dataSourceMapping" value="${sharding.dataSource.mapping}"/>
    </bean>

    <bean id="shardDataSourceFactory" class="com.junbo.sharding.core.ds.ShardDataSourceFactoryImpl">
        <property name="dataSourceBeanName" value="btmDataSource"/>
        <property name="mapper" ref="shardDataSourceMapper"/>
    </bean>

    <bean id="shardDataSourceRegistry" class="com.junbo.sharding.core.ds.ShardDataSourceRegistry">
        <property name="dataSourceFactory" ref="shardDataSourceFactory"/>
    </bean>

    <!-- Sharded SessonFactory for Hibernate-->
    <bean id="shardedSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="jtaTransactionManager" ref="transactionManager"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${sharding.hibernate.dialect}</prop>
                <prop key="hibernate.max_fetch_depth">${sharding.hibernate.max_fetch_depth}</prop>
                <prop key="hibernate.jdbc.fetch_size">${sharding.hibernate.fetch_size}</prop>
                <prop key="hibernate.jdbc.batch_size">${sharding.hibernate.batch_size}</prop>
                <prop key="hibernate.show_sql">${sharding.hibernate.show_sql}</prop>
            </props>
        </property>
    </bean>

    <bean id="sessionFactoryWrapper" class="com.junbo.sharding.core.hibernate.SessionFactoryWrapper">
        <property name="dataSourceRegistry" ref="shardDataSourceRegistry"/>
        <property name="sessionFactoryBeanName" value="shardedSessionFactory"/>
        <property name="packagesToScanMapper" ref="packagesToScanMapper"/>
    </bean>

    <bean id="packagesToScanMapper" class="com.junbo.sharding.core.util.PackagesToScanMapper" scope="singleton">
        <property name="properties">
            <props>
                <prop key="payment">
                    com.junbo.payment.db;
                    com.junbo.payment.db.dao.payment;
                    com.junbo.payment.db.entity.payment;
                    com.junbo.payment.db.dao.paymentinstrument;
                    com.junbo.payment.entity.paymentinstrument;
                </prop>
                <prop key="subscription">com.junbo.subscription.db.entity</prop>
                <prop key="order">com.junbo.order.db.entity</prop>
                <prop key="identity">com.junbo.identity.data.*</prop>
                <prop key="fulfilment">com.junbo.fulfilment.db.entity</prop>
                <prop key="ewallet">com.junbo.ewallet.db.entity</prop>
                <prop key="entitlement">com.junbo.entitlement.db.entity</prop>
                <prop key="email">com.junbo.email.db.entity</prop>
                <prop key="drm">com.junbo.drm.db.entity</prop>
                <prop key="catalog">com.junbo.catalog.db.entity</prop>
                <prop key="cart">com.junbo.cart.db.entity</prop>
                <prop key="billing">com.junbo.billing.db.*</prop>

                <prop key="test">com.junbo.sharding.test.data.dao</prop>
            </props>
        </property>
    </bean>

</beans>