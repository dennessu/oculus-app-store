<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       ">

    <bean id="baseRepository" class="com.junbo.sharding.dualwrite.RepositoryFactoryBean" abstract="true">
        <property name="sqlPendingActionRepository" ref="pendingActionSqlRepo" />
        <property name="cloudantPendingActionRepository" ref="pendingActionCloudantRepo" />
        <property name="sqlUseAsyncDualWrite" value="false" />
        <property name="platformTransactionManager" ref="transactionManager" />
        <property name="transactionManager" ref="simpleTransactionManager" />
    </bean>

    <bean id="pendingActionMapper" class="com.junbo.sharding.dualwrite.data.PendingActionMapper">
        <property name="marshaller" ref="cloudantDefaultMarshaller" />
    </bean>

    <bean id="pendingActionSqlRepo" class="com.junbo.sharding.dualwrite.data.PendingActionRepositorySqlImpl">
        <property name="sessionFactory" ref="dualwriteSessionFactory"/>
        <property name="shardAlgorithm" ref="externalShardAlgorithm"/>
        <property name="hardDelete" value="false" />
        <property name="mapper" ref="pendingActionMapper" />
    </bean>

    <bean id="pendingActionCloudantRepo" class="com.junbo.sharding.dualwrite.data.PendingActionRepositoryCloudantImpl" parent="cloudantClient">
        <property name="dbName" value="dualwrite_pending_action"/>
        <property name="hardDelete" value="false" />
        <property name="mapper" ref="pendingActionMapper" />
    </bean>

    <bean id="dualwriteDataSource" class="com.junbo.sharding.hibernate.ShardMultiTenantConnectionProviderFactoryBean">
        <property name="jdbcUrls" value="${dualwrite.db.jdbcUrls}"/>

        <property name="uniqueName" value="jdbc/dualwrite"/>
        <property name="className" value="${dualwrite.db.driverClassName}"/>
        <property name="minPoolSize" value="${dualwrite.db.minPoolSize}"/>
        <property name="maxPoolSize" value="${dualwrite.db.maxPoolSize}"/>

        <property name="driverProperties">
            <props>
                <prop key="user">${dualwrite.db.username}</prop>
                <prop key="password">${dualwrite.db.password}</prop>
            </props>
        </property>
    </bean>

    <bean id="dualwriteSessionFactory" class="com.junbo.sharding.hibernate.LocalSessionFactoryWithListenerBean">
        <property name="jtaTransactionManager" ref="transactionManager"/>
        <property name="hibernateProperties">
            <map>
                <entry key="hibernate.dialect" value="${dualwrite.hibernate.dialect}"/>
                <entry key="hibernate.max_fetch_depth" value="${dualwrite.hibernate.max_fetch_depth}"/>
                <entry key="hibernate.jdbc.fetch_size" value="${dualwrite.hibernate.jdbc.fetch_size}"/>
                <entry key="hibernate.jdbc.batch_size" value="${dualwrite.hibernate.jdbc.batch_size}"/>
                <entry key="hibernate.show_sql" value="${dualwrite.hibernate.show_sql}"/>

                <entry key="hibernate.multiTenancy" value="SCHEMA"/>
                <entry key="hibernate.current_session_context_class" value="com.junbo.sharding.hibernate.MultiTenantJTASessionContext"/>
                <entry key="hibernate.tenant_identifier_resolver" value="com.junbo.sharding.hibernate.ShardCurrentTenantIdentifierResolver"/>
                <entry key="hibernate.multi_tenant_connection_provider" value-ref="dualwriteDataSource"/>
                <entry key="hibernate.temp.use_jdbc_metadata_defaults" value="false"/>
            </map>
        </property>
        <property name="packagesToScan" value="com.junbo.sharding.dualwrite.data"/>
    </bean>

</beans>
