ª16:04:21.576 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
ÿ16:04:21.588 [Test worker] DEBUG o.s.t.a.AnnotationTransactionAttributeSource - Adding transactional method 'OculusGlobalCounterInDBImpl.getAndIncrease' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
â16:04:21.590 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
–16:04:21.591 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Suspending current transaction, creating new transaction with name [com.junbo.sharding.id.oculus.OculusGlobalCounterInDBImpl.getAndIncrease]
˘16:04:21.591 [Test worker] DEBUG b.tm.BitronixTransactionManager - suspending transaction a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1BA00000001], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
≈16:04:21.591 [Test worker] DEBUG b.tm.BitronixTransactionManager - clearing current thread context: a ThreadContext (204168059) with transaction a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1BA00000001], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014), default timeout 60s
_16:04:21.592 [Test worker] DEBUG b.tm.BitronixTransactionManager - beginning a new transaction
d16:04:21.592 [Test worker] DEBUG b.tm.BitronixTransactionManager - dumping 1 transaction context(s)
‚16:04:21.592 [Test worker] DEBUG b.tm.BitronixTransactionManager - a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1BA00000001], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
ñ16:04:21.592 [Test worker] DEBUG bitronix.tm.BitronixTransaction - creating new transaction with GTRID [737072696E672D62746D00000145172AF1D800000002]
≠16:04:21.592 [Test worker] DEBUG bitronix.tm.internal.ThreadContext - assigning <a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=NO_TRANSACTION, 0 resource(s) enlisted (started null)> to <a ThreadContext (204168059) with transaction null, default timeout 60s>
i16:04:21.592 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to ACTIVE
ö16:04:21.592 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from NO_TRANSACTION to ACTIVE - executing 0 listener(s)
™16:04:21.592 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - scheduling transaction timeout task on a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014) for Mon Mar 31 16:05:21 CST 2014
Û16:04:21.592 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - removing task by a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Ã16:04:21.592 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - scheduled a TransactionTimeoutTask on a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014) scheduled for Mon Mar 31 16:05:21 CST 2014, total task(s) queued: 5
y16:04:21.592 [Test worker] DEBUG b.tm.BitronixTransactionManager - begun new transaction at Mon Mar 31 16:04:21 CST 2014
ƒ16:04:21.600 [Test worker] DEBUG o.s.t.a.AnnotationTransactionAttributeSource - Adding transactional method 'IdGlobalCounterDAOImpl.get' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
â16:04:21.600 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
i16:04:21.600 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Participating in existing transaction
÷16:04:21.665 [bitronix-async-jmx-worker] DEBUG b.tm.utils.ManagementRegistrar - Calling ManagementRegisterCommand on object with name bitronix.tm:type=Transaction,Gtrid=737072696E672D62746D00000145172AF1BA00000001
÷16:04:21.668 [bitronix-async-jmx-worker] DEBUG b.tm.utils.ManagementRegistrar - Calling ManagementRegisterCommand on object with name bitronix.tm:type=Transaction,Gtrid=737072696E672D62746D00000145172AF1D800000002
º16:04:21.686 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@55405cca
p16:04:21.686 [Test worker] DEBUG o.h.e.t.i.TransactionCoordinatorImpl - successfully registered Synchronization
o16:04:21.687 [Test worker] DEBUG org.hibernate.internal.SessionImpl - Opened session at timestamp: 13962530616
¶16:04:21.687 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@5fb8b872
]16:04:21.752 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ16:04:21.753 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (3 still available)
ƒ16:04:21.753 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (3 still available)
í16:04:21.753 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF1D800000002]
Ä16:04:21.753 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - no NOT_ACCESSIBLE connection enlisted in this transaction
…16:04:21.764 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - getting IN_POOL connection from an XAPool of resource jdbc/sharding with 3 connection(s) (3 still available), waiting if necessary
Ø16:04:21.765 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 - closing time: 1396253119380, now time: 1396253061765
Ω16:04:21.765 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found IN_POOL connection a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
Ó16:04:21.765 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
´16:04:21.765 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
˝16:04:21.765 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
≠16:04:21.765 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Ú16:04:21.765 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 to the accessible pool
ô16:04:21.765 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@11ccf811 was in state IN_POOL, testing it
Ä16:04:21.765 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - no query to test connection of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811, skipping test
Ì16:04:21.765 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Õ16:04:21.765 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\16:04:21.765 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å16:04:21.766 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Ö16:04:21.766 [Test worker] DEBUG b.tm.resource.ResourceRegistrar - XAResource org.postgresql.xa.PGXAConnection@11ccf811 does not belong to any resource of a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (3 still available)
ï16:04:21.767 [Test worker] DEBUG b.tm.resource.ResourceRegistrar - XAResource org.postgresql.xa.PGXAConnection@11ccf811 belongs to a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 that itself belongs to a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
…16:04:21.768 [Test worker] DEBUG b.tm.internal.XAResourceManager - creating new branch with a Bitronix XID [737072696E672D62746D00000145172AF1D800000002 : 737072696E672D62746D00000145172AF28700000003]
ø16:04:21.768 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - assigning <a Bitronix XID [737072696E672D62746D00000145172AF1D800000002 : 737072696E672D62746D00000145172AF28700000003]> to <an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@11ccf811 with XID null>
ø16:04:21.768 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - starting an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@11ccf811 with XID a Bitronix XID [737072696E672D62746D00000145172AF1D800000002 : 737072696E672D62746D00000145172AF28700000003] with NOFLAGS
»16:04:21.768 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - started an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@11ccf811 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF1D800000002 : 737072696E672D62746D00000145172AF28700000003] with NOFLAGS
‚16:04:21.768 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - putting XAResourceHolderState [an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@11ccf811 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF1D800000002 : 737072696E672D62746D00000145172AF28700000003]] on a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Õ16:04:21.768 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - GTRID [737072696E672D62746D00000145172AF1D800000002] previously unknown to a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811, adding it to the resource's transactions list
|16:04:21.793 [Test worker] DEBUG org.hibernate.SQL - select * from id_global_counter where shard_id = ? and option_mode = ?
RHibernate: select * from id_global_counter where shard_id = ? and option_mode = ?
f16:04:21.816 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 1 -> shardId [1]
i16:04:21.820 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 2 -> optionMode [2]
Q16:04:21.878 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
ä16:04:21.917 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.sharding.id.model.IdGlobalCounterEntity#1]
]16:04:21.928 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ16:04:21.929 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@5a74fae4
‰16:04:21.931 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Å16:04:21.932 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
à16:04:21.932 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Å16:04:21.932 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
à16:04:21.932 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
16:04:21.932 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
§16:04:21.934 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Ç16:04:21.935 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
µ16:04:21.935 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
l16:04:21.935 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ16:04:21.935 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from the accessible pool
á16:04:21.936 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
∏16:04:21.936 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
¯16:04:21.936 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 to the inaccessible pool
Á16:04:21.936 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
\16:04:21.936 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
Ü16:04:21.937 [Test worker] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
ï16:04:21.939 [Test worker] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.junbo.sharding.id.model.IdGlobalCounterEntity#1]
î16:04:21.942 [Test worker] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.junbo.sharding.id.model.IdGlobalCounterEntity#1]
h16:04:21.942 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
Õ16:04:21.945 [Test worker] DEBUG o.s.t.a.AnnotationTransactionAttributeSource - Adding transactional method 'IdGlobalCounterDAOImpl.saveOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
â16:04:21.946 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
i16:04:21.946 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Participating in existing transaction
h16:04:21.948 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d16:04:21.951 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ16:04:21.959 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
ä16:04:21.959 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U16:04:21.961 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
¶16:04:21.961 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.sharding.id.model.IdGlobalCounterEntity{id=1, shardId=1, globalCounter=43, optionMode=2}
|16:04:21.961 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Changes must be flushed to space: id_global_counter
]16:04:22.097 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ16:04:22.098 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ƒ16:04:22.098 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
í16:04:22.098 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF1D800000002]
Ö16:04:22.098 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
ô16:04:22.098 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
ï16:04:22.104 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D00000145172AF1D800000002
ò16:04:22.104 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
À16:04:22.104 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ı16:04:22.104 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
π16:04:22.105 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
¸16:04:22.105 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from the inaccessible pool
ã16:04:22.105 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
¥16:04:22.105 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
â16:04:22.105 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
©16:04:22.105 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Ú16:04:22.105 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 to the accessible pool
®16:04:22.105 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@11ccf811 was in state NOT_ACCESSIBLE, no need to test it
Ì16:04:22.105 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Õ16:04:22.105 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\16:04:22.105 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å16:04:22.105 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Ú16:04:22.106 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@11ccf811 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF1D800000002 : 737072696E672D62746D00000145172AF28700000003]
á16:04:22.106 [Test worker] DEBUG org.hibernate.SQL - update id_global_counter set global_count=?, option_mode=?, shard_id=? where id=?
]Hibernate: update id_global_counter set global_count=?, option_mode=?, shard_id=? where id=?
`16:04:22.137 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w16:04:22.144 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
]16:04:22.144 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ16:04:22.144 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@5a74fae4
‰16:04:22.144 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Å16:04:22.144 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
à16:04:22.144 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Å16:04:22.264 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
à16:04:22.264 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
16:04:22.264 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
§16:04:22.264 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Ç16:04:22.264 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
µ16:04:22.264 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
l16:04:22.264 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ16:04:22.265 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from the accessible pool
á16:04:22.265 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
∏16:04:22.265 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
¯16:04:22.265 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 to the inaccessible pool
Á16:04:22.265 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
\16:04:22.265 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
]16:04:22.266 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ16:04:22.266 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ƒ16:04:22.266 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
í16:04:22.266 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF1D800000002]
Ö16:04:22.266 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
ô16:04:22.266 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
ï16:04:22.266 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D00000145172AF1D800000002
ò16:04:22.266 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
À16:04:22.266 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ı16:04:22.266 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
π16:04:22.266 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
¸16:04:22.266 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from the inaccessible pool
ã16:04:22.266 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
¥16:04:22.271 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
â16:04:22.271 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
©16:04:22.271 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Ú16:04:22.271 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 to the accessible pool
®16:04:22.271 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@11ccf811 was in state NOT_ACCESSIBLE, no need to test it
Ì16:04:22.271 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Õ16:04:22.271 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\16:04:22.275 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å16:04:22.275 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Ú16:04:22.276 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@11ccf811 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF1D800000002 : 737072696E672D62746D00000145172AF28700000003]
|16:04:22.276 [Test worker] DEBUG org.hibernate.SQL - select * from id_global_counter where shard_id = ? and option_mode = ?
RHibernate: select * from id_global_counter where shard_id = ? and option_mode = ?
f16:04:22.277 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 1 -> shardId [1]
i16:04:22.286 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 2 -> optionMode [2]
Q16:04:22.289 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
ä16:04:22.289 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.sharding.id.model.IdGlobalCounterEntity#1]
]16:04:22.290 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ16:04:22.290 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@5a74fae4
‰16:04:22.290 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Å16:04:22.290 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
à16:04:22.290 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Å16:04:22.290 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
à16:04:22.290 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
16:04:22.290 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
§16:04:22.290 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Ç16:04:22.290 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
µ16:04:22.290 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
l16:04:22.290 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ16:04:22.290 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from the accessible pool
á16:04:22.290 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
∏16:04:22.291 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
¯16:04:22.291 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 to the inaccessible pool
Á16:04:22.291 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
\16:04:22.291 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
h16:04:22.291 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
h16:04:22.307 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d16:04:22.307 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ16:04:22.308 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
ä16:04:22.310 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U16:04:22.310 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
¶16:04:22.310 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.sharding.id.model.IdGlobalCounterEntity{id=1, shardId=1, globalCounter=43, optionMode=2}
|16:04:22.310 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Changes must be flushed to space: id_global_counter
]16:04:22.310 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ16:04:22.311 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ƒ16:04:22.311 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
í16:04:22.311 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF1D800000002]
Ö16:04:22.311 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
ô16:04:22.321 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
ï16:04:22.321 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D00000145172AF1D800000002
ò16:04:22.322 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
À16:04:22.322 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ı16:04:22.324 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
π16:04:22.325 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
¸16:04:22.325 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from the inaccessible pool
ã16:04:22.325 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
¥16:04:22.325 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
â16:04:22.325 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
©16:04:22.327 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Ú16:04:22.327 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 to the accessible pool
®16:04:22.329 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@11ccf811 was in state NOT_ACCESSIBLE, no need to test it
Ì16:04:22.329 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Õ16:04:22.329 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\16:04:22.330 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å16:04:22.332 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Ú16:04:22.334 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@11ccf811 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF1D800000002 : 737072696E672D62746D00000145172AF28700000003]
á16:04:22.334 [Test worker] DEBUG org.hibernate.SQL - update id_global_counter set global_count=?, option_mode=?, shard_id=? where id=?
]Hibernate: update id_global_counter set global_count=?, option_mode=?, shard_id=? where id=?
`16:04:22.335 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w16:04:22.339 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
]16:04:22.339 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ16:04:22.339 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@5a74fae4
‰16:04:22.339 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Å16:04:22.341 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
à16:04:22.341 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Å16:04:22.341 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
à16:04:22.342 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
16:04:22.343 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
§16:04:22.344 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Ç16:04:22.344 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
µ16:04:22.347 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
l16:04:22.348 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ16:04:22.349 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from the accessible pool
á16:04:22.349 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
∏16:04:22.350 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
¯16:04:22.350 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 to the inaccessible pool
Á16:04:22.350 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
\16:04:22.351 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
]16:04:22.352 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ16:04:22.352 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ƒ16:04:22.352 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
í16:04:22.352 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF1D800000002]
Ö16:04:22.354 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
ô16:04:22.354 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
ï16:04:22.354 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D00000145172AF1D800000002
ò16:04:22.354 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
À16:04:22.354 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ı16:04:22.355 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
π16:04:22.355 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
¸16:04:22.356 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from the inaccessible pool
ã16:04:22.356 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
¥16:04:22.357 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
â16:04:22.357 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
©16:04:22.357 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Ú16:04:22.357 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 to the accessible pool
®16:04:22.358 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@11ccf811 was in state NOT_ACCESSIBLE, no need to test it
Ì16:04:22.359 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Õ16:04:22.359 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\16:04:22.359 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å16:04:22.359 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Ú16:04:22.359 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@11ccf811 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF1D800000002 : 737072696E672D62746D00000145172AF28700000003]
|16:04:22.360 [Test worker] DEBUG org.hibernate.SQL - select * from id_global_counter where shard_id = ? and option_mode = ?
RHibernate: select * from id_global_counter where shard_id = ? and option_mode = ?
f16:04:22.360 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 1 -> shardId [1]
i16:04:22.361 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 2 -> optionMode [2]
Q16:04:22.362 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
ä16:04:22.363 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.sharding.id.model.IdGlobalCounterEntity#1]
]16:04:22.363 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ16:04:22.364 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@5a74fae4
‰16:04:22.364 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Å16:04:22.364 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
à16:04:22.364 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Å16:04:22.364 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
à16:04:22.365 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
16:04:22.365 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
§16:04:22.366 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Ç16:04:22.366 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
µ16:04:22.366 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
l16:04:22.366 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ16:04:22.367 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from the accessible pool
á16:04:22.367 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
∏16:04:22.368 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
¯16:04:22.368 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 to the inaccessible pool
Á16:04:22.368 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
\16:04:22.368 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
h16:04:22.368 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
h16:04:22.369 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d16:04:22.369 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ16:04:22.370 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
ä16:04:22.370 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U16:04:22.370 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
¶16:04:22.370 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.sharding.id.model.IdGlobalCounterEntity{id=1, shardId=1, globalCounter=43, optionMode=2}
]16:04:22.370 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ16:04:22.370 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ƒ16:04:22.370 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
í16:04:22.370 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF1D800000002]
Ö16:04:22.370 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
ô16:04:22.370 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
ï16:04:22.370 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D00000145172AF1D800000002
ò16:04:22.371 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
À16:04:22.371 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ı16:04:22.371 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
π16:04:22.371 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
¸16:04:22.371 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from the inaccessible pool
ã16:04:22.371 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
¥16:04:22.371 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
â16:04:22.371 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
©16:04:22.371 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Ú16:04:22.371 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 to the accessible pool
®16:04:22.371 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@11ccf811 was in state NOT_ACCESSIBLE, no need to test it
Ì16:04:22.371 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Õ16:04:22.371 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\16:04:22.371 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å16:04:22.372 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Ú16:04:22.372 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@11ccf811 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF1D800000002 : 737072696E672D62746D00000145172AF28700000003]
|16:04:22.372 [Test worker] DEBUG org.hibernate.SQL - select * from id_global_counter where shard_id = ? and option_mode = ?
RHibernate: select * from id_global_counter where shard_id = ? and option_mode = ?
f16:04:22.373 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 1 -> shardId [1]
i16:04:22.373 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 2 -> optionMode [2]
Q16:04:22.374 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
ä16:04:22.375 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.sharding.id.model.IdGlobalCounterEntity#1]
]16:04:22.375 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ16:04:22.375 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@5a74fae4
‰16:04:22.375 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Å16:04:22.375 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
à16:04:22.375 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Å16:04:22.375 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
à16:04:22.375 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
16:04:22.376 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
§16:04:22.376 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Ç16:04:22.376 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
µ16:04:22.376 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
l16:04:22.376 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ16:04:22.376 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from the accessible pool
á16:04:22.376 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
∏16:04:22.376 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
¯16:04:22.376 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 to the inaccessible pool
Á16:04:22.401 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
\16:04:22.401 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
h16:04:22.401 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
a16:04:22.402 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Initiating transaction commit
˘16:04:22.402 [Test worker] DEBUG b.tm.BitronixTransactionManager - committing transaction a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
â16:04:22.402 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - cancelling transaction timeout task on a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Û16:04:22.402 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - removing task by a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
“16:04:22.402 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - cancelled a TransactionTimeoutTask on a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014) scheduled for Mon Mar 31 16:05:21 CST 2014, total task(s) still queued: 4
v16:04:22.402 [Test worker] DEBUG bitronix.tm.BitronixTransaction - before completion, 4 synchronization(s) to execute
î16:04:22.403 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a DeferredReleaseSynchronization of a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
û16:04:22.403 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a ClearContextSynchronization for a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
∫16:04:22.403 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@55405cca
h16:04:22.403 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d16:04:22.403 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ16:04:22.404 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
ä16:04:22.404 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U16:04:22.404 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
¶16:04:22.404 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.sharding.id.model.IdGlobalCounterEntity{id=1, shardId=1, globalCounter=43, optionMode=2}
]16:04:22.404 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
§16:04:22.404 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@5fb8b872
“16:04:22.404 [Test worker] DEBUG bitronix.tm.BitronixTransaction - found unclosed resource to delist: an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@11ccf811 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF1D800000002 : 737072696E672D62746D00000145172AF28700000003]
¬16:04:22.404 [Test worker] DEBUG b.tm.internal.XAResourceManager - delisting resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@11ccf811 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF1D800000002 : 737072696E672D62746D00000145172AF28700000003]
«16:04:22.404 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ending an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@11ccf811 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF1D800000002 : 737072696E672D62746D00000145172AF28700000003] with SUCCESS
∆16:04:22.405 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ended an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@11ccf811 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF1D800000002 : 737072696E672D62746D00000145172AF28700000003] with SUCCESS
f16:04:22.405 [Test worker] DEBUG bitronix.tm.BitronixTransaction - committing, 1 enlisted resource(s)
l16:04:22.405 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to PREPARING
ï16:04:22.405 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from ACTIVE to PREPARING - executing 0 listener(s)
k16:04:22.405 [Test worker] DEBUG bitronix.tm.twopc.Preparer - 1 resource enlisted, no prepare needed (1PC)
k16:04:22.405 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to PREPARED
ó16:04:22.405 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from PREPARING to PREPARED - executing 0 listener(s)
\16:04:22.405 [Test worker] DEBUG bitronix.tm.BitronixTransaction - 1 interested resource(s)
m16:04:22.405 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to COMMITTING
ò16:04:22.405 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from PREPARED to COMMITTING - executing 0 listener(s)
ó16:04:22.405 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - executing phase on 1 resource(s) enlisted in 1 position(s) in reverse position order
d16:04:22.406 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - running 1 job(s) for position '1'
€16:04:22.406 [Test worker] DEBUG bitronix.tm.twopc.Committer - committing resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@11ccf811 (ended) with XID a Bitronix XID [737072696E672D62746D00000145172AF1D800000002 : 737072696E672D62746D00000145172AF28700000003] (with one-phase optimization)
º16:04:22.449 [Test worker] DEBUG bitronix.tm.twopc.Committer - committed resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@11ccf811 (ended) with XID a Bitronix XID [737072696E672D62746D00000145172AF1D800000002 : 737072696E672D62746D00000145172AF28700000003]
e16:04:22.449 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - phase executed with 0 exception(s)
`16:04:22.450 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - ran 1 job(s) for position '1'
t16:04:22.450 [Test worker] DEBUG bitronix.tm.twopc.Committer - phase 2 commit executed on resources [jdbc/sharding]
u16:04:22.451 [Test worker] DEBUG bitronix.tm.twopc.Committer - phase 2 commit succeeded on resources [jdbc/sharding]
l16:04:22.451 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to COMMITTED
ô16:04:22.451 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from COMMITTING to COMMITTED - executing 0 listener(s)
¸16:04:22.451 [Test worker] DEBUG bitronix.tm.BitronixTransaction - successfully committed a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=COMMITTED, 1 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
u16:04:22.451 [Test worker] DEBUG b.tm.internal.XAResourceManager - clearing XAResourceHolder states on 1 resource(s)
Ô16:04:22.451 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - removing XAResourceHolderState of xid a Bitronix XID [737072696E672D62746D00000145172AF1D800000002 : 737072696E672D62746D00000145172AF28700000003] from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
∫16:04:22.451 [Test worker] DEBUG b.tm.internal.XAResourceManager - resource a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 cleaned up all transaction states for GTRID [737072696E672D62746D00000145172AF1D800000002]
u16:04:22.451 [Test worker] DEBUG bitronix.tm.BitronixTransaction - after completion, 4 synchronization(s) to execute
–16:04:22.451 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@55405cca with status=COMMITTED
j16:04:22.451 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Aggressively releasing JDBC connection
m16:04:22.452 [Test worker] DEBUG o.h.e.j.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
∫16:04:22.453 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@5fb8b872 with status=COMMITTED
∑16:04:22.453 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a ClearContextSynchronization for a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=COMMITTED, 0 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014) with status=COMMITTED
—16:04:22.453 [Test worker] DEBUG b.tm.BitronixTransactionManager - clearing transaction from thread context: a ThreadContext (204168059) with transaction a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=COMMITTED, 0 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014), default timeout 60s
ó16:04:22.453 [Test worker] DEBUG b.tm.BitronixTransactionManager - removing transaction from in-flight transactions: a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1D800000002], status=COMMITTED, 0 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
™16:04:22.454 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a DeferredReleaseSynchronization of a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 with status=COMMITTED
Ü16:04:22.454 [Test worker] DEBUG b.t.r.c.DeferredReleaseSynchronization - DeferredReleaseSynchronization requeuing a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
∂16:04:22.454 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
l16:04:22.454 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
¸16:04:22.454 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 from the inaccessible pool
à16:04:22.454 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Æ16:04:22.454 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
Ó16:04:22.454 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811 to the available pool
˛16:04:22.454 [Test worker] DEBUG b.t.r.c.DeferredReleaseSynchronization - DeferredReleaseSynchronization requeued a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@11ccf811
à16:04:22.456 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Resuming suspended transaction after completion of inner transaction
Î16:04:22.456 [Test worker] DEBUG b.tm.BitronixTransactionManager - resuming a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1BA00000001], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Ω16:04:22.457 [Test worker] DEBUG bitronix.tm.internal.ThreadContext - assigning <a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1BA00000001], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)> to <a ThreadContext (204168059) with transaction null, default timeout 60s>
â16:04:22.482 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
–16:04:22.482 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Suspending current transaction, creating new transaction with name [com.junbo.sharding.id.oculus.OculusGlobalCounterInDBImpl.getAndIncrease]
˘16:04:22.482 [Test worker] DEBUG b.tm.BitronixTransactionManager - suspending transaction a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1BA00000001], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
≈16:04:22.482 [Test worker] DEBUG b.tm.BitronixTransactionManager - clearing current thread context: a ThreadContext (204168059) with transaction a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1BA00000001], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014), default timeout 60s
_16:04:22.482 [Test worker] DEBUG b.tm.BitronixTransactionManager - beginning a new transaction
d16:04:22.482 [Test worker] DEBUG b.tm.BitronixTransactionManager - dumping 1 transaction context(s)
‚16:04:22.482 [Test worker] DEBUG b.tm.BitronixTransactionManager - a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1BA00000001], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
ñ16:04:22.482 [Test worker] DEBUG bitronix.tm.BitronixTransaction - creating new transaction with GTRID [737072696E672D62746D00000145172AF55200000004]
≠16:04:22.482 [Test worker] DEBUG bitronix.tm.internal.ThreadContext - assigning <a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=NO_TRANSACTION, 0 resource(s) enlisted (started null)> to <a ThreadContext (204168059) with transaction null, default timeout 60s>
i16:04:22.482 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to ACTIVE
ö16:04:22.482 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from NO_TRANSACTION to ACTIVE - executing 0 listener(s)
™16:04:22.483 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - scheduling transaction timeout task on a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014) for Mon Mar 31 16:05:22 CST 2014
Û16:04:22.483 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - removing task by a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ã16:04:22.483 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - scheduled a TransactionTimeoutTask on a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014) scheduled for Mon Mar 31 16:05:22 CST 2014, total task(s) queued: 5
y16:04:22.483 [Test worker] DEBUG b.tm.BitronixTransactionManager - begun new transaction at Mon Mar 31 16:04:22 CST 2014
â16:04:22.483 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
i16:04:22.483 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Participating in existing transaction
ª16:04:22.483 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@27865a4
p16:04:22.483 [Test worker] DEBUG o.h.e.t.i.TransactionCoordinatorImpl - successfully registered Synchronization
o16:04:22.483 [Test worker] DEBUG org.hibernate.internal.SessionImpl - Opened session at timestamp: 13962530624
¶16:04:22.483 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@129a6972
]16:04:22.484 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ16:04:22.484 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (3 still available)
ƒ16:04:22.484 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (3 still available)
í16:04:22.484 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF55200000004]
Ä16:04:22.484 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - no NOT_ACCESSIBLE connection enlisted in this transaction
…16:04:22.484 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - getting IN_POOL connection from an XAPool of resource jdbc/sharding with 3 connection(s) (3 still available), waiting if necessary
Ø16:04:22.484 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 - closing time: 1396253119410, now time: 1396253062484
Ω16:04:22.484 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found IN_POOL connection a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
Ó16:04:22.484 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
´16:04:22.484 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
˝16:04:22.484 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
≠16:04:22.484 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
ÿ16:04:22.491 [bitronix-async-jmx-worker] DEBUG b.tm.utils.ManagementRegistrar - Calling ManagementUnregisterCommand on object with name bitronix.tm:type=Transaction,Gtrid=737072696E672D62746D00000145172AF1D800000002
÷16:04:22.494 [bitronix-async-jmx-worker] DEBUG b.tm.utils.ManagementRegistrar - Calling ManagementRegisterCommand on object with name bitronix.tm:type=Transaction,Gtrid=737072696E672D62746D00000145172AF55200000004
Ú16:04:22.493 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 to the accessible pool
ô16:04:22.495 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@20db8d63 was in state IN_POOL, testing it
Ä16:04:22.495 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - no query to test connection of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63, skipping test
Ì16:04:22.495 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Õ16:04:22.495 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\16:04:22.495 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å16:04:22.495 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ö16:04:22.495 [Test worker] DEBUG b.tm.resource.ResourceRegistrar - XAResource org.postgresql.xa.PGXAConnection@20db8d63 does not belong to any resource of a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (3 still available)
ï16:04:22.495 [Test worker] DEBUG b.tm.resource.ResourceRegistrar - XAResource org.postgresql.xa.PGXAConnection@20db8d63 belongs to a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 that itself belongs to a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
…16:04:22.495 [Test worker] DEBUG b.tm.internal.XAResourceManager - creating new branch with a Bitronix XID [737072696E672D62746D00000145172AF55200000004 : 737072696E672D62746D00000145172AF55F00000005]
ø16:04:22.495 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - assigning <a Bitronix XID [737072696E672D62746D00000145172AF55200000004 : 737072696E672D62746D00000145172AF55F00000005]> to <an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@20db8d63 with XID null>
ø16:04:22.496 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - starting an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@20db8d63 with XID a Bitronix XID [737072696E672D62746D00000145172AF55200000004 : 737072696E672D62746D00000145172AF55F00000005] with NOFLAGS
»16:04:22.496 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - started an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@20db8d63 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF55200000004 : 737072696E672D62746D00000145172AF55F00000005] with NOFLAGS
‚16:04:22.496 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - putting XAResourceHolderState [an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@20db8d63 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF55200000004 : 737072696E672D62746D00000145172AF55F00000005]] on a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Õ16:04:22.496 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - GTRID [737072696E672D62746D00000145172AF55200000004] previously unknown to a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63, adding it to the resource's transactions list
|16:04:22.496 [Test worker] DEBUG org.hibernate.SQL - select * from id_global_counter where shard_id = ? and option_mode = ?
RHibernate: select * from id_global_counter where shard_id = ? and option_mode = ?
f16:04:22.496 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 0 -> shardId [1]
i16:04:22.496 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 2 -> optionMode [2]
Q16:04:22.501 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
ä16:04:22.502 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.sharding.id.model.IdGlobalCounterEntity#2]
]16:04:22.503 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ16:04:22.503 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@34709095
‰16:04:22.503 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Å16:04:22.503 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
à16:04:22.503 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Å16:04:22.503 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
à16:04:22.503 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
16:04:22.503 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
§16:04:22.503 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ç16:04:22.503 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
µ16:04:22.503 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
l16:04:22.503 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ16:04:22.503 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from the accessible pool
á16:04:22.504 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
∏16:04:22.504 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
¯16:04:22.504 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 to the inaccessible pool
Á16:04:22.504 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
\16:04:22.504 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
Ü16:04:22.504 [Test worker] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
ï16:04:22.504 [Test worker] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.junbo.sharding.id.model.IdGlobalCounterEntity#2]
î16:04:22.504 [Test worker] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.junbo.sharding.id.model.IdGlobalCounterEntity#2]
h16:04:22.504 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
â16:04:22.510 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
i16:04:22.510 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Participating in existing transaction
h16:04:22.511 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d16:04:22.511 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ16:04:22.511 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
ä16:04:22.511 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U16:04:22.511 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
¶16:04:22.512 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.sharding.id.model.IdGlobalCounterEntity{id=2, shardId=0, globalCounter=60, optionMode=2}
|16:04:22.512 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Changes must be flushed to space: id_global_counter
]16:04:22.512 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ16:04:22.512 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ƒ16:04:22.512 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
í16:04:22.512 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF55200000004]
Ö16:04:22.512 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
ô16:04:22.512 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
ï16:04:22.512 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D00000145172AF55200000004
ò16:04:22.513 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
À16:04:22.513 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ı16:04:22.513 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
π16:04:22.515 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
¸16:04:22.515 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from the inaccessible pool
ã16:04:22.516 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
¥16:04:22.517 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
â16:04:22.517 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
©16:04:22.517 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ú16:04:22.518 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 to the accessible pool
®16:04:22.518 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@20db8d63 was in state NOT_ACCESSIBLE, no need to test it
Ì16:04:22.518 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Õ16:04:22.518 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\16:04:22.518 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å16:04:22.519 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ú16:04:22.519 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@20db8d63 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF55200000004 : 737072696E672D62746D00000145172AF55F00000005]
á16:04:22.520 [Test worker] DEBUG org.hibernate.SQL - update id_global_counter set global_count=?, option_mode=?, shard_id=? where id=?
]Hibernate: update id_global_counter set global_count=?, option_mode=?, shard_id=? where id=?
`16:04:22.557 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w16:04:22.559 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
]16:04:22.559 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ16:04:22.560 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@34709095
‰16:04:22.561 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Å16:04:22.561 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
à16:04:22.561 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Å16:04:22.564 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
à16:04:22.564 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
16:04:22.565 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
§16:04:22.565 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ç16:04:22.565 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
µ16:04:22.565 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
l16:04:22.565 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ16:04:22.565 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from the accessible pool
á16:04:22.565 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
∏16:04:22.565 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
¯16:04:22.565 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 to the inaccessible pool
Á16:04:22.565 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
\16:04:22.565 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
]16:04:22.565 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ16:04:22.565 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ƒ16:04:22.565 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
í16:04:22.565 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF55200000004]
Ö16:04:22.565 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
ô16:04:22.566 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
ï16:04:22.566 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D00000145172AF55200000004
ò16:04:22.566 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
À16:04:22.566 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ı16:04:22.566 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
π16:04:22.566 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
¸16:04:22.566 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from the inaccessible pool
ã16:04:22.566 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
¥16:04:22.566 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
â16:04:22.566 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
©16:04:22.566 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ú16:04:22.566 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 to the accessible pool
®16:04:22.566 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@20db8d63 was in state NOT_ACCESSIBLE, no need to test it
Ì16:04:22.566 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Õ16:04:22.566 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\16:04:22.566 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å16:04:22.566 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ú16:04:22.567 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@20db8d63 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF55200000004 : 737072696E672D62746D00000145172AF55F00000005]
|16:04:22.567 [Test worker] DEBUG org.hibernate.SQL - select * from id_global_counter where shard_id = ? and option_mode = ?
RHibernate: select * from id_global_counter where shard_id = ? and option_mode = ?
f16:04:22.567 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 0 -> shardId [1]
i16:04:22.567 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 2 -> optionMode [2]
Q16:04:22.583 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
ä16:04:22.583 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.sharding.id.model.IdGlobalCounterEntity#2]
]16:04:22.583 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ16:04:22.584 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@34709095
‰16:04:22.584 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Å16:04:22.584 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
à16:04:22.584 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Å16:04:22.585 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
à16:04:22.585 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
16:04:22.585 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
§16:04:22.586 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ç16:04:22.588 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
µ16:04:22.588 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
l16:04:22.588 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ16:04:22.589 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from the accessible pool
á16:04:22.589 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
∏16:04:22.589 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
¯16:04:22.589 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 to the inaccessible pool
Á16:04:22.589 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
\16:04:22.590 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
h16:04:22.590 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
h16:04:22.591 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d16:04:22.592 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ16:04:22.592 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
ä16:04:22.592 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U16:04:22.592 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
¶16:04:22.592 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.sharding.id.model.IdGlobalCounterEntity{id=2, shardId=0, globalCounter=60, optionMode=2}
|16:04:22.592 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Changes must be flushed to space: id_global_counter
]16:04:22.593 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ16:04:22.593 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ƒ16:04:22.593 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
í16:04:22.593 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF55200000004]
Ö16:04:22.593 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
ô16:04:22.593 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
ï16:04:22.593 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D00000145172AF55200000004
ò16:04:22.593 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
À16:04:22.593 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ı16:04:22.593 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
π16:04:22.593 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
¸16:04:22.593 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from the inaccessible pool
ã16:04:22.593 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
¥16:04:22.593 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
â16:04:22.593 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
©16:04:22.593 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ú16:04:22.594 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 to the accessible pool
®16:04:22.599 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@20db8d63 was in state NOT_ACCESSIBLE, no need to test it
Ì16:04:22.599 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Õ16:04:22.599 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\16:04:22.601 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å16:04:22.601 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ú16:04:22.602 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@20db8d63 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF55200000004 : 737072696E672D62746D00000145172AF55F00000005]
á16:04:22.602 [Test worker] DEBUG org.hibernate.SQL - update id_global_counter set global_count=?, option_mode=?, shard_id=? where id=?
]Hibernate: update id_global_counter set global_count=?, option_mode=?, shard_id=? where id=?
`16:04:22.603 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w16:04:22.605 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
]16:04:22.605 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ16:04:22.606 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@34709095
‰16:04:22.607 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Å16:04:22.607 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
à16:04:22.607 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Å16:04:22.607 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
à16:04:22.607 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
16:04:22.607 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
§16:04:22.607 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ç16:04:22.607 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
µ16:04:22.607 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
l16:04:22.607 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ16:04:22.607 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from the accessible pool
á16:04:22.607 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
∏16:04:22.607 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
¯16:04:22.608 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 to the inaccessible pool
Á16:04:22.608 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
\16:04:22.608 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
]16:04:22.624 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ16:04:22.625 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ƒ16:04:22.625 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
í16:04:22.625 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF55200000004]
Ö16:04:22.625 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
ô16:04:22.625 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
ï16:04:22.625 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D00000145172AF55200000004
ò16:04:22.625 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
À16:04:22.625 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ı16:04:22.625 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
π16:04:22.625 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
¸16:04:22.625 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from the inaccessible pool
ã16:04:22.625 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
¥16:04:22.625 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
â16:04:22.626 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
©16:04:22.626 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ú16:04:22.626 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 to the accessible pool
®16:04:22.626 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@20db8d63 was in state NOT_ACCESSIBLE, no need to test it
Ì16:04:22.626 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Õ16:04:22.626 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\16:04:22.626 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å16:04:22.626 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ú16:04:22.626 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@20db8d63 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF55200000004 : 737072696E672D62746D00000145172AF55F00000005]
|16:04:22.630 [Test worker] DEBUG org.hibernate.SQL - select * from id_global_counter where shard_id = ? and option_mode = ?
RHibernate: select * from id_global_counter where shard_id = ? and option_mode = ?
f16:04:22.630 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 0 -> shardId [1]
i16:04:22.630 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 2 -> optionMode [2]
Q16:04:22.633 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
ä16:04:22.633 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.sharding.id.model.IdGlobalCounterEntity#2]
]16:04:22.633 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ16:04:22.635 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@34709095
‰16:04:22.635 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Å16:04:22.635 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
à16:04:22.635 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Å16:04:22.635 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
à16:04:22.635 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
16:04:22.635 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
§16:04:22.635 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ç16:04:22.635 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
µ16:04:22.635 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
l16:04:22.635 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ16:04:22.636 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from the accessible pool
á16:04:22.636 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
∏16:04:22.636 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
¯16:04:22.636 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 to the inaccessible pool
Á16:04:22.636 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
\16:04:22.636 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
h16:04:22.636 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
h16:04:22.636 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d16:04:22.638 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ16:04:22.639 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
ä16:04:22.639 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U16:04:22.640 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
¶16:04:22.640 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.sharding.id.model.IdGlobalCounterEntity{id=2, shardId=0, globalCounter=60, optionMode=2}
]16:04:22.641 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ16:04:22.641 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ƒ16:04:22.642 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
í16:04:22.642 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF55200000004]
Ö16:04:22.642 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
ô16:04:22.642 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
ï16:04:22.642 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D00000145172AF55200000004
ò16:04:22.642 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
À16:04:22.642 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ı16:04:22.642 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
π16:04:22.642 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
¸16:04:22.642 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from the inaccessible pool
ã16:04:22.642 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
¥16:04:22.642 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
â16:04:22.642 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
©16:04:22.645 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ú16:04:22.645 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 to the accessible pool
®16:04:22.646 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@20db8d63 was in state NOT_ACCESSIBLE, no need to test it
Ì16:04:22.646 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Õ16:04:22.646 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\16:04:22.646 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å16:04:22.646 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ú16:04:22.646 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@20db8d63 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF55200000004 : 737072696E672D62746D00000145172AF55F00000005]
|16:04:22.646 [Test worker] DEBUG org.hibernate.SQL - select * from id_global_counter where shard_id = ? and option_mode = ?
RHibernate: select * from id_global_counter where shard_id = ? and option_mode = ?
f16:04:22.647 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 0 -> shardId [1]
i16:04:22.669 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 2 -> optionMode [2]
Q16:04:22.672 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
ä16:04:22.672 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.sharding.id.model.IdGlobalCounterEntity#2]
]16:04:22.673 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ16:04:22.673 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@34709095
‰16:04:22.674 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Å16:04:22.674 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
à16:04:22.674 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Å16:04:22.675 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
à16:04:22.675 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
16:04:22.675 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
§16:04:22.675 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ç16:04:22.676 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
µ16:04:22.676 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
l16:04:22.676 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ16:04:22.676 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from the accessible pool
á16:04:22.676 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
∏16:04:22.676 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
¯16:04:22.676 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 to the inaccessible pool
Á16:04:22.676 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
\16:04:22.676 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
h16:04:22.676 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
a16:04:22.676 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Initiating transaction commit
˘16:04:22.676 [Test worker] DEBUG b.tm.BitronixTransactionManager - committing transaction a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
â16:04:22.676 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - cancelling transaction timeout task on a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Û16:04:22.676 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - removing task by a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
“16:04:22.677 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - cancelled a TransactionTimeoutTask on a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014) scheduled for Mon Mar 31 16:05:22 CST 2014, total task(s) still queued: 4
v16:04:22.677 [Test worker] DEBUG bitronix.tm.BitronixTransaction - before completion, 4 synchronization(s) to execute
î16:04:22.677 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a DeferredReleaseSynchronization of a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
û16:04:22.677 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a ClearContextSynchronization for a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
π16:04:22.677 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@27865a4
h16:04:22.677 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d16:04:22.680 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ16:04:22.680 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
ä16:04:22.681 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U16:04:22.681 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
¶16:04:22.681 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.sharding.id.model.IdGlobalCounterEntity{id=2, shardId=0, globalCounter=60, optionMode=2}
]16:04:22.681 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
§16:04:22.681 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@129a6972
“16:04:22.681 [Test worker] DEBUG bitronix.tm.BitronixTransaction - found unclosed resource to delist: an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@20db8d63 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF55200000004 : 737072696E672D62746D00000145172AF55F00000005]
¬16:04:22.681 [Test worker] DEBUG b.tm.internal.XAResourceManager - delisting resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@20db8d63 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF55200000004 : 737072696E672D62746D00000145172AF55F00000005]
«16:04:22.681 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ending an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@20db8d63 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF55200000004 : 737072696E672D62746D00000145172AF55F00000005] with SUCCESS
∆16:04:22.686 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ended an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@20db8d63 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF55200000004 : 737072696E672D62746D00000145172AF55F00000005] with SUCCESS
f16:04:22.686 [Test worker] DEBUG bitronix.tm.BitronixTransaction - committing, 1 enlisted resource(s)
l16:04:22.686 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to PREPARING
ï16:04:22.686 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from ACTIVE to PREPARING - executing 0 listener(s)
k16:04:22.686 [Test worker] DEBUG bitronix.tm.twopc.Preparer - 1 resource enlisted, no prepare needed (1PC)
k16:04:22.686 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to PREPARED
ó16:04:22.686 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from PREPARING to PREPARED - executing 0 listener(s)
\16:04:22.686 [Test worker] DEBUG bitronix.tm.BitronixTransaction - 1 interested resource(s)
m16:04:22.686 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to COMMITTING
ò16:04:22.686 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from PREPARED to COMMITTING - executing 0 listener(s)
ó16:04:22.686 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - executing phase on 1 resource(s) enlisted in 1 position(s) in reverse position order
d16:04:22.686 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - running 1 job(s) for position '1'
€16:04:22.686 [Test worker] DEBUG bitronix.tm.twopc.Committer - committing resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@20db8d63 (ended) with XID a Bitronix XID [737072696E672D62746D00000145172AF55200000004 : 737072696E672D62746D00000145172AF55F00000005] (with one-phase optimization)
º16:04:22.688 [Test worker] DEBUG bitronix.tm.twopc.Committer - committed resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@20db8d63 (ended) with XID a Bitronix XID [737072696E672D62746D00000145172AF55200000004 : 737072696E672D62746D00000145172AF55F00000005]
e16:04:22.688 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - phase executed with 0 exception(s)
`16:04:22.688 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - ran 1 job(s) for position '1'
t16:04:22.688 [Test worker] DEBUG bitronix.tm.twopc.Committer - phase 2 commit executed on resources [jdbc/sharding]
u16:04:22.688 [Test worker] DEBUG bitronix.tm.twopc.Committer - phase 2 commit succeeded on resources [jdbc/sharding]
l16:04:22.688 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to COMMITTED
ô16:04:22.688 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from COMMITTING to COMMITTED - executing 0 listener(s)
¸16:04:22.688 [Test worker] DEBUG bitronix.tm.BitronixTransaction - successfully committed a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=COMMITTED, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
u16:04:22.688 [Test worker] DEBUG b.tm.internal.XAResourceManager - clearing XAResourceHolder states on 1 resource(s)
Ô16:04:22.688 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - removing XAResourceHolderState of xid a Bitronix XID [737072696E672D62746D00000145172AF55200000004 : 737072696E672D62746D00000145172AF55F00000005] from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
∫16:04:22.689 [Test worker] DEBUG b.tm.internal.XAResourceManager - resource a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 cleaned up all transaction states for GTRID [737072696E672D62746D00000145172AF55200000004]
u16:04:22.689 [Test worker] DEBUG bitronix.tm.BitronixTransaction - after completion, 4 synchronization(s) to execute
œ16:04:22.689 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@27865a4 with status=COMMITTED
j16:04:22.689 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Aggressively releasing JDBC connection
m16:04:22.689 [Test worker] DEBUG o.h.e.j.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
∫16:04:22.689 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@129a6972 with status=COMMITTED
∑16:04:22.689 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a ClearContextSynchronization for a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=COMMITTED, 0 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014) with status=COMMITTED
—16:04:22.689 [Test worker] DEBUG b.tm.BitronixTransactionManager - clearing transaction from thread context: a ThreadContext (204168059) with transaction a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=COMMITTED, 0 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014), default timeout 60s
ó16:04:22.689 [Test worker] DEBUG b.tm.BitronixTransactionManager - removing transaction from in-flight transactions: a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF55200000004], status=COMMITTED, 0 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
™16:04:22.689 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a DeferredReleaseSynchronization of a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 with status=COMMITTED
Ü16:04:22.690 [Test worker] DEBUG b.t.r.c.DeferredReleaseSynchronization - DeferredReleaseSynchronization requeuing a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
∂16:04:22.690 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
l16:04:22.690 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
¸16:04:22.690 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 from the inaccessible pool
à16:04:22.690 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Æ16:04:22.690 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
Ó16:04:22.690 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63 to the available pool
˛16:04:22.690 [Test worker] DEBUG b.t.r.c.DeferredReleaseSynchronization - DeferredReleaseSynchronization requeued a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@20db8d63
à16:04:22.690 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Resuming suspended transaction after completion of inner transaction
Î16:04:22.690 [Test worker] DEBUG b.tm.BitronixTransactionManager - resuming a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1BA00000001], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)
Ω16:04:22.690 [Test worker] DEBUG bitronix.tm.internal.ThreadContext - assigning <a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF1BA00000001], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:21 CST 2014)> to <a ThreadContext (204168059) with transaction null, default timeout 60s>
º16:04:22.692 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@2637246a
p16:04:22.692 [Test worker] DEBUG o.h.e.t.i.TransactionCoordinatorImpl - successfully registered Synchronization
o16:04:22.693 [Test worker] DEBUG org.hibernate.internal.SessionImpl - Opened session at timestamp: 13962530626
¶16:04:22.693 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@6e37bebf
ë16:04:22.696 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1006649344, using strategy: org.hibernate.id.Assigned
ª16:04:22.748 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@789a1b6
p16:04:22.749 [Test worker] DEBUG o.h.e.t.i.TransactionCoordinatorImpl - successfully registered Synchronization
o16:04:22.749 [Test worker] DEBUG org.hibernate.internal.SessionImpl - Opened session at timestamp: 13962530627
¶16:04:22.749 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@66968759
ë16:04:22.749 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1006682112, using strategy: org.hibernate.id.Assigned
ë16:04:22.750 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1006698496, using strategy: org.hibernate.id.Assigned
ë16:04:22.751 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1006714880, using strategy: org.hibernate.id.Assigned
ë16:04:22.755 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1006731264, using strategy: org.hibernate.id.Assigned
ë16:04:22.757 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1006747648, using strategy: org.hibernate.id.Assigned
h16:04:22.760 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d16:04:22.761 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ16:04:22.761 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 5 insertions, 0 updates, 0 deletions to 5 objects
ä16:04:22.762 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U16:04:22.762 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
‚16:04:22.763 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.WalletLotEntity{id=1006731264, walletId=1006682112, remainingAmount=10, expirationDate=null, createdBy=DEFAULT, createdTime=Mon Mar 31 16:04:22 CST 2014, modifiedBy=DEFAULT, modifiedTime=Mon Mar 31 16:04:22 CST 2014, totalAmount=10, type=PROMOTION}
›16:04:22.763 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.WalletLotEntity{id=1006698496, walletId=1006682112, remainingAmount=10, expirationDate=null, createdBy=DEFAULT, createdTime=Mon Mar 31 16:04:22 CST 2014, modifiedBy=DEFAULT, modifiedTime=Mon Mar 31 16:04:22 CST 2014, totalAmount=10, type=CASH}
ÿ16:04:22.763 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.WalletEntity{id=1006682112, balance=0, createdBy=DEFAULT, trackingUuid=null, status=ACTIVE, createdTime=Mon Mar 31 16:04:22 CST 2014, modifiedBy=DEFAULT, userId=1006665728, modifiedTime=Mon Mar 31 16:04:22 CST 2014, type=SV, currency=USD}
è16:04:22.763 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.LotTransactionEntity{amount=10, id=1006747648, walletId=1006682112, createdBy=DEFAULT, walletLotId=1006731264, createdTime=Mon Mar 31 16:04:22 CST 2014, type=CREDIT}
è16:04:22.764 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.LotTransactionEntity{amount=10, id=1006714880, walletId=1006682112, createdBy=DEFAULT, walletLotId=1006698496, createdTime=Mon Mar 31 16:04:22 CST 2014, type=CREDIT}
v16:04:22.765 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Changes must be flushed to space: ewallet_lot
]16:04:22.794 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Ã16:04:22.794 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (3 still available)
¬16:04:22.794 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/id_ds1 with 3 connection(s) (3 still available)
í16:04:22.794 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF65800000006]
Ä16:04:22.794 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - no NOT_ACCESSIBLE connection enlisted in this transaction
«16:04:22.794 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - getting IN_POOL connection from an XAPool of resource jdbc/id_ds1 with 3 connection(s) (3 still available), waiting if necessary
≠16:04:22.799 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/id_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f - closing time: 1396253113587, now time: 1396253062798
π16:04:22.799 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found IN_POOL connection a JdbcPooledConnection from datasource jdbc/id_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
Ï16:04:22.800 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/id_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
©16:04:22.800 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
˚16:04:22.800 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
´16:04:22.800 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
16:04:22.800 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f to the accessible pool
ô16:04:22.800 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@54bbdd1f was in state IN_POOL, testing it
˛16:04:22.800 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - no query to test connection of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f, skipping test
Î16:04:22.800 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
À16:04:22.800 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
\16:04:22.800 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
ˇ16:04:22.800 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF65800000006], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
ë16:04:22.801 [Test worker] DEBUG b.tm.resource.ResourceRegistrar - XAResource org.postgresql.xa.PGXAConnection@54bbdd1f belongs to a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f that itself belongs to a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
…16:04:22.801 [Test worker] DEBUG b.tm.internal.XAResourceManager - creating new branch with a Bitronix XID [737072696E672D62746D00000145172AF65800000006 : 737072696E672D62746D00000145172AF69100000007]
Ω16:04:22.801 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - assigning <a Bitronix XID [737072696E672D62746D00000145172AF65800000006 : 737072696E672D62746D00000145172AF69100000007]> to <an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f with XID null>
Ω16:04:22.801 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - starting an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f with XID a Bitronix XID [737072696E672D62746D00000145172AF65800000006 : 737072696E672D62746D00000145172AF69100000007] with NOFLAGS
∆16:04:22.801 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - started an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF65800000006 : 737072696E672D62746D00000145172AF69100000007] with NOFLAGS
ﬁ16:04:22.801 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - putting XAResourceHolderState [an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF65800000006 : 737072696E672D62746D00000145172AF69100000007]] on a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
À16:04:22.801 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - GTRID [737072696E672D62746D00000145172AF65800000006] previously unknown to a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f, adding it to the resource's transactions list
Ê16:04:22.801 [Test worker] DEBUG org.hibernate.SQL - insert into ewallet (created_by, created_time, modified_by, modified_time, balance, currency, status, tracking_uuid, type, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
ºHibernate: insert into ewallet (created_by, created_time, modified_by, modified_time, balance, currency, status, tracking_uuid, type, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
`16:04:22.820 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w16:04:22.823 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
ˇ16:04:22.823 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF65800000006], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
16:04:22.823 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF65800000006 : 737072696E672D62746D00000145172AF69100000007]
„16:04:22.823 [Test worker] DEBUG org.hibernate.SQL - insert into ewallet_lot (created_by, created_time, modified_by, modified_time, expiration_date, remaining, total, type, ewallet_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
πHibernate: insert into ewallet_lot (created_by, created_time, modified_by, modified_time, expiration_date, remaining, total, type, ewallet_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
`16:04:22.829 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w16:04:22.831 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
ˇ16:04:22.831 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF65800000006], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
16:04:22.831 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF65800000006 : 737072696E672D62746D00000145172AF69100000007]
∑16:04:22.831 [Test worker] DEBUG org.hibernate.SQL - insert into lot_transaction (created_by, created_time, amount, type, ewallet_id, ewallet_lot_id, id) values (?, ?, ?, ?, ?, ?, ?)
çHibernate: insert into lot_transaction (created_by, created_time, amount, type, ewallet_id, ewallet_lot_id, id) values (?, ?, ?, ?, ?, ?, ?)
`16:04:22.832 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w16:04:22.833 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
ˇ16:04:22.834 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF65800000006], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
16:04:22.834 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF65800000006 : 737072696E672D62746D00000145172AF69100000007]
„16:04:22.835 [Test worker] DEBUG org.hibernate.SQL - insert into ewallet_lot (created_by, created_time, modified_by, modified_time, expiration_date, remaining, total, type, ewallet_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
πHibernate: insert into ewallet_lot (created_by, created_time, modified_by, modified_time, expiration_date, remaining, total, type, ewallet_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
`16:04:22.837 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w16:04:22.839 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
ˇ16:04:22.839 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF65800000006], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
16:04:22.839 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF65800000006 : 737072696E672D62746D00000145172AF69100000007]
∑16:04:22.840 [Test worker] DEBUG org.hibernate.SQL - insert into lot_transaction (created_by, created_time, amount, type, ewallet_id, ewallet_lot_id, id) values (?, ?, ?, ?, ?, ?, ?)
çHibernate: insert into lot_transaction (created_by, created_time, amount, type, ewallet_id, ewallet_lot_id, id) values (?, ?, ?, ?, ?, ?, ?)
`16:04:22.841 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w16:04:22.842 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
]16:04:22.843 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
÷16:04:22.843 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@7051b02e
‚16:04:22.843 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
ˇ16:04:22.843 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF65800000006], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ü16:04:22.843 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
ˇ16:04:22.843 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF65800000006], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ü16:04:22.843 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
Ó16:04:22.843 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
¢16:04:22.843 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF65800000006], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ä16:04:22.843 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
≥16:04:22.843 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
l16:04:22.843 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
Ù16:04:22.843 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from the accessible pool
Ö16:04:22.844 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
∂16:04:22.844 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
ˆ16:04:22.844 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f to the inaccessible pool
Â16:04:22.844 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
\16:04:22.844 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
Ü16:04:22.844 [Test worker] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
]16:04:22.845 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Ã16:04:22.846 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
¬16:04:22.846 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
í16:04:22.847 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF65800000006]
É16:04:22.847 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
ó16:04:22.848 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
ï16:04:22.848 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D00000145172AF65800000006
ò16:04:22.849 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
«16:04:22.850 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
Û16:04:22.850 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
∑16:04:22.850 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
˙16:04:22.851 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from the inaccessible pool
â16:04:22.851 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
≤16:04:22.851 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
á16:04:22.852 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF65800000006], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
ß16:04:22.852 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF65800000006], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
16:04:22.852 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f to the accessible pool
®16:04:22.853 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@54bbdd1f was in state NOT_ACCESSIBLE, no need to test it
Î16:04:22.853 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
À16:04:22.853 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
\16:04:22.854 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
ˇ16:04:22.854 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF65800000006], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
16:04:22.854 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF65800000006 : 737072696E672D62746D00000145172AF69100000007]
 16:04:22.854 [Test worker] DEBUG org.hibernate.SQL - select * from ewallet_lot where ewallet_id = (?) and remaining > money(0) and (expiration_date is null or expiration_date >= (?)) order by type desc
†Hibernate: select * from ewallet_lot where ewallet_id = (?) and remaining > money(0) and (expiration_date is null or expiration_date >= (?)) order by type desc
p16:04:22.856 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 1006682112 -> walletId [1]
}16:04:22.856 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() Mon Mar 31 16:04:22 CST 2014 -> now [2]
ó16:04:22.863 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.ewallet.db.entity.hibernate.WalletLotEntity#1006731264]
h16:04:22.863 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
ë16:04:22.867 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1006764032, using strategy: org.hibernate.id.Assigned
ó16:04:22.868 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.ewallet.db.entity.hibernate.WalletLotEntity#1006698496]
h16:04:22.868 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
ë16:04:22.869 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1006780416, using strategy: org.hibernate.id.Assigned
]16:04:22.869 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
÷16:04:22.870 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@7051b02e
‚16:04:22.870 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
ˇ16:04:22.870 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF65800000006], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ü16:04:22.870 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
ˇ16:04:22.870 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF65800000006], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ü16:04:22.870 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
Ó16:04:22.870 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
¢16:04:22.870 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF65800000006], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ä16:04:22.870 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
≥16:04:22.870 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
l16:04:22.870 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
Ù16:04:22.870 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from the accessible pool
Ö16:04:22.870 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
∂16:04:22.870 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
ˆ16:04:22.871 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f to the inaccessible pool
Â16:04:22.871 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
\16:04:22.871 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
º16:04:22.917 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@377b9411
p16:04:22.917 [Test worker] DEBUG o.h.e.t.i.TransactionCoordinatorImpl - successfully registered Synchronization
o16:04:22.917 [Test worker] DEBUG org.hibernate.internal.SessionImpl - Opened session at timestamp: 13962530629
•16:04:22.917 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@8ae8fe7
ë16:04:22.917 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1006796800, using strategy: org.hibernate.id.Assigned
ë16:04:22.918 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1006813184, using strategy: org.hibernate.id.Assigned
ë16:04:22.919 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1006829568, using strategy: org.hibernate.id.Assigned
ë16:04:22.920 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1006845952, using strategy: org.hibernate.id.Assigned
ë16:04:22.920 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1006862336, using strategy: org.hibernate.id.Assigned
h16:04:22.921 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d16:04:22.921 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ16:04:22.921 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 5 insertions, 0 updates, 0 deletions to 5 objects
ä16:04:22.922 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U16:04:22.922 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
è16:04:22.922 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.LotTransactionEntity{amount=10, id=1006829568, walletId=1006796800, createdBy=DEFAULT, walletLotId=1006813184, createdTime=Mon Mar 31 16:04:22 CST 2014, type=CREDIT}
˙16:04:22.922 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.WalletLotEntity{id=1006845952, walletId=1006796800, remainingAmount=10, expirationDate=Mon Mar 31 16:04:20 CST 2014, createdBy=DEFAULT, createdTime=Mon Mar 31 16:04:22 CST 2014, modifiedBy=DEFAULT, modifiedTime=Mon Mar 31 16:04:22 CST 2014, totalAmount=10, type=PROMOTION}
›16:04:22.923 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.WalletLotEntity{id=1006813184, walletId=1006796800, remainingAmount=10, expirationDate=null, createdBy=DEFAULT, createdTime=Mon Mar 31 16:04:22 CST 2014, modifiedBy=DEFAULT, modifiedTime=Mon Mar 31 16:04:22 CST 2014, totalAmount=10, type=CASH}
◊16:04:22.924 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.WalletEntity{id=1006796800, balance=0, createdBy=DEFAULT, trackingUuid=null, status=ACTIVE, createdTime=Mon Mar 31 16:04:22 CST 2014, modifiedBy=DEFAULT, userId=721453120, modifiedTime=Mon Mar 31 16:04:22 CST 2014, type=SV, currency=USD}
è16:04:22.924 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.LotTransactionEntity{amount=10, id=1006862336, walletId=1006796800, createdBy=DEFAULT, walletLotId=1006845952, createdTime=Mon Mar 31 16:04:22 CST 2014, type=CREDIT}
v16:04:22.924 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Changes must be flushed to space: ewallet_lot
]16:04:22.924 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Ã16:04:22.924 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (3 still available)
¬16:04:22.924 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/id_ds1 with 3 connection(s) (3 still available)
í16:04:22.924 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF70400000008]
Ä16:04:22.924 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - no NOT_ACCESSIBLE connection enlisted in this transaction
«16:04:22.925 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - getting IN_POOL connection from an XAPool of resource jdbc/id_ds1 with 3 connection(s) (3 still available), waiting if necessary
≠16:04:22.925 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/id_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683 - closing time: 1396253114255, now time: 1396253062925
π16:04:22.925 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found IN_POOL connection a JdbcPooledConnection from datasource jdbc/id_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683 from an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
Ï16:04:22.925 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/id_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683
©16:04:22.925 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683
˚16:04:22.925 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683
´16:04:22.925 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683
16:04:22.925 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683 to the accessible pool
ô16:04:22.925 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@17e63683 was in state IN_POOL, testing it
˛16:04:22.925 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - no query to test connection of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683, skipping test
Î16:04:22.925 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683
À16:04:22.925 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
\16:04:22.925 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
ˇ16:04:22.925 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683 into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF70400000008], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
ë16:04:22.925 [Test worker] DEBUG b.tm.resource.ResourceRegistrar - XAResource org.postgresql.xa.PGXAConnection@17e63683 belongs to a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683 that itself belongs to a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
…16:04:22.925 [Test worker] DEBUG b.tm.internal.XAResourceManager - creating new branch with a Bitronix XID [737072696E672D62746D00000145172AF70400000008 : 737072696E672D62746D00000145172AF70D00000009]
Ω16:04:22.925 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - assigning <a Bitronix XID [737072696E672D62746D00000145172AF70400000008 : 737072696E672D62746D00000145172AF70D00000009]> to <an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@17e63683 with XID null>
Ω16:04:22.926 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - starting an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@17e63683 with XID a Bitronix XID [737072696E672D62746D00000145172AF70400000008 : 737072696E672D62746D00000145172AF70D00000009] with NOFLAGS
∆16:04:22.926 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - started an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@17e63683 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF70400000008 : 737072696E672D62746D00000145172AF70D00000009] with NOFLAGS
ﬁ16:04:22.926 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - putting XAResourceHolderState [an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@17e63683 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF70400000008 : 737072696E672D62746D00000145172AF70D00000009]] on a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683
À16:04:22.926 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - GTRID [737072696E672D62746D00000145172AF70400000008] previously unknown to a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683, adding it to the resource's transactions list
Ê16:04:22.926 [Test worker] DEBUG org.hibernate.SQL - insert into ewallet (created_by, created_time, modified_by, modified_time, balance, currency, status, tracking_uuid, type, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
ºHibernate: insert into ewallet (created_by, created_time, modified_by, modified_time, balance, currency, status, tracking_uuid, type, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
`16:04:22.928 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w16:04:22.930 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
ˇ16:04:22.931 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683 into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF70400000008], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
16:04:22.931 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@17e63683 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF70400000008 : 737072696E672D62746D00000145172AF70D00000009]
„16:04:22.931 [Test worker] DEBUG org.hibernate.SQL - insert into ewallet_lot (created_by, created_time, modified_by, modified_time, expiration_date, remaining, total, type, ewallet_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
πHibernate: insert into ewallet_lot (created_by, created_time, modified_by, modified_time, expiration_date, remaining, total, type, ewallet_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
`16:04:22.932 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w16:04:22.934 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
ˇ16:04:22.934 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683 into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF70400000008], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
16:04:22.935 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@17e63683 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF70400000008 : 737072696E672D62746D00000145172AF70D00000009]
∑16:04:22.935 [Test worker] DEBUG org.hibernate.SQL - insert into lot_transaction (created_by, created_time, amount, type, ewallet_id, ewallet_lot_id, id) values (?, ?, ?, ?, ?, ?, ?)
çHibernate: insert into lot_transaction (created_by, created_time, amount, type, ewallet_id, ewallet_lot_id, id) values (?, ?, ?, ?, ?, ?, ?)
`16:04:22.936 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w16:04:22.938 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
ˇ16:04:22.938 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683 into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF70400000008], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
16:04:22.938 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@17e63683 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF70400000008 : 737072696E672D62746D00000145172AF70D00000009]
„16:04:22.938 [Test worker] DEBUG org.hibernate.SQL - insert into ewallet_lot (created_by, created_time, modified_by, modified_time, expiration_date, remaining, total, type, ewallet_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
πHibernate: insert into ewallet_lot (created_by, created_time, modified_by, modified_time, expiration_date, remaining, total, type, ewallet_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
`16:04:22.939 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w16:04:22.940 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
ˇ16:04:22.940 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683 into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF70400000008], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
16:04:22.941 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@17e63683 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF70400000008 : 737072696E672D62746D00000145172AF70D00000009]
∑16:04:22.941 [Test worker] DEBUG org.hibernate.SQL - insert into lot_transaction (created_by, created_time, amount, type, ewallet_id, ewallet_lot_id, id) values (?, ?, ?, ?, ?, ?, ?)
çHibernate: insert into lot_transaction (created_by, created_time, amount, type, ewallet_id, ewallet_lot_id, id) values (?, ?, ?, ?, ?, ?, ?)
`16:04:22.941 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w16:04:22.942 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
]16:04:22.943 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
÷16:04:22.943 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@4764acd2
‚16:04:22.943 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683
ˇ16:04:22.943 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF70400000008], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ü16:04:22.943 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683
ˇ16:04:22.943 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF70400000008], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ü16:04:22.943 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683
Ó16:04:22.943 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683
¢16:04:22.943 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF70400000008], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ä16:04:22.943 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683
≥16:04:22.943 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683
l16:04:22.943 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
Ù16:04:22.943 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683 from the accessible pool
Ö16:04:22.944 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683
∂16:04:22.944 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683
ˆ16:04:22.944 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683 to the inaccessible pool
Â16:04:22.944 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683
\16:04:22.944 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
Ü16:04:22.944 [Test worker] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
]16:04:22.944 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Ã16:04:22.944 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
¬16:04:22.944 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
í16:04:22.944 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF70400000008]
É16:04:22.944 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683
ó16:04:22.945 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683
ï16:04:22.945 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D00000145172AF70400000008
ò16:04:22.946 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
«16:04:22.946 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683 from an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
Û16:04:22.946 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683
∑16:04:22.946 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683
˙16:04:22.946 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683 from the inaccessible pool
â16:04:22.946 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683
≤16:04:22.947 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683
á16:04:22.947 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF70400000008], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
ß16:04:22.947 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF70400000008], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
16:04:22.947 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683 to the accessible pool
®16:04:22.947 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@17e63683 was in state NOT_ACCESSIBLE, no need to test it
Î16:04:22.948 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683
À16:04:22.948 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
\16:04:22.948 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
ˇ16:04:22.948 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683 into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF70400000008], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
16:04:22.948 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@17e63683 (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF70400000008 : 737072696E672D62746D00000145172AF70D00000009]
 16:04:22.948 [Test worker] DEBUG org.hibernate.SQL - select * from ewallet_lot where ewallet_id = (?) and remaining > money(0) and (expiration_date is null or expiration_date >= (?)) order by type desc
†Hibernate: select * from ewallet_lot where ewallet_id = (?) and remaining > money(0) and (expiration_date is null or expiration_date >= (?)) order by type desc
p16:04:22.948 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 1006796800 -> walletId [1]
}16:04:22.949 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() Mon Mar 31 16:04:22 CST 2014 -> now [2]
ó16:04:22.952 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.ewallet.db.entity.hibernate.WalletLotEntity#1006845952]
h16:04:22.953 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
ë16:04:22.953 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1006878720, using strategy: org.hibernate.id.Assigned
ó16:04:22.954 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.ewallet.db.entity.hibernate.WalletLotEntity#1006813184]
h16:04:22.954 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
ë16:04:22.955 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1006895104, using strategy: org.hibernate.id.Assigned
]16:04:22.956 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
÷16:04:22.957 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@4764acd2
‚16:04:22.957 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@17e63683
ˇ16:04:22.957 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF70400000008], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ü16:04:22.957 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683
ˇ16:04:22.957 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683 from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF70400000008], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ü16:04:22.957 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683
Ó16:04:22.957 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683
¢16:04:22.958 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF70400000008], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:22 CST 2014)
Ä16:04:22.958 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683
≥16:04:22.958 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683
l16:04:22.958 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
Ù16:04:22.958 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683 from the accessible pool
Ö16:04:22.958 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683
∂16:04:22.958 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683
ˆ16:04:22.958 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683 to the inaccessible pool
Â16:04:22.958 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@17e63683
\16:04:22.958 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
º16:04:22.976 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@4239eaa7
p16:04:22.976 [Test worker] DEBUG o.h.e.t.i.TransactionCoordinatorImpl - successfully registered Synchronization
o16:04:22.976 [Test worker] DEBUG org.hibernate.internal.SessionImpl - Opened session at timestamp: 13962530629
¶16:04:22.976 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@617bbfb5
ë16:04:22.976 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1006927872, using strategy: org.hibernate.id.Assigned
ÿ16:04:23.024 [bitronix-async-jmx-worker] DEBUG b.tm.utils.ManagementRegistrar - Calling ManagementUnregisterCommand on object with name bitronix.tm:type=Transaction,Gtrid=737072696E672D62746D00000145172AF65800000006
÷16:04:23.024 [bitronix-async-jmx-worker] DEBUG b.tm.utils.ManagementRegistrar - Calling ManagementRegisterCommand on object with name bitronix.tm:type=Transaction,Gtrid=737072696E672D62746D00000145172AF73E0000000A
º16:04:23.078 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@6e87379a
p16:04:23.079 [Test worker] DEBUG o.h.e.t.i.TransactionCoordinatorImpl - successfully registered Synchronization
o16:04:23.079 [Test worker] DEBUG org.hibernate.internal.SessionImpl - Opened session at timestamp: 13962530630
¶16:04:23.079 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@5f5df22b
ë16:04:23.079 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1006944256, using strategy: org.hibernate.id.Assigned
º16:04:23.097 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@3d0f1da8
p16:04:23.097 [Test worker] DEBUG o.h.e.t.i.TransactionCoordinatorImpl - successfully registered Synchronization
o16:04:23.098 [Test worker] DEBUG org.hibernate.internal.SessionImpl - Opened session at timestamp: 13962530630
¶16:04:23.098 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@3dc5be6c
ë16:04:23.098 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1006977024, using strategy: org.hibernate.id.Assigned
ë16:04:23.112 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1006993408, using strategy: org.hibernate.id.Assigned
ë16:04:23.112 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1007009792, using strategy: org.hibernate.id.Assigned
ô16:04:23.115 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 740157112188928024, using strategy: org.hibernate.id.Assigned
h16:04:23.122 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d16:04:23.123 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ16:04:23.123 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 4 insertions, 1 updates, 0 deletions to 4 objects
ä16:04:23.123 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U16:04:23.123 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
è16:04:23.123 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.LotTransactionEntity{amount=10, id=1007009792, walletId=1006977024, createdBy=DEFAULT, walletLotId=1006993408, createdTime=Mon Mar 31 16:04:23 CST 2014, type=CREDIT}
‚16:04:23.124 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.WalletLotEntity{id=1006993408, walletId=1006977024, remainingAmount=10, expirationDate=null, createdBy=DEFAULT, createdTime=Mon Mar 31 16:04:23 CST 2014, modifiedBy=DEFAULT, modifiedTime=Mon Mar 31 16:04:23 CST 2014, totalAmount=10, type=PROMOTION}
è16:04:23.124 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.TransactionEntity{amount=10, id=740157112188928024, walletId=1006977024, createdBy=DEFAULT, createdTime=Mon Mar 31 16:04:23 CST 2014, type=CREDIT, offerId=721485888}
Ÿ16:04:23.135 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.WalletEntity{id=1006977024, balance=10, createdBy=DEFAULT, trackingUuid=null, status=ACTIVE, createdTime=Mon Mar 31 16:04:23 CST 2014, modifiedBy=DEFAULT, userId=1006960640, modifiedTime=Mon Mar 31 16:04:23 CST 2014, type=SV, currency=USD}
v16:04:23.136 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Changes must be flushed to space: ewallet_lot
]16:04:23.136 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Ã16:04:23.136 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (3 still available)
¬16:04:23.136 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/id_ds1 with 3 connection(s) (3 still available)
í16:04:23.136 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF7B70000000C]
Ä16:04:23.136 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - no NOT_ACCESSIBLE connection enlisted in this transaction
«16:04:23.137 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - getting IN_POOL connection from an XAPool of resource jdbc/id_ds1 with 3 connection(s) (3 still available), waiting if necessary
≠16:04:23.137 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/id_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca - closing time: 1396253117155, now time: 1396253063137
π16:04:23.137 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found IN_POOL connection a JdbcPooledConnection from datasource jdbc/id_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca from an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
Ï16:04:23.137 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/id_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca
©16:04:23.137 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca
˚16:04:23.137 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca
´16:04:23.137 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca
16:04:23.137 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca to the accessible pool
ô16:04:23.137 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@48d206ca was in state IN_POOL, testing it
˛16:04:23.137 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - no query to test connection of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca, skipping test
Î16:04:23.137 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca
À16:04:23.137 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
\16:04:23.137 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
ˇ16:04:23.137 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF7B70000000C], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
ë16:04:23.137 [Test worker] DEBUG b.tm.resource.ResourceRegistrar - XAResource org.postgresql.xa.PGXAConnection@48d206ca belongs to a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca that itself belongs to a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
…16:04:23.143 [Test worker] DEBUG b.tm.internal.XAResourceManager - creating new branch with a Bitronix XID [737072696E672D62746D00000145172AF7B70000000C : 737072696E672D62746D00000145172AF7E70000000D]
Ω16:04:23.143 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - assigning <a Bitronix XID [737072696E672D62746D00000145172AF7B70000000C : 737072696E672D62746D00000145172AF7E70000000D]> to <an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@48d206ca with XID null>
Ω16:04:23.143 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - starting an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@48d206ca with XID a Bitronix XID [737072696E672D62746D00000145172AF7B70000000C : 737072696E672D62746D00000145172AF7E70000000D] with NOFLAGS
∆16:04:23.143 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - started an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@48d206ca (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF7B70000000C : 737072696E672D62746D00000145172AF7E70000000D] with NOFLAGS
ﬁ16:04:23.143 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - putting XAResourceHolderState [an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@48d206ca (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF7B70000000C : 737072696E672D62746D00000145172AF7E70000000D]] on a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca
À16:04:23.143 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - GTRID [737072696E672D62746D00000145172AF7B70000000C] previously unknown to a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca, adding it to the resource's transactions list
Ê16:04:23.144 [Test worker] DEBUG org.hibernate.SQL - insert into ewallet (created_by, created_time, modified_by, modified_time, balance, currency, status, tracking_uuid, type, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
ºHibernate: insert into ewallet (created_by, created_time, modified_by, modified_time, balance, currency, status, tracking_uuid, type, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
`16:04:23.145 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w16:04:23.155 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
ˇ16:04:23.156 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF7B70000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
16:04:23.156 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@48d206ca (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF7B70000000C : 737072696E672D62746D00000145172AF7E70000000D]
„16:04:23.168 [Test worker] DEBUG org.hibernate.SQL - insert into ewallet_lot (created_by, created_time, modified_by, modified_time, expiration_date, remaining, total, type, ewallet_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
πHibernate: insert into ewallet_lot (created_by, created_time, modified_by, modified_time, expiration_date, remaining, total, type, ewallet_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
`16:04:23.173 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w16:04:23.177 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
ˇ16:04:23.178 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF7B70000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
16:04:23.178 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@48d206ca (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF7B70000000C : 737072696E672D62746D00000145172AF7E70000000D]
∑16:04:23.178 [Test worker] DEBUG org.hibernate.SQL - insert into lot_transaction (created_by, created_time, amount, type, ewallet_id, ewallet_lot_id, id) values (?, ?, ?, ?, ?, ?, ?)
çHibernate: insert into lot_transaction (created_by, created_time, amount, type, ewallet_id, ewallet_lot_id, id) values (?, ?, ?, ?, ?, ?, ?)
`16:04:23.184 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w16:04:23.185 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
ˇ16:04:23.186 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF7B70000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
16:04:23.186 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@48d206ca (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF7B70000000C : 737072696E672D62746D00000145172AF7E70000000D]
≠16:04:23.186 [Test worker] DEBUG org.hibernate.SQL - insert into transaction (created_by, created_time, amount, offer_id, type, ewallet_id, id) values (?, ?, ?, ?, ?, ?, ?)
ÉHibernate: insert into transaction (created_by, created_time, amount, offer_id, type, ewallet_id, id) values (?, ?, ?, ?, ?, ?, ?)
`16:04:23.186 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w16:04:23.188 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
ˇ16:04:23.189 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF7B70000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
16:04:23.189 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@48d206ca (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF7B70000000C : 737072696E672D62746D00000145172AF7E70000000D]
’16:04:23.190 [Test worker] DEBUG org.hibernate.SQL - update ewallet set created_by=?, created_time=?, modified_by=?, modified_time=?, balance=?, currency=?, status=?, tracking_uuid=?, type=?, user_id=? where id=?
´Hibernate: update ewallet set created_by=?, created_time=?, modified_by=?, modified_time=?, balance=?, currency=?, status=?, tracking_uuid=?, type=?, user_id=? where id=?
`16:04:23.193 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w16:04:23.194 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
]16:04:23.195 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
÷16:04:23.195 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@3861c498
‚16:04:23.195 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca
ˇ16:04:23.195 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF7B70000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
Ü16:04:23.195 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca
ˇ16:04:23.195 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF7B70000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
Ü16:04:23.195 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca
Ó16:04:23.195 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca
¢16:04:23.197 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF7B70000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
Ä16:04:23.197 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca
≥16:04:23.198 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca
l16:04:23.198 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
Ù16:04:23.198 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca from the accessible pool
Ö16:04:23.198 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca
∂16:04:23.198 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca
ˆ16:04:23.199 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca to the inaccessible pool
Â16:04:23.199 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca
\16:04:23.200 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
Ü16:04:23.201 [Test worker] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
]16:04:23.201 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Ã16:04:23.201 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
¬16:04:23.202 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
í16:04:23.202 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF7B70000000C]
É16:04:23.202 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca
ó16:04:23.202 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca
ï16:04:23.202 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D00000145172AF7B70000000C
ò16:04:23.203 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
«16:04:23.203 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca from an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
Û16:04:23.203 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca
∑16:04:23.203 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca
˙16:04:23.204 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca from the inaccessible pool
â16:04:23.204 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca
≤16:04:23.204 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca
á16:04:23.204 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF7B70000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
ß16:04:23.205 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF7B70000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
16:04:23.205 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca to the accessible pool
®16:04:23.205 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@48d206ca was in state NOT_ACCESSIBLE, no need to test it
Î16:04:23.208 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca
À16:04:23.208 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
\16:04:23.208 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
ˇ16:04:23.208 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF7B70000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
16:04:23.209 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@48d206ca (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF7B70000000C : 737072696E672D62746D00000145172AF7E70000000D]
 16:04:23.209 [Test worker] DEBUG org.hibernate.SQL - select * from ewallet_lot where ewallet_id = (?) and remaining > money(0) and (expiration_date is null or expiration_date >= (?)) order by type desc
†Hibernate: select * from ewallet_lot where ewallet_id = (?) and remaining > money(0) and (expiration_date is null or expiration_date >= (?)) order by type desc
p16:04:23.210 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 1006977024 -> walletId [1]
}16:04:23.211 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() Mon Mar 31 16:04:23 CST 2014 -> now [2]
ó16:04:23.214 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.ewallet.db.entity.hibernate.WalletLotEntity#1006993408]
h16:04:23.214 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
ë16:04:23.215 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1007042560, using strategy: org.hibernate.id.Assigned
]16:04:23.215 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
÷16:04:23.215 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@3861c498
‚16:04:23.215 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48d206ca
ˇ16:04:23.216 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF7B70000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
Ü16:04:23.216 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca
ˇ16:04:23.216 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF7B70000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
Ü16:04:23.217 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca
Ó16:04:23.217 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca
¢16:04:23.217 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF7B70000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
Ä16:04:23.217 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca
≥16:04:23.218 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca
l16:04:23.218 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
Ù16:04:23.218 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca from the accessible pool
Ö16:04:23.218 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca
∂16:04:23.221 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca
ˆ16:04:23.221 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca to the inaccessible pool
Â16:04:23.221 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48d206ca
\16:04:23.221 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
ô16:04:23.221 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 740157112188929024, using strategy: org.hibernate.id.Assigned
	º16:04:23.262 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@3245def1
	p16:04:23.262 [Test worker] DEBUG o.h.e.t.i.TransactionCoordinatorImpl - successfully registered Synchronization
	o16:04:23.262 [Test worker] DEBUG org.hibernate.internal.SessionImpl - Opened session at timestamp: 13962530632
	•16:04:23.262 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@92fba00
	ë16:04:23.262 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1007075328, using strategy: org.hibernate.id.Assigned
	ë16:04:23.263 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1007091712, using strategy: org.hibernate.id.Assigned
	ë16:04:23.263 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1007108096, using strategy: org.hibernate.id.Assigned
	ô16:04:23.264 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 740157112189952328, using strategy: org.hibernate.id.Assigned
	h16:04:23.266 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
	d16:04:23.270 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
	Ñ16:04:23.272 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 4 insertions, 1 updates, 0 deletions to 4 objects
	ÿ16:04:23.275 [bitronix-async-jmx-worker] DEBUG b.tm.utils.ManagementRegistrar - Calling ManagementUnregisterCommand on object with name bitronix.tm:type=Transaction,Gtrid=737072696E672D62746D00000145172AF73E0000000A
	÷16:04:23.275 [bitronix-async-jmx-worker] DEBUG b.tm.utils.ManagementRegistrar - Calling ManagementRegisterCommand on object with name bitronix.tm:type=Transaction,Gtrid=737072696E672D62746D00000145172AF8580000000E
	ä16:04:23.277 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
	U16:04:23.277 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
	Ÿ16:04:23.278 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.WalletEntity{id=1007075328, balance=10, createdBy=DEFAULT, trackingUuid=null, status=ACTIVE, createdTime=Mon Mar 31 16:04:23 CST 2014, modifiedBy=DEFAULT, userId=1007058944, modifiedTime=Mon Mar 31 16:04:23 CST 2014, type=SV, currency=USD}
	è16:04:23.278 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.LotTransactionEntity{amount=10, id=1007108096, walletId=1007075328, createdBy=DEFAULT, walletLotId=1007091712, createdTime=Mon Mar 31 16:04:23 CST 2014, type=CREDIT}
	è16:04:23.278 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.TransactionEntity{amount=10, id=740157112189952328, walletId=1007075328, createdBy=DEFAULT, createdTime=Mon Mar 31 16:04:23 CST 2014, type=CREDIT, offerId=721502272}
	‚16:04:23.278 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.WalletLotEntity{id=1007091712, walletId=1007075328, remainingAmount=10, expirationDate=null, createdBy=DEFAULT, createdTime=Mon Mar 31 16:04:23 CST 2014, modifiedBy=DEFAULT, modifiedTime=Mon Mar 31 16:04:23 CST 2014, totalAmount=10, type=PROMOTION}
	v16:04:23.278 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Changes must be flushed to space: ewallet_lot
	]16:04:23.278 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
	Ã16:04:23.279 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (3 still available)
	¬16:04:23.279 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/id_ds1 with 3 connection(s) (3 still available)
	í16:04:23.279 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF8580000000E]
	Ä16:04:23.279 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - no NOT_ACCESSIBLE connection enlisted in this transaction
	«16:04:23.279 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - getting IN_POOL connection from an XAPool of resource jdbc/id_ds1 with 3 connection(s) (3 still available), waiting if necessary
	≠16:04:23.279 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/id_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f - closing time: 1396253122905, now time: 1396253063279
	π16:04:23.279 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found IN_POOL connection a JdbcPooledConnection from datasource jdbc/id_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
	Ï16:04:23.279 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/id_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	©16:04:23.279 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	˚16:04:23.279 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	´16:04:23.279 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	16:04:23.279 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f to the accessible pool
	ô16:04:23.279 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@54bbdd1f was in state IN_POOL, testing it
	˛16:04:23.279 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - no query to test connection of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f, skipping test
	Î16:04:23.283 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	À16:04:23.283 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
	\16:04:23.283 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
	ˇ16:04:23.283 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	ë16:04:23.283 [Test worker] DEBUG b.tm.resource.ResourceRegistrar - XAResource org.postgresql.xa.PGXAConnection@54bbdd1f belongs to a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f that itself belongs to a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
	…16:04:23.283 [Test worker] DEBUG b.tm.internal.XAResourceManager - creating new branch with a Bitronix XID [737072696E672D62746D00000145172AF8580000000E : 737072696E672D62746D00000145172AF8730000000F]
	Ω16:04:23.283 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - assigning <a Bitronix XID [737072696E672D62746D00000145172AF8580000000E : 737072696E672D62746D00000145172AF8730000000F]> to <an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f with XID null>
	Ω16:04:23.283 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - starting an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f with XID a Bitronix XID [737072696E672D62746D00000145172AF8580000000E : 737072696E672D62746D00000145172AF8730000000F] with NOFLAGS
	∆16:04:23.283 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - started an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF8580000000E : 737072696E672D62746D00000145172AF8730000000F] with NOFLAGS
	ﬁ16:04:23.284 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - putting XAResourceHolderState [an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF8580000000E : 737072696E672D62746D00000145172AF8730000000F]] on a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	À16:04:23.284 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - GTRID [737072696E672D62746D00000145172AF8580000000E] previously unknown to a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f, adding it to the resource's transactions list
	Ê16:04:23.284 [Test worker] DEBUG org.hibernate.SQL - insert into ewallet (created_by, created_time, modified_by, modified_time, balance, currency, status, tracking_uuid, type, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
	ºHibernate: insert into ewallet (created_by, created_time, modified_by, modified_time, balance, currency, status, tracking_uuid, type, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
	`16:04:23.285 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
	w16:04:23.288 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
	ˇ16:04:23.288 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	16:04:23.288 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF8580000000E : 737072696E672D62746D00000145172AF8730000000F]
	„16:04:23.288 [Test worker] DEBUG org.hibernate.SQL - insert into ewallet_lot (created_by, created_time, modified_by, modified_time, expiration_date, remaining, total, type, ewallet_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
	πHibernate: insert into ewallet_lot (created_by, created_time, modified_by, modified_time, expiration_date, remaining, total, type, ewallet_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
	`16:04:23.289 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
	w16:04:23.291 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
	ˇ16:04:23.291 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	16:04:23.292 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF8580000000E : 737072696E672D62746D00000145172AF8730000000F]
	∑16:04:23.292 [Test worker] DEBUG org.hibernate.SQL - insert into lot_transaction (created_by, created_time, amount, type, ewallet_id, ewallet_lot_id, id) values (?, ?, ?, ?, ?, ?, ?)
	çHibernate: insert into lot_transaction (created_by, created_time, amount, type, ewallet_id, ewallet_lot_id, id) values (?, ?, ?, ?, ?, ?, ?)
	`16:04:23.293 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
	w16:04:23.294 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
	ˇ16:04:23.294 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	16:04:23.294 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF8580000000E : 737072696E672D62746D00000145172AF8730000000F]
	≠16:04:23.294 [Test worker] DEBUG org.hibernate.SQL - insert into transaction (created_by, created_time, amount, offer_id, type, ewallet_id, id) values (?, ?, ?, ?, ?, ?, ?)
	ÉHibernate: insert into transaction (created_by, created_time, amount, offer_id, type, ewallet_id, id) values (?, ?, ?, ?, ?, ?, ?)
	`16:04:23.295 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
	w16:04:23.297 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
	ˇ16:04:23.299 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	16:04:23.299 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF8580000000E : 737072696E672D62746D00000145172AF8730000000F]
	’16:04:23.299 [Test worker] DEBUG org.hibernate.SQL - update ewallet set created_by=?, created_time=?, modified_by=?, modified_time=?, balance=?, currency=?, status=?, tracking_uuid=?, type=?, user_id=? where id=?
	´Hibernate: update ewallet set created_by=?, created_time=?, modified_by=?, modified_time=?, balance=?, currency=?, status=?, tracking_uuid=?, type=?, user_id=? where id=?
	`16:04:23.300 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
	w16:04:23.301 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
	]16:04:23.301 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
	÷16:04:23.302 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@7051b02e
	‚16:04:23.302 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	ˇ16:04:23.302 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	Ü16:04:23.302 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	ˇ16:04:23.302 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	Ü16:04:23.302 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	Ó16:04:23.302 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	¢16:04:23.302 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	Ä16:04:23.302 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	≥16:04:23.302 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	l16:04:23.302 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
	Ù16:04:23.303 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from the accessible pool
	Ö16:04:23.303 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	∂16:04:23.303 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	ˆ16:04:23.303 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f to the inaccessible pool
	Â16:04:23.303 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	\16:04:23.303 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
	Ü16:04:23.303 [Test worker] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
	]16:04:23.304 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
	Ã16:04:23.304 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
	¬16:04:23.304 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
	í16:04:23.304 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF8580000000E]
	É16:04:23.304 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	ó16:04:23.304 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	ï16:04:23.304 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D00000145172AF8580000000E
	ò16:04:23.304 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
	«16:04:23.304 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
	Û16:04:23.304 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	∑16:04:23.304 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	˙16:04:23.304 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from the inaccessible pool
	â16:04:23.304 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	≤16:04:23.304 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	á16:04:23.304 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	ß16:04:23.305 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	16:04:23.305 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f to the accessible pool
	®16:04:23.305 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@54bbdd1f was in state NOT_ACCESSIBLE, no need to test it
	Î16:04:23.305 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	À16:04:23.305 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
	\16:04:23.305 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
	ˇ16:04:23.305 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	16:04:23.305 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF8580000000E : 737072696E672D62746D00000145172AF8730000000F]
	 16:04:23.305 [Test worker] DEBUG org.hibernate.SQL - select * from ewallet_lot where ewallet_id = (?) and remaining > money(0) and (expiration_date is null or expiration_date >= (?)) order by type desc
	†Hibernate: select * from ewallet_lot where ewallet_id = (?) and remaining > money(0) and (expiration_date is null or expiration_date >= (?)) order by type desc
	p16:04:23.306 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 1007075328 -> walletId [1]
	}16:04:23.306 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() Mon Mar 31 16:04:23 CST 2014 -> now [2]
	ó16:04:23.307 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.ewallet.db.entity.hibernate.WalletLotEntity#1007091712]
	h16:04:23.308 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
	ë16:04:23.309 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1007140864, using strategy: org.hibernate.id.Assigned
	]16:04:23.310 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
	÷16:04:23.310 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@7051b02e
	‚16:04:23.310 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	ˇ16:04:23.310 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	Ü16:04:23.311 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	ˇ16:04:23.311 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	Ü16:04:23.311 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	Ó16:04:23.311 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	¢16:04:23.312 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	Ä16:04:23.312 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	≥16:04:23.312 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	l16:04:23.312 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
	Ù16:04:23.312 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from the accessible pool
	Ö16:04:23.312 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	∂16:04:23.312 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	ˆ16:04:23.312 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f to the inaccessible pool
	Â16:04:23.312 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	\16:04:23.312 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
	ô16:04:23.313 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 740157112189953328, using strategy: org.hibernate.id.Assigned
	¨16:04:23.383 [Test worker] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: from com.junbo.ewallet.db.entity.hibernate.TransactionEntity where walletId = (:walletId)
	S16:04:23.403 [Test worker] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
	 \-[QUERY] Node: 'query'
	(    +-[SELECT_FROM] Node: 'SELECT_FROM'
	    |  \-[FROM] Node: 'from'
	"    |     \-[RANGE] Node: 'RANGE'
	    |        \-[DOT] Node: '.'
	"    |           +-[DOT] Node: '.'
	%    |           |  +-[DOT] Node: '.'
	(    |           |  |  +-[DOT] Node: '.'
	+    |           |  |  |  +-[DOT] Node: '.'
	.    |           |  |  |  |  +-[DOT] Node: '.'
	5    |           |  |  |  |  |  +-[IDENT] Node: 'com'
	7    |           |  |  |  |  |  \-[IDENT] Node: 'junbo'
	6    |           |  |  |  |  \-[IDENT] Node: 'ewallet'
	.    |           |  |  |  \-[IDENT] Node: 'db'
	/    |           |  |  \-[IDENT] Node: 'entity'
	/    |           |  \-[IDENT] Node: 'hibernate'
	4    |           \-[IDENT] Node: 'TransactionEntity'
	    \-[WHERE] Node: 'where'
	       \-[EQ] Node: '='
	%          +-[IDENT] Node: 'walletId'
	          \-[COLON] Node: ':'
	(             \-[IDENT] Node: 'walletId'
	
	g16:04:23.404 [Test worker] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
	n16:04:23.454 [Test worker] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
	≤16:04:23.491 [Test worker] DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.junbo.ewallet.db.entity.hibernate.TransactionEntity (<no alias>) -> transactio0_
	x16:04:23.494 [Test worker] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
	Ü16:04:23.496 [Test worker] DEBUG o.h.hql.internal.ast.tree.DotNode - getDataType() : walletId -> org.hibernate.type.LongType@185af219
	á16:04:23.497 [Test worker] DEBUG o.h.h.i.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.walletId -> transactio0_.ewallet_id
	t16:04:23.502 [Test worker] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
	‹16:04:23.502 [Test worker] DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} transaction transactio0_ ) ( where ( = ( transactio0_.ewallet_id {synthetic-alias} walletId ) ? ) ) )
	d16:04:23.509 [Test worker] DEBUG o.h.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
	q16:04:23.517 [Test worker] DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [transaction transactio0_]
	l16:04:23.518 [Test worker] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
	S16:04:23.519 [Test worker] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
	; \-[SELECT] QueryNode: 'SELECT'  querySpaces (transaction)
	>    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
	¡    |  +-[SELECT_EXPR] SelectExpressionImpl: 'transactio0_.id as id1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=transaction,tableAlias=transactio0_,origin=null,columns={,className=com.junbo.ewallet.db.entity.hibernate.TransactionEntity}}}
	ˇ    |  \-[SQL_TOKEN] SqlFragment: 'transactio0_.created_by as created2_1_, transactio0_.created_time as created3_1_, transactio0_.amount as amount1_, transactio0_.offer_id as offer5_1_, transactio0_.type as type1_, transactio0_.ewallet_id as ewallet7_1_'
	Ó    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[transactio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
	π    |  \-[FROM_FRAGMENT] FromElement: 'transaction transactio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=transaction,tableAlias=transactio0_,origin=null,columns={,className=com.junbo.ewallet.db.entity.hibernate.TransactionEntity}}
	    \-[WHERE] SqlNode: 'where'
	+       \-[EQ] BinaryLogicOperatorNode: '='
	Å          +-[DOT] DotNode: 'transactio0_.ewallet_id' {propertyName=walletId,dereferenceType=ALL,propertyPath=walletId,path={synthetic-alias}.walletId,tableAlias=transactio0_,className=com.junbo.ewallet.db.entity.hibernate.TransactionEntity,classAlias=null}
	W          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
	E          |  \-[IDENT] IdentNode: 'walletId' {originalText=walletId}
	p          \-[NAMED_PARAM] ParameterNode: '?' {name=walletId, expectedType=org.hibernate.type.LongType@185af219}
	
	g16:04:23.519 [Test worker] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
	¢16:04:23.530 [Test worker] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: from com.junbo.ewallet.db.entity.hibernate.TransactionEntity where walletId = (:walletId)
	Å16:04:23.530 [Test worker] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select transactio0_.id as id1_, transactio0_.created_by as created2_1_, transactio0_.created_time as created3_1_, transactio0_.amount as amount1_, transactio0_.offer_id as offer5_1_, transactio0_.type as type1_, transactio0_.ewallet_id as ewallet7_1_ from transaction transactio0_ where transactio0_.ewallet_id=?
	g16:04:23.530 [Test worker] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
	h16:04:23.541 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
	d16:04:23.541 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
	Ñ16:04:23.541 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 2 insertions, 2 updates, 0 deletions to 6 objects
	ä16:04:23.542 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
	U16:04:23.542 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
	è16:04:23.542 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.TransactionEntity{amount=10, id=740157112189953328, walletId=1007075328, createdBy=DEFAULT, createdTime=Mon Mar 31 16:04:23 CST 2014, type=DEBIT, offerId=1007124480}
	ÿ16:04:23.542 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.WalletEntity{id=1007075328, balance=0, createdBy=DEFAULT, trackingUuid=null, status=ACTIVE, createdTime=Mon Mar 31 16:04:23 CST 2014, modifiedBy=DEFAULT, userId=1007058944, modifiedTime=Mon Mar 31 16:04:23 CST 2014, type=SV, currency=USD}
	é16:04:23.543 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.LotTransactionEntity{amount=10, id=1007140864, walletId=1007075328, createdBy=DEFAULT, walletLotId=1007091712, createdTime=Mon Mar 31 16:04:23 CST 2014, type=DEBIT}
	è16:04:23.543 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.LotTransactionEntity{amount=10, id=1007108096, walletId=1007075328, createdBy=DEFAULT, walletLotId=1007091712, createdTime=Mon Mar 31 16:04:23 CST 2014, type=CREDIT}
	è16:04:23.543 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.TransactionEntity{amount=10, id=740157112189952328, walletId=1007075328, createdBy=DEFAULT, createdTime=Mon Mar 31 16:04:23 CST 2014, type=CREDIT, offerId=721502272}
	·16:04:23.543 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.ewallet.db.entity.hibernate.WalletLotEntity{id=1007091712, walletId=1007075328, remainingAmount=0, expirationDate=null, createdBy=DEFAULT, createdTime=Mon Mar 31 16:04:23 CST 2014, modifiedBy=DEFAULT, modifiedTime=Mon Mar 31 16:04:23 CST 2014, totalAmount=10, type=PROMOTION}
	v16:04:23.543 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Changes must be flushed to space: transaction
	]16:04:23.544 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
	Ã16:04:23.544 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
	¬16:04:23.544 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
	í16:04:23.544 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF8580000000E]
	É16:04:23.544 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	ó16:04:23.544 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	ï16:04:23.544 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D00000145172AF8580000000E
	ò16:04:23.544 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
	«16:04:23.544 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
	Û16:04:23.545 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	∑16:04:23.545 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	˙16:04:23.545 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from the inaccessible pool
	â16:04:23.549 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	≤16:04:23.550 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	á16:04:23.550 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	ß16:04:23.550 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	16:04:23.551 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f to the accessible pool
	®16:04:23.553 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@54bbdd1f was in state NOT_ACCESSIBLE, no need to test it
	Î16:04:23.553 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	À16:04:23.555 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
	\16:04:23.555 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
	ˇ16:04:23.555 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	16:04:23.556 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF8580000000E : 737072696E672D62746D00000145172AF8730000000F]
	∑16:04:23.556 [Test worker] DEBUG org.hibernate.SQL - insert into lot_transaction (created_by, created_time, amount, type, ewallet_id, ewallet_lot_id, id) values (?, ?, ?, ?, ?, ?, ?)
	çHibernate: insert into lot_transaction (created_by, created_time, amount, type, ewallet_id, ewallet_lot_id, id) values (?, ?, ?, ?, ?, ?, ?)
	`16:04:23.558 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
	w16:04:23.561 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
	ˇ16:04:23.561 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	16:04:23.561 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF8580000000E : 737072696E672D62746D00000145172AF8730000000F]
	≠16:04:23.562 [Test worker] DEBUG org.hibernate.SQL - insert into transaction (created_by, created_time, amount, offer_id, type, ewallet_id, id) values (?, ?, ?, ?, ?, ?, ?)
	ÉHibernate: insert into transaction (created_by, created_time, amount, offer_id, type, ewallet_id, id) values (?, ?, ?, ?, ?, ?, ?)
	`16:04:23.562 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
	w16:04:23.565 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
	ˇ16:04:23.567 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	16:04:23.567 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF8580000000E : 737072696E672D62746D00000145172AF8730000000F]
	’16:04:23.568 [Test worker] DEBUG org.hibernate.SQL - update ewallet set created_by=?, created_time=?, modified_by=?, modified_time=?, balance=?, currency=?, status=?, tracking_uuid=?, type=?, user_id=? where id=?
	´Hibernate: update ewallet set created_by=?, created_time=?, modified_by=?, modified_time=?, balance=?, currency=?, status=?, tracking_uuid=?, type=?, user_id=? where id=?
	`16:04:23.569 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
	w16:04:23.570 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
	ˇ16:04:23.571 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	16:04:23.571 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF8580000000E : 737072696E672D62746D00000145172AF8730000000F]
	”16:04:23.571 [Test worker] DEBUG org.hibernate.SQL - update ewallet_lot set created_by=?, created_time=?, modified_by=?, modified_time=?, expiration_date=?, remaining=?, total=?, type=?, ewallet_id=? where id=?
	©Hibernate: update ewallet_lot set created_by=?, created_time=?, modified_by=?, modified_time=?, expiration_date=?, remaining=?, total=?, type=?, ewallet_id=? where id=?
	`16:04:23.572 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
	w16:04:23.575 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
	]16:04:23.575 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
	÷16:04:23.576 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@7051b02e
	‚16:04:23.576 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	ˇ16:04:23.576 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	Ü16:04:23.576 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	ˇ16:04:23.576 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	Ü16:04:23.576 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	Ó16:04:23.576 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	¢16:04:23.576 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	Ä16:04:23.576 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	≥16:04:23.576 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	l16:04:23.576 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
	Ù16:04:23.576 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from the accessible pool
	Ö16:04:23.576 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	∂16:04:23.577 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	ˆ16:04:23.577 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f to the inaccessible pool
	Â16:04:23.577 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	\16:04:23.577 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
	]16:04:23.578 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
	Ã16:04:23.578 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
	¬16:04:23.578 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
	í16:04:23.578 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D00000145172AF8580000000E]
	É16:04:23.578 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	ó16:04:23.578 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	ï16:04:23.578 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D00000145172AF8580000000E
	ò16:04:23.578 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
	«16:04:23.580 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
	Û16:04:23.581 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	∑16:04:23.581 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	˙16:04:23.581 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from the inaccessible pool
	â16:04:23.581 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	≤16:04:23.581 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	á16:04:23.581 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	ß16:04:23.582 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	16:04:23.582 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f to the accessible pool
	®16:04:23.582 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@54bbdd1f was in state NOT_ACCESSIBLE, no need to test it
	Î16:04:23.582 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	À16:04:23.582 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/id_ds1 with 3 connection(s) (2 still available)
	\16:04:23.582 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
	ˇ16:04:23.583 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f into a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	16:04:23.584 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/id_ds1 XAResource=org.postgresql.xa.PGXAConnection@54bbdd1f (started) with XID a Bitronix XID [737072696E672D62746D00000145172AF8580000000E : 737072696E672D62746D00000145172AF8730000000F]
	Ó16:04:23.585 [Test worker] DEBUG org.hibernate.SQL - select transactio0_.id as id1_, transactio0_.created_by as created2_1_, transactio0_.created_time as created3_1_, transactio0_.amount as amount1_, transactio0_.offer_id as offer5_1_, transactio0_.type as type1_, transactio0_.ewallet_id as ewallet7_1_ from transaction transactio0_ where transactio0_.ewallet_id=?
	ƒHibernate: select transactio0_.id as id1_, transactio0_.created_by as created2_1_, transactio0_.created_time as created3_1_, transactio0_.amount as amount1_, transactio0_.offer_id as offer5_1_, transactio0_.type as type1_, transactio0_.ewallet_id as ewallet7_1_ from transaction transactio0_ where transactio0_.ewallet_id=?
	Q16:04:23.589 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
	°16:04:23.589 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.ewallet.db.entity.hibernate.TransactionEntity#740157112189952328]
	Q16:04:23.589 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 1
	°16:04:23.589 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.ewallet.db.entity.hibernate.TransactionEntity#740157112189953328]
	]16:04:23.590 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
	÷16:04:23.590 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@7051b02e
	‚16:04:23.590 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	ˇ16:04:23.590 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	Ü16:04:23.590 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	ˇ16:04:23.590 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	Ü16:04:23.590 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	Ó16:04:23.590 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	¢16:04:23.590 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D00000145172AF8580000000E], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 16:04:23 CST 2014)
	Ä16:04:23.590 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	≥16:04:23.590 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	l16:04:23.590 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
	Ù16:04:23.590 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f from the accessible pool
	Ö16:04:23.590 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	∂16:04:23.591 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	ˆ16:04:23.592 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f to the inaccessible pool
	Â16:04:23.592 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/id_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@54bbdd1f
	\16:04:23.592 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
	h16:04:23.592 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections

º16:04:23.632 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@7d051157

p16:04:23.632 [Test worker] DEBUG o.h.e.t.i.TransactionCoordinatorImpl - successfully registered Synchronization

o16:04:23.633 [Test worker] DEBUG org.hibernate.internal.SessionImpl - Opened session at timestamp: 13962530636

¶16:04:23.633 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@32798def

ë16:04:23.634 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1007173632, using strategy: org.hibernate.id.Assigned
