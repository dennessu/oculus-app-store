<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.junbo.ewallet.db"/>

    <!-- DataSource -->
    <bean id="ewalletDataSource" class="com.junbo.sharding.hibernate.ShardMultiTenantConnectionProviderFactoryBean">
        <property name="jdbcUrls" value="${ewallet.db.jdbcUrls}"/>
        <property name="uniqueName" value="jdbc/ewallet"/>
        <property name="className" value="${ewallet.db.driverClassName}"/>
        <property name="minPoolSize" value="${ewallet.db.minPoolSize}"/>
        <property name="maxPoolSize" value="${ewallet.db.maxPoolSize}"/>
        <property name="driverProperties">
            <props>
                <prop key="user">${ewallet.db.username}</prop>
                <prop key="password">${ewallet.db.password}</prop>
            </props>
        </property>

    </bean>

   <!-- SessonFactory for Hibernate -->
    <bean id="ewalletSessionFactory" class="com.junbo.sharding.hibernate.LocalSessionFactoryWithListenerBean">
        <property name="jtaTransactionManager" ref="transactionManager"/>
        <property name="hibernateProperties">
            <map>
                <entry key="hibernate.dialect" value="${sharding.hibernate.dialect}"/>
                <entry key="hibernate.max_fetch_depth" value="${sharding.hibernate.max_fetch_depth}"/>
                <entry key="hibernate.jdbc.fetch_size" value="${sharding.hibernate.jdbc.fetch_size}"/>
                <entry key="hibernate.jdbc.batch_size" value="${sharding.hibernate.jdbc.batch_size}"/>
                <entry key="hibernate.show_sql" value="${sharding.hibernate.show_sql}"/>
                <entry key="hibernate.multiTenancy" value="SCHEMA"/>
                <entry key="hibernate.current_session_context_class" value="com.junbo.sharding.hibernate.MultiTenantJTASessionContext"/>
                <entry key="hibernate.tenant_identifier_resolver" value="com.junbo.sharding.hibernate.ShardCurrentTenantIdentifierResolver"/>
                <entry key="hibernate.multi_tenant_connection_provider" value-ref="ewalletDataSource"/>
                <entry key="hibernate.temp.use_jdbc_metadata_defaults" value="false"/>
            </map>
        </property>
        <property name="packagesToScan" value="com.junbo.ewallet.db.entity"/>
    </bean>


    <tx:annotation-driven/>

    <!-- Dao -->
    <bean id="baseTransactionDao" class="com.junbo.ewallet.db.dao.hibernate.TransactionBaseDao" abstract="true"/>
    <bean id="transactionDao" class="com.junbo.ewallet.db.dao.hibernate.TransactionDaoImpl" parent="baseTransactionDao">
        <property name="entityType" value="com.junbo.ewallet.db.entity.TransactionEntity"/>
    </bean>
    <bean id="lotTransactionDao" class="com.junbo.ewallet.db.dao.hibernate.LotTransactionDaoImpl" parent="baseTransactionDao">
        <property name="entityType" value="com.junbo.ewallet.db.entity.LotTransactionEntity"/>
    </bean>

    <bean id="baseDao" class="com.junbo.ewallet.db.dao.hibernate.BaseDao" abstract="true" parent="baseTransactionDao"/>
    <bean id="walletDao" class="com.junbo.ewallet.db.dao.hibernate.WalletDaoImpl" parent="baseDao">
        <property name="entityType" value="com.junbo.ewallet.db.entity.WalletEntity"/>
    </bean>
    <bean id="walletLotDao" class="com.junbo.ewallet.db.dao.hibernate.WalletLotDaoImpl" parent="baseDao">
        <property name="entityType" value="com.junbo.ewallet.db.entity.WalletLotEntity"/>
    </bean>

    <!-- mapper -->
    <bean id="walletMapper" class="com.junbo.ewallet.db.mapper.WalletMapper"/>

    <!-- repo -->
    <bean id="walletRepository" class="com.junbo.ewallet.db.repo.WalletRepository"/>

    <!-- transactionSupport -->
    <bean id="transactionSupport" class="com.junbo.ewallet.db.repo.TransactionSupport"/>
</beans>