<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.junbo.ewallet.db"/>

    <!-- DataSource -->
    <bean id="ewalletDataSource" class="bitronix.tm.resource.jdbc.PoolingDataSource"
          init-method="init" destroy-method="close">
        <property name="uniqueName" value="jdbc/ewallet_ds1"/>
        <property name="className" value="org.postgresql.xa.PGXADataSource"/>
        <property name="minPoolSize" value="${ewallet.db.minConnectionsPerPartition}"/>
        <property name="maxPoolSize" value="${ewallet.db.maxConnectionsPerPartition}"/>
        <property name="driverProperties">
            <props>
                <prop key="url">${ewallet.db.url}</prop>
                <prop key="user">${ewallet.db.username}</prop>
                <prop key="password">${ewallet.db.password}</prop>
            </props>
        </property>
    </bean>

    <!-- SessonFactory for Hibernate -->
    <bean id="ewalletSessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="ewalletDataSource"/>
        <property name="packagesToScan" value="com.junbo.ewallet.db.entity"/>
        <property name="jtaTransactionManager" ref="transactionManager"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${ewallet.hibernate.dialect}</prop>
                <prop key="hibernate.max_fetch_depth">${ewallet.hibernate.max_fetch_depth}</prop>
                <prop key="hibernate.jdbc.fetch_size">${ewallet.hibernate.fetch_size}</prop>
                <prop key="hibernate.jdbc.batch_size">${ewallet.hibernate.batch_size}</prop>
                <prop key="hibernate.show_sql">${ewallet.hibernate.show_sql}</prop>
            </props>
        </property>
    </bean>

    <tx:annotation-driven/>

    <!-- Dao -->
    <bean id="baseTransactionDao" class="com.junbo.ewallet.db.dao.hibernate.TransactionBaseDao" abstract="true"/>
    <bean id="transactionDao" class="com.junbo.ewallet.db.dao.hibernate.TransactionDaoImpl" parent="baseTransactionDao">
        <property name="entityType" value="com.junbo.ewallet.db.entity.TransactionEntity"/>
    </bean>
    <bean id="lotTransactionDao" class="com.junbo.ewallet.db.dao.hibernate.LotTransactionDaoImpl" parent="baseTransactionDao">
        <property name="entityType" value="com.junbo.ewallet.db.entity.LotTransactionEntity"/>
    </bean>

    <bean id="baseDao" class="com.junbo.ewallet.db.dao.hibernate.BaseDao" abstract="true" parent="baseTransactionDao"/>
    <bean id="walletDao" class="com.junbo.ewallet.db.dao.hibernate.WalletDaoImpl" parent="baseDao">
        <property name="entityType" value="com.junbo.ewallet.db.entity.WalletEntity"/>
    </bean>
    <bean id="walletLotDao" class="com.junbo.ewallet.db.dao.hibernate.WalletLotDaoImpl" parent="baseDao">
        <property name="entityType" value="com.junbo.ewallet.db.entity.WalletLotEntity"/>
    </bean>

    <!-- mapper -->
    <bean id="walletMapper" class="com.junbo.ewallet.db.mapper.WalletMapper"/>

    <!-- repo -->
    <bean id="walletRepository" class="com.junbo.ewallet.db.repo.WalletRepository"/>

    <!-- transactionSupport -->
    <bean id="transactionSupport" class="com.junbo.ewallet.db.repo.TransactionSupport"/>
</beans>