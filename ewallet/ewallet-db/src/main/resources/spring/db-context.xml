<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.junbo.ewallet.db"/>
    <context:component-scan base-package="com.junbo.oom.core.builtin"/>

    <!-- DataSource -->
    <bean id="ewalletDataSource" class="com.junbo.sharding.pool.JunboShardMultiTenantConnectionProviderFactoryBean">
        <property name="jdbcUrls" value="${ewallet.db.jdbcUrls}"/>
        <property name="uniqueName" value="jdbc/ewallet"/>
        <property name="className" value="${ewallet.db.driverClassName}"/>
        <property name="minPoolSize" value="${ewallet.db.minPoolSize}"/>
        <property name="maxPoolSize" value="${ewallet.db.maxPoolSize}"/>
        <property name="connectionTimeout" value="${common.db.connectionTimeout}"/>
        <property name="driverProperties">
            <props>
                <prop key="user">${ewallet.db.username}</prop>
                <prop key="password">${ewallet.db.password}</prop>
            </props>
        </property>
    </bean>

    <!-- SessionFactory for Hibernate -->
    <bean id="ewalletSessionFactory"
          class="com.junbo.sharding.hibernate.LocalSessionFactoryWithListenerBean">
        <property name="jtaTransactionManager" ref="transactionManager"/>
        <property name="hibernateProperties">
            <map>
                <entry key="hibernate.dialect" value="${ewallet.hibernate.dialect}"/>
                <entry key="hibernate.max_fetch_depth" value="${ewallet.hibernate.max_fetch_depth}"/>
                <entry key="hibernate.jdbc.fetch_size" value="${ewallet.hibernate.fetch_size}"/>
                <entry key="hibernate.jdbc.batch_size" value="${ewallet.hibernate.batch_size}"/>
                <entry key="hibernate.show_sql" value="${ewallet.hibernate.show_sql}"/>
                <entry key="hibernate.multiTenancy" value="SCHEMA"/>
                <entry key="hibernate.current_session_context_class"
                       value="com.junbo.sharding.hibernate.MultiTenantJTASessionContext"/>
                <entry key="hibernate.tenant_identifier_resolver"
                       value="com.junbo.sharding.hibernate.ShardCurrentTenantIdentifierResolver"/>
                <entry key="hibernate.multi_tenant_connection_provider" value-ref="ewalletDataSource"/>
                <entry key="hibernate.temp.use_jdbc_metadata_defaults" value="false"/>
            </map>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.junbo.ewallet.db.entity</value>
                <value>com.junbo.common.health.ping</value>
            </list>
        </property>
    </bean>

    <bean id="ewalletPingSqlRepo" class="com.junbo.common.health.ping.PingSqlRepo">
        <property name="sessionFactory" ref="ewalletSessionFactory" />
        <property name="shardAlgorithm" ref="userShardAlgorithm"/>
        <property name="idGenerator" ref="oculus48IdGenerator" />
        <property name="dbName" value="ewallet" />
    </bean>

    <tx:annotation-driven/>

    <!-- Dao -->
    <bean id="baseDao" class="com.junbo.ewallet.db.dao.hibernate.BaseDaoImpl" abstract="true"/>

    <bean id="transactionDao" class="com.junbo.ewallet.db.dao.hibernate.TransactionDaoImpl" parent="baseDao">
        <property name="entityType" value="com.junbo.ewallet.db.entity.TransactionEntity"/>
    </bean>
    <bean id="lotTransactionDao" class="com.junbo.ewallet.db.dao.hibernate.LotTransactionDaoImpl" parent="baseDao">
        <property name="entityType" value="com.junbo.ewallet.db.entity.LotTransactionEntity"/>
    </bean>
    <bean id="walletDao" class="com.junbo.ewallet.db.dao.hibernate.WalletDaoImpl" parent="baseDao">
        <property name="entityType" value="com.junbo.ewallet.db.entity.WalletEntity"/>
    </bean>
    <bean id="walletLotDao" class="com.junbo.ewallet.db.dao.hibernate.WalletLotDaoImpl" parent="baseDao">
        <property name="entityType" value="com.junbo.ewallet.db.entity.WalletLotEntity"/>
    </bean>

    <!-- CloudantDao -->
    <!--<bean id="baseTransactionDao" class="com.junbo.ewallet.db.dao.cloudant.TransactionBaseDao" abstract="true" parent="cloudantClient"/>-->
    <!--<bean id="transactionDao" class="com.junbo.ewallet.db.dao.cloudant.TransactionDaoImpl" parent="baseTransactionDao">-->
        <!--<property name="entityType" value="com.junbo.ewallet.db.entity.TransactionEntity"/>-->
        <!--<property name="dbName" value="wallet_transaction"/>-->
    <!--</bean>-->
    <!--<bean id="lotTransactionDao" class="com.junbo.ewallet.db.dao.cloudant.LotTransactionDaoImpl" parent="baseTransactionDao">-->
        <!--<property name="entityType" value="com.junbo.ewallet.db.entity.LotTransactionEntity"/>-->
        <!--<property name="dbName" value="wallet_lot_transaction"/>-->
    <!--</bean>-->

    <!--<bean id="baseDao" class="com.junbo.ewallet.db.dao.cloudant.BaseDao" abstract="true" parent="baseTransactionDao"/>-->
    <!--<bean id="walletDao" class="com.junbo.ewallet.db.dao.cloudant.WalletDaoImpl" parent="baseDao">-->
        <!--<property name="entityType" value="com.junbo.ewallet.db.entity.WalletEntity"/>-->
        <!--<property name="dbName" value="wallet"/>-->
    <!--</bean>-->
    <!--<bean id="walletLotDao" class="com.junbo.ewallet.db.dao.cloudant.WalletLotDaoImpl" parent="baseDao">-->
        <!--<property name="entityType" value="com.junbo.ewallet.db.entity.WalletLotEntity"/>-->
        <!--<property name="dbName" value="wallet_lot"/>-->
    <!--</bean>-->

    <!-- sql repositories -->
    <bean id="sqlLotTransactionRepository" class="com.junbo.ewallet.db.repo.sql.LotTransactionRepositorySqlImpl">
        <property name="modelMapper" ref="com.junbo.ewallet.db.mapper.ModelMapperImpl"/>
        <property name="lotTransactionDao" ref="lotTransactionDao"/>
    </bean>

    <bean id="sqlTransactionRepository" class="com.junbo.ewallet.db.repo.sql.TransactionRepositorySqlImpl">
        <property name="modelMapper" ref="com.junbo.ewallet.db.mapper.ModelMapperImpl" />
        <property name="transactionDao" ref="transactionDao" />
    </bean>

    <bean id="sqlWalletLotRepository" class="com.junbo.ewallet.db.repo.sql.WalletLotRepositorySqlImpl">
        <property name="modelMapper" ref="com.junbo.ewallet.db.mapper.ModelMapperImpl" />
        <property name="walletLotDao" ref="walletLotDao" />
    </bean>

    <bean id="sqlWalletRepository" class="com.junbo.ewallet.db.repo.sql.WalletRepositorySqlImpl">
        <property name="modelMapper" ref="com.junbo.ewallet.db.mapper.ModelMapperImpl" />
        <property name="walletDao" ref="walletDao" />
    </bean>

    <!-- cloudant repositories -->
    <bean id="cloudantLotTransactionRepository" class="com.junbo.ewallet.db.repo.cloudant.LotTransactionRepositoryCloudantImpl" parent="cloudantClient">
        <property name="dbName" value="wallet_lot_transaction"/>
    </bean>

    <bean id="cloudantWalletTransactionRepository" class="com.junbo.ewallet.db.repo.cloudant.LotTransactionRepositoryCloudantImpl" parent="cloudantClient">
        <property name="dbName" value="wallet_transaction"/>
    </bean>

    <bean id="cloudantWalletLotRepository" class="com.junbo.ewallet.db.repo.cloudant.WalletLotRepositoryCloudantImpl" parent="cloudantClient">
        <property name="dbName" value="wallet_lot"/>
    </bean>

    <bean id="cloudantWalletRepository" class="com.junbo.ewallet.db.repo.cloudant.WalletRepositoryCloudantImpl" parent="cloudantClient">
        <property name="dbName" value="wallet"/>
    </bean>

    <!-- dual write repositories -->
    <bean id="lotTransactionRepository" parent="baseRepository">
        <property name="repositoryInterface" value="com.junbo.ewallet.db.repo.LotTransactionRepository"/>
        <property name="sqlRepositoryImpl" ref="sqlLotTransactionRepository" />
        <property name="cloudantRepositoryImpl" ref="cloudantLotTransactionRepository" />
    </bean>

    <bean id="transactionRepository" parent="baseRepository">
        <property name="repositoryInterface" value="com.junbo.ewallet.db.repo.TransactionRepository"/>
        <property name="sqlRepositoryImpl" ref="sqlTransactionRepository" />
        <property name="cloudantRepositoryImpl" ref="cloudantWalletTransactionRepository" />
    </bean>

    <bean id="walletLotRepository" parent="baseRepository">
        <property name="repositoryInterface" value="com.junbo.ewallet.db.repo.WalletLotRepository"/>
        <property name="sqlRepositoryImpl" ref="sqlWalletLotRepository" />
        <property name="cloudantRepositoryImpl" ref="cloudantWalletLotRepository" />
    </bean>

    <bean id="walletRepository" parent="baseRepository">
        <property name="repositoryInterface" value="com.junbo.ewallet.db.repo.WalletRepository"/>
        <property name="sqlRepositoryImpl" ref="sqlWalletRepository" />
        <property name="cloudantRepositoryImpl" ref="cloudantWalletRepository" />
    </bean>

    <!-- mapper -->
    <bean id="ewalletCommonMapper" class="com.junbo.ewallet.db.mapper.CommonMapper" />

    <!-- repo -->
    <bean id="walletRepositoryFacade" class="com.junbo.ewallet.db.repo.facade.WalletRepositoryFacade">
        <property name="lotTransactionRepository" ref="lotTransactionRepository"/>
        <property name="walletLotRepository" ref="walletLotRepository"/>
        <property name="transactionRepository" ref="transactionRepository"/>
        <property name="walletRepository" ref="walletRepository"/>
    </bean>

    <bean id="transactionRepositoryFacade" class="com.junbo.ewallet.db.repo.facade.TransactionRepositoryFacade">
        <property name="transactionRepository" ref="transactionRepository" />
    </bean>

</beans>