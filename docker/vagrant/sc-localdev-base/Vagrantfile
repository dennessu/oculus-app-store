# -*- mode: ruby -*-
# vi: set ft=ruby :

BOX_NAME = ENV['BOX_NAME'] || "trusty64"
BOX_URI = ENV['BOX_URI'] || "https://cloud-images.ubuntu.com/vagrant/trusty/current/trusty-server-cloudimg-amd64-vagrant-disk1.box"

VAGRANTFILE_API_VERSION = "2"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # Setup virtual machine box. This VM configuration code is always executed.
  config.vm.box = BOX_NAME
  config.vm.box_url = BOX_URI

  config.vm.hostname = "sc-localdev-base"

  # Forward keys from SSH agent rather than copy paste
  config.ssh.forward_agent = true

  config.vm.network :private_network, ip: "192.168.200.101"

  config.vm.provider "virtualbox" do |v|
    v.name = "sc-localdev-base"
    v.memory = 2048
    v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
  end

  # system initial setup
  config.vm.provision "shell", inline: <<-EOF
    set -e

    # System packages
    locale-gen en_US.UTF-8 && echo 'LANG="en_US.UTF-8"' > /etc/default/locale
    echo "Installing Base Packages"
    export DEBIAN_FRONTEND=noninteractive
    apt-get update -qq
    apt-get remove -qqy puppet chef
    apt-get upgrade -y --force-yes
    apt-get install -qqy --force-yes git tmux lsof vim htop iftop nload p7zip-full ack-grep httpie postgresql-client-9.3 python-software-properties php5-curl php5-cli cifs-utils

    # Install jdk7
    add-apt-repository -y ppa:webupd8team/java
    apt-get update -qq
    echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections
    echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections
    echo "Installing JDK, this may take a while, please be patient"
    apt-get install -qqy --force-yes oracle-java7-installer
    rm -f /var/cache/oracle-jdk7-installer/*.tar.gz

    # Install gradle 2.0
    echo "Installing Gradle, downloading zip from official site"
    wget -q -O /tmp/gradle-2.0-bin.zip https://services.gradle.org/distributions/gradle-2.0-bin.zip
    7z x -y -o/opt /tmp/gradle-2.0-bin.zip
    chmod 755 /opt/gradle-2.0
    echo 'export PATH=$PATH:/opt/gradle-2.0/bin' >> /home/vagrant/.bashrc
    rm -f /opt/gradle-2.0-bin.zip

    # Install arcanist
    echo "Installing arcanist"
    git clone -q https://github.com/phacility/libphutil.git /home/vagrant/arc/libphutil
    git clone -q https://github.com/phacility/arcanist.git /home/vagrant/arc/arcanist
    echo 'export PATH=$PATH:/home/vagrant/arc/arcanist/bin' >> /home/vagrant/.bashrc

    # Install docker and docker-tools
    curl -s https://get.docker.io/ubuntu/ | sudo sh
    wget -q -O /tmp/dockertools.tar.gz https://github.com/phusion/baseimage-docker/archive/master.tar.gz
    tar xzf /tmp/dockertools.tar.gz -C /tmp
    /tmp/baseimage-docker-master/install-tools.sh

    # cleanup
    apt-get autoclean -y --force-yes
    apt-get autoremove -y
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

    echo * PROVISIONING COMPLETED:
    echo "** type 'vagrant ssh' to connect to sc-localdev"
    echo "** before packaging this as base box, remember to nullify the drive:"
    echo "**   sudo dd if=/dev/zero of=/bigemptyfile bs=4096k"
    echo "**   sudo rm -rf /bigemptyfile"
  EOF

end
