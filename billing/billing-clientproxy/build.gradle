configurations {
    jaxb
}

apply plugin: 'groovy'

task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-src"
    ext.classesDir = "${buildDir}/classes/main"
    ext.viesSchema = "http://ec.europa.eu/taxation_customs/vies/checkVatService.wsdl"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir, schema: viesSchema,
                    package: "com.junbo.billing.clientproxy.impl.wsdl.vies") {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }

            javac(destdir: classesDir, classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}

dependencies {
    compile junboProject(":billing-spec")
    compile (libraries.rs_api)
    compile junboProject(':silkcloud-core')
    compile (libraries.spring_beans)
    compile (libraries.spring_context)
    compile (libraries.jersey_common)

    compile junboProject(':payment-spec')
    compile junboProject(':catalog-spec')
    compile 'com.thoughtworks.xstream:xstream:1.4.7'
    compile 'org.springframework.ws:spring-ws-core:2.2.0.RELEASE'
    compile(files(genJaxb.classesDir).builtBy(genJaxb))

    jaxb "com.sun.xml.bind:jaxb-xjc:2.1.7"

    testCompile (libraries.spring_test)

    processor junboProject(':silkcloud-processor')
    processor (libraries.log4j)
}

ext {
    processorClass = 'com.junbo.langur.processor.ClientProxyProcessor'
}
