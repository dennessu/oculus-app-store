<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.junbo.billing.clientproxy"/>

    <bean id="billingAccessTokenProvider" class="com.junbo.oauth.spec.provider.ClientCredentialsAccessTokenProvider">
        <property name="scope" value="payment.service identity.service"/>
        <property name="deflectionInSeconds" value="300"/>
        <property name="clientSecret" value="${billing.clientproxy.service.clientSecret}"/>
        <property name="clientId" value="${billing.clientproxy.service.clientId}"/>
        <property name="tokenEndpoint" ref="tokenEndpointClientProxy"/>
    </bean>

    <!-- proxy -->
    <bean id="billingIdentityUserClient" class="com.junbo.identity.spec.v1.resource.proxy.UserResourceClientProxy"
          parent="userResourceClientProxy">
    </bean>

    <bean id="billingOfferRevisionClient" class="com.junbo.catalog.spec.resource.proxy.OfferRevisionResourceClientProxy"
          parent="offerRevisionClientProxy">
        <property name="accessTokenProvider" ref="billingAccessTokenProvider"/>
    </bean>

    <bean id="billingIdentityUserPersonalInfoClient"
          class="com.junbo.identity.spec.v1.resource.proxy.UserPersonalInfoResourceClientProxy"
          parent="userPersonalInfoResourceClientProxy">
        <property name="accessTokenProvider" ref="billingAccessTokenProvider"/>
    </bean>

    <bean id="billingPaymentInstrumentClient"
          class="com.junbo.payment.spec.resource.proxy.PaymentInstrumentResourceClientProxy"
          parent="paymentInstrumentProxy">
    </bean>

    <bean id="billingPaymentTransactionClient"
          class="com.junbo.payment.spec.resource.proxy.PaymentTransactionResourceClientProxy"
          parent="paymentTransactionProxy">
        <property name="accessTokenProvider" ref="billingAccessTokenProvider"/>
    </bean>

    <bean id="billingCurrencyClient" class="com.junbo.identity.spec.v1.resource.proxy.CurrencyResourceClientProxy"
          parent="currencyResourceClientProxy">
    </bean>

    <bean id="billingCountryClient" class="com.junbo.identity.spec.v1.resource.proxy.CountryResourceClientProxy"
          parent="countryResourceClientProxy">
    </bean>

    <!-- facade -->
    <bean id="billingIdentityFacade" class="com.junbo.billing.clientproxy.impl.IdentityFacadeImpl" />
    <bean id="billingPaymentFacade" class="com.junbo.billing.clientproxy.impl.PaymentFacadeImpl" />
    <bean id="billingCurrencyFacade" class="com.junbo.billing.clientproxy.impl.CurrencyFacadeImpl" />
    <bean id="billingCountryFacade" class="com.junbo.billing.clientproxy.impl.CountryFacadeImpl" />
    <bean id="billingCatalogFacade" class="com.junbo.billing.clientproxy.impl.CatalogFacadeImpl" />

    <!--<bean id="identityFacade" class="com.junbo.billing.clientproxy.mock.MockIdentityFacadeImpl" />
    <bean id="paymentFacade" class="com.junbo.billing.clientproxy.mock.MockPaymentFacadeImpl" />-->
    <bean id="avalaraFacade" class="com.junbo.billing.clientproxy.impl.AvalaraFacadeImpl" />
    <bean id="avalaraConfiguration" class="com.junbo.billing.clientproxy.impl.avalara.AvalaraConfiguration">
        <property name="baseUrl" value="${avalara.baseUrl}"/>
        <property name="companyCode" value="${avalara.companyCode}"/>
        <property name="customerCode" value="${avalara.customerCode}"/>
        <property name="detailLevel" value="${avalara.detailLevel}"/>
        <property name="authorization" value="${avalara.authorization}"/>
        <property name="shipFromStreet" value="${shipFrom.address.street}"/>
        <property name="shipFromCity" value="${shipFrom.address.city}"/>
        <property name="shipFromState" value="${shipFrom.address.state}"/>
        <property name="shipFromPostalCode" value="${shipFrom.address.postal.code}"/>
        <property name="shipFromCountry" value="${shipFrom.address.country}"/>
    </bean>
    <bean id="sabrixFacade" class="com.junbo.billing.clientproxy.impl.SabrixFacadeImpl" />
    <bean id="sabrixConfiguration" class="com.junbo.billing.clientproxy.impl.sabrix.SabrixConfiguration">
        <property name="hostSystem" value="${sabrix.host.system}"/>
        <property name="callingSystemNumber" value="${sabrix.calling.system.number}"/>
        <property name="companyRole" value="${sabrix.company.role}"/>
        <property name="username" value="${sabrix.username}"/>
        <property name="password" value="${sabrix.password}"/>
        <property name="version" value="${sabrix.version}"/>
        <property name="shipFromCity" value="${shipFrom.address.city}"/>
        <property name="shipFromState" value="${shipFrom.address.state}"/>
        <property name="shipFromPostalCode" value="${shipFrom.address.postal.code}"/>
        <property name="shipFromCountry" value="${shipFrom.address.country}"/>
        <property name="baseUrl" value="${sabrix.baseUrl}"/>
    </bean>
</beans>