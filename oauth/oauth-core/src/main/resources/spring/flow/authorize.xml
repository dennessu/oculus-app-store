<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:wf="http://www.junbo.com/schema/webflow"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.junbo.com/schema/webflow http://www.junbo.com/schema/webflow-config/webflow.xsd">

    <wf:flow id="authorizeFlow">

        <wf:action-state id="START">
            <wf:action ref="validateClient"/>
            <wf:action ref="validateScope"/>
            <wf:action ref="validateRedirectUri"/>
            <wf:action ref="validateResponseType"/>
            <wf:action ref="validateDisplay"/>
            <wf:action ref="validatePrompt"/>
            <wf:action ref="validateMaxAge"/>
            <wf:action ref="validateNonce"/>
            <wf:action ref="validateLocale" />
            <wf:action ref="validateCountry" />
            <wf:action ref="validateExtraParameters" />
            <wf:action ref="validateIpAddress"/>
            <wf:transition on="*" to="CHECK_LOGIN"/>
        </wf:action-state>

        <wf:action-state id="CHECK_LOGIN">
            <wf:action ref="loadIdTokenHint"/>
            <wf:action ref="loadLoginState"/>
            <wf:action ref="loadRememberMeToken"/>
            <wf:action ref="validateLoginState"/>
            <wf:transition on="loginRequired" to="REDIRECT_TO_LOGIN"/>
            <wf:transition on="loginRequiredError" to="LOGIN_REQUIRED"/>
            <wf:transition on="register" to="REDIRECT_TO_REGISTER" />
            <wf:transition on="tosChallenge" to="REDIRECT_TO_TOS_CHALLENGE" />
            <wf:transition on="tosChallengeRequired" to="TOS_CHALLENGE_REQUIRED" />
            <wf:transition on="*" to="CHECK_SCOPE_AFTER_LOGIN"/>
        </wf:action-state>

        <wf:view-state id="REDIRECT_TO_LOGIN">
            <wf:on-render>
                <wf:action ref="generateConversationVerifyCode"/>
                <wf:action ref="redirectToLogin"/>
            </wf:on-render>
            <wf:transition on="*" to="LOGIN_VIEW"/>
        </wf:view-state>

        <wf:view-state id="REDIRECT_TO_REGISTER">
            <wf:on-render>
                <wf:action ref="generateConversationVerifyCode"/>
                <wf:action ref="redirectToRegister"/>
            </wf:on-render>
            <wf:transition on="*" to="REGISTER_VIEW"/>
        </wf:view-state>

        <wf:view-state id="LOGIN_VIEW">
            <wf:on-render>
                <wf:action ref="loginView"/>
            </wf:on-render>
            <wf:transition on="next" to="PRE_LOGIN_SUCCESS">
                <wf:action ref="validateCaptcha"/>
                <wf:action ref="sentryLoginValidate"/>
                <wf:action ref="authenticateUserAuthorize"/>
            </wf:transition>
            <wf:transition on="register" to="REGISTER_VIEW"/>
            <wf:transition on="facebookLogin" to="CHECK_USER_AUTHENTICATOR">
                <wf:action ref="facebookLogin"/>
            </wf:transition>
            <wf:transition on="googleLogin" to="CHECK_USER_AUTHENTICATOR">
                <wf:action ref="googleLogin"/>
            </wf:transition>
            <wf:transition on="cancel" to="CANCEL_VIEW"/>
        </wf:view-state>

        <wf:action-state id="PRE_LOGIN_SUCCESS">
            <wf:action ref="checkEmailVerified"/>
            <wf:action ref="checkChangePassword" />
            <wf:transition on="emailVerifyRequired" to="EMAIL_VERIFY_REQUIRED_VIEW" />
            <wf:transition on="changePasswordRequired"  to="CHANGE_CREDENTIAL_REQUIRED_VIEW" />
            <wf:transition on="success" to="CHECK_TOS"/>
            <wf:transition on="*" to="LOGIN_REQUIRED" />
        </wf:action-state>

        <wf:action-state id="CHECK_TOS">
            <wf:action ref="validateTos"/>
            <wf:transition on="tosChallenge" to="TOS_CHALLENGE_VIEW"/>
            <wf:transition on="*" to="LOGIN_SUCCESS"/>
        </wf:action-state>

        <wf:view-state id="REDIRECT_TO_TOS_CHALLENGE">
            <wf:on-render>
                <wf:action ref="generateConversationVerifyCode"/>
                <wf:action ref="redirectToTosChallenge"/>
            </wf:on-render>
            <wf:transition on="*" to="TOS_CHALLENGE_VIEW"/>
        </wf:view-state>

        <wf:view-state id="TOS_CHALLENGE_VIEW">
            <wf:on-render>
                <wf:action ref="tosChallengeView"/>
            </wf:on-render>
            <wf:transition on="next" to="LOGIN_SUCCESS">
                <wf:action ref="createUserTosAgreement"/>
            </wf:transition>
        </wf:view-state>

        <wf:view-state id="LOGIN_SUCCESS">
            <wf:on-render>
                <wf:action ref="saveLoginState"/>
                <wf:action ref="grantRememberMeToken"/>
                <wf:action ref="redirectToAuth"/>
            </wf:on-render>
            <wf:transition on="*" to="CHECK_SCOPE_AFTER_LOGIN"/>
        </wf:view-state>

        <wf:action-state id="CHECK_SCOPE_AFTER_LOGIN">
            <wf:action ref="validateScopeAfterLogin"/>
            <wf:action ref="validateClientAfterLoginAuthorize"/>
            <wf:transition on="tfaRequired" to="REDIRECT_TO_TFA_REQUIRED_VIEW"/>
            <wf:transition on="forbidden" to="ACCESS_DENIED"/>
            <wf:transition on="success" to="END"/>
        </wf:action-state>

        <wf:view-state id="REDIRECT_TO_TFA_REQUIRED_VIEW">
            <wf:on-render>
                <wf:action ref="generateConversationVerifyCode"/>
                <wf:action ref="redirectToTFARequired"/>
            </wf:on-render>
            <wf:transition on="*" to="TFA_REQUIRED_VIEW"/>
        </wf:view-state>

        <wf:view-state id="TFA_REQUIRED_VIEW">
            <wf:on-render>
                <wf:action ref="tfaRequiredView"/>
            </wf:on-render>
            <wf:transition on="sendSMS" to="TFA_REQUIRED_VIEW">
                <wf:action ref="sendTFA"/>
            </wf:transition>
            <wf:transition on="sendEMAIL" to="TFA_REQUIRED_VIEW">
                <wf:action ref="sendTFA"/>
            </wf:transition>
            <wf:transition on="verifySMS" to="END">
                <wf:action ref="verifyTFA"/>
            </wf:transition>
            <wf:transition on="verifyEMAIL" to="END">
                <wf:action ref="verifyTFA"/>
            </wf:transition>
        </wf:view-state>

        <wf:view-state id="REGISTER_VIEW">
            <wf:on-render>
                <wf:action ref="registerView"/>
            </wf:on-render>
            <wf:transition on="next" to="PAYMENT_METHOD_VIEW">
                <wf:action ref="validateRegister"/>
                <wf:action ref="validateCaptcha"/>
                <wf:action ref="sentryRegisterValidate" />
                <wf:action ref="createUser"/>
                <wf:action ref="createUserCredential"/>
                <wf:action ref="createUserPii"/>
                <wf:action ref="createUserTosAgreement"/>
                <wf:action ref="createUserCommunication" />
                <wf:action ref="sendWelcomeEmail"/>
            </wf:transition>
            <wf:transition on="next2" to="EMAIL_VERIFY_REQUIRED_VIEW">
                <wf:action ref="validateRegister"/>
                <wf:action ref="validateCaptcha"/>
                <wf:action ref="sentryRegisterValidate" />
                <wf:action ref="createUser"/>
                <wf:action ref="createUserCredential"/>
                <wf:action ref="createUserPii"/>
                <wf:action ref="createUserTosAgreement"/>
                <wf:action ref="createUserCommunication" />
                <wf:action ref="sendWelcomeEmail"/>
            </wf:transition>
            <wf:transition on="login" to="LOGIN_VIEW" />
            <wf:transition on="cancel" to="CANCEL_VIEW"/>
        </wf:view-state>

        <wf:action-state id="CHECK_USER_AUTHENTICATOR">
            <wf:action ref="checkAuthenticator"/>
            <wf:transition on="suggestUpgrade" to="REDIRECT_TO_THIRD_PARTY_UPGRADE"/>
            <wf:transition on="success" to="LOGIN_SUCCESS"/>
        </wf:action-state>

        <wf:view-state id="REDIRECT_TO_THIRD_PARTY_UPGRADE">
            <wf:on-render>
                <wf:action ref="generateConversationVerifyCode"/>
                <wf:action ref="redirectToThirdPartyUpgrade"/>
            </wf:on-render>
            <wf:transition on="*" to="THIRD_PARTY_UPGRADE_VIEW"/>
        </wf:view-state>

        <wf:view-state id="THIRD_PARTY_UPGRADE_VIEW">
            <wf:on-render>
                <wf:action ref="thirdPartyUpgradeView"/>
            </wf:on-render>
            <wf:transition on="next" to="LOGIN_SUCCESS">
                <wf:action ref="authenticateUserAuthorize"/>
                <wf:action ref="linkThirdPartyAccount"/>
            </wf:transition>
            <wf:transition on="cancel" to="LOGIN_SUCCESS">
                <wf:action ref="createAnonymousUser"/>
                <wf:action ref="linkThirdPartyAccount"/>
            </wf:transition>
        </wf:view-state>



        <!--wf:view-state id="REDIRECT_TO_PAYMENT_METHOD">
            <wf:on-render>
                <wf:action ref="redirectToPaymentMethod"/>
            </wf:on-render>
            <wf:transition on="*" to="PAYMENT_METHOD_VIEW"/>
        </wf:view-state-->

        <wf:view-state id="PAYMENT_METHOD_VIEW">
            <wf:on-render>
                <wf:action ref="paymentMethodView"/>
            </wf:on-render>
            <wf:transition on="next" to="EMAIL_VERIFY_REQUIRED_VIEW">
                <wf:action ref="validatePaymentMethod"/>
                <wf:action ref="createAddress"/>
                <wf:action ref="createPaymentInstrument"/>
            </wf:transition>
            <wf:transition on="skip" to="EMAIL_VERIFY_REQUIRED_VIEW"/>
        </wf:view-state>

        <!--wf:view-state id="REDIRECT_TO_EMAIL_VERIFY_REQUIRED">
            <wf:on-render>
                <wf:action ref="redirectToEmailVerifyRequired"/>
            </wf:on-render>
            <wf:transition on="*" to="EMAIL_VERIFY_REQUIRED_VIEW"/>
        </wf:view-state-->

        <wf:view-state id="EMAIL_VERIFY_REQUIRED_VIEW">
            <wf:on-render>
                <wf:action ref="emailVerifyRequiredView"/>
            </wf:on-render>
            <wf:transition on="next" to="PRE_LOGIN_SUCCESS"/>
            <wf:transition on="resend" to="EMAIL_VERIFY_REQUIRED_VIEW">
                <wf:action ref="sendAccountVerifyEmail"/>
            </wf:transition>
        </wf:view-state>

        <wf:end-state id="CHANGE_CREDENTIAL_REQUIRED_VIEW">
            <wf:on-entry>
                <wf:action ref="sendResetPasswordEmail" />
                <wf:action ref="changeCredentialRequiredView"/>
            </wf:on-entry>
        </wf:end-state>

        <wf:end-state id="END">
            <wf:on-entry>
                <wf:action ref="grantAuthorizationCode"/>
                <wf:action ref="grantImplicitAccessToken"/>
                <wf:action ref="grantIdToken"/>
                <wf:action ref="clearConversationVerifyCode"/>
                <wf:action ref="redirectToClient"/>
            </wf:on-entry>
        </wf:end-state>

        <wf:view-state id="CANCEL_VIEW">
            <wf:on-render>
                <wf:action ref="clearConversationVerifyCode"/>
                <wf:action ref="redirectToAuth"/>
            </wf:on-render>
            <wf:transition on="*" to="ACCESS_DENIED"/>
        </wf:view-state>

        <wf:end-state id="ACCESS_DENIED">
            <wf:on-entry>
                <wf:action ref="clearConversationVerifyCode"/>
                <wf:action ref="accessDenied"/>
            </wf:on-entry>
        </wf:end-state>

        <wf:end-state id="LOGIN_REQUIRED">
            <wf:on-entry>
                <wf:action ref="clearConversationVerifyCode"/>
                <wf:action ref="loginRequired"/>
            </wf:on-entry>
        </wf:end-state>

        <wf:end-state id="TOS_CHALLENGE_REQUIRED">
            <wf:on-entry>
                <wf:action ref="clearConversationVerifyCode"/>
                <wf:action ref="tosChallengeRequired"/>
            </wf:on-entry>
        </wf:end-state>

        <wf:end-state id="CONSENT_REQUIRED">
            <wf:on-entry>
                <wf:action ref="clearConversationVerifyCode"/>
                <wf:action ref="consentRequired"/>
            </wf:on-entry>
        </wf:end-state>
    </wf:flow>

    <!-- actions -->
    <bean id="validateClient" class="com.junbo.oauth.core.action.ValidateClient">
        <property name="clientRepository" ref="encryptedClientRepository"/>
        <property name="enableInternalCheck" value="${oauth.internalCheck.enabled}"/>
    </bean>

    <bean id="validateScope" class="com.junbo.oauth.core.action.ValidateScope"/>

    <bean id="validateRedirectUri" class="com.junbo.oauth.core.action.ValidateRedirectUri"/>

    <bean id="validateResponseType" class="com.junbo.oauth.core.action.ValidateResponseType"/>

    <bean id="validateDisplay" class="com.junbo.oauth.core.action.ValidateDisplay">
        <property name="defaultDisplay" value="PAGE"/>
    </bean>

    <bean id="validatePrompt" class="com.junbo.oauth.core.action.ValidatePrompt"/>

    <bean id="validateMaxAge" class="com.junbo.oauth.core.action.ValidateMaxAge"/>

    <bean id="validateNonce" class="com.junbo.oauth.core.action.ValidateNonce"/>

    <bean id="loadIdTokenHint" class="com.junbo.oauth.core.action.LoadIdTokenHint">
        <property name="tokenService" ref="tokenService"/>
        <property name="userService" ref="userService"/>
    </bean>

    <bean id="loadLoginState" class="com.junbo.oauth.core.action.LoadLoginState">
        <property name="loginStateRepository" ref="loginStateRepository"/>
        <property name="userService" ref="userService"/>
    </bean>

    <bean id="loadRememberMeToken" class="com.junbo.oauth.core.action.LoadRememberMeToken">
        <property name="rememberMeTokenRepository" ref="rememberMeTokenRepository"/>
        <property name="userService" ref="userService"/>
    </bean>

    <bean id="validateLoginState" class="com.junbo.oauth.core.action.ValidateLoginState">
        <property name="tosUtil" ref="tosUtil"/>
    </bean>

    <bean id="redirectToLogin" class="com.junbo.oauth.core.view.RedirectToPage">
        <property name="pageUrl" value="${oauth.core.portal.loginUri}"/>
    </bean>

    <bean id="loginView" class="com.junbo.oauth.core.view.LoginView">
        <property name="recaptchaPublicKey" value="${oauth.core.recaptcha.public.key}"/>
    </bean>

    <bean id="authenticateUserAuthorize" class="com.junbo.oauth.core.action.AuthenticateUser">
        <property name="userService" ref="userService"/>
        <property name="rethrowException" value="false"/>
    </bean>

    <bean id="redirectToAuth" class="com.junbo.oauth.core.view.RedirectToAuthView">
        <property name="baseUri" value="${oauth.core.auth.linkBaseUri}" />
    </bean>

    <bean id="saveLoginState" class="com.junbo.oauth.core.action.SaveLoginState">
        <property name="loginStateRepository" ref="loginStateRepository"/>
    </bean>

    <bean id="redirectToTosChallenge" class="com.junbo.oauth.core.view.RedirectToPage">
        <property name="pageUrl" value="${oauth.core.portal.tosChallengeUri}"/>
    </bean>

    <bean id="consentView" class="com.junbo.oauth.core.view.ConsentView">
    </bean>

    <bean id="saveConsent" class="com.junbo.oauth.core.action.SaveConsent">
        <property name="consentRepository" ref="consentRepository"/>
    </bean>


    <bean id="redirectToClient" class="com.junbo.oauth.core.view.RedirectToClient">
        <property name="tokenService" ref="tokenService"/>
    </bean>

    <bean id="accessDenied" class="com.junbo.oauth.core.view.RedirectToClientError">
        <property name="errorMessage" value="access_denied"/>
        <property name="pageUrl" value="${oauth.core.portal.accessDeniedUri}" />
    </bean>

    <bean id="loginRequired" class="com.junbo.oauth.core.view.RedirectToClientError">
        <property name="errorMessage" value="login_required"/>
    </bean>

    <bean id="tosChallengeRequired" class="com.junbo.oauth.core.view.RedirectToClientError">
        <property name="errorMessage" value="tos_challenge_required"/>
    </bean>

    <bean id="consentRequired" class="com.junbo.oauth.core.view.RedirectToClientError">
        <property name="errorMessage" value="consent_required"/>
    </bean>

    <bean id="redirectToRegister" class="com.junbo.oauth.core.view.RedirectToPage">
        <property name="pageUrl" value="${oauth.core.portal.registerUri}"/>
    </bean>

    <bean id="registerView" class="com.junbo.oauth.core.view.RegisterView">
        <property name="captchaEnabled" value="${oauth.core.recaptcha.enabled}"/>
        <property name="recaptchaPublicKey" value="${oauth.core.recaptcha.public.key}"/>
    </bean>

    <bean id="createUser" class="com.junbo.oauth.core.action.CreateUser">
        <property name="userResource" ref="oauth_userResource"/>
        <property name="userPersonalInfoResource" ref="oauth_userPersonalInfoResource" />
        <property name="countryResource" ref="oauth_countryResource" />
    </bean>

    <bean id="createUserCredential" class="com.junbo.oauth.core.action.CreateUserCredential">
        <property name="userCredentialResource" ref="oauth_userCredentialResource"/>
        <property name="resetPasswordCodeRepository" ref="resetPasswordCodeRepository" />
    </bean>

    <bean id="createUserPii" class="com.junbo.oauth.core.action.CreateUserPii">
        <property name="userResource" ref="oauth_userResource"/>
        <property name="userPersonalInfoResource" ref="oauth_userPersonalInfoResource"/>
    </bean>

    <bean id="validateRegister" class="com.junbo.oauth.core.action.ValidateRegister">
        <property name="userService" ref="userService" />
    </bean>

    <bean id="validateCaptcha" class="com.junbo.oauth.core.action.ValidateCaptcha">
        <property name="enabled" value="${oauth.core.recaptcha.enabled}"/>
        <property name="recaptchaPublicKey" value="${oauth.core.recaptcha.public.key}"/>
        <property name="recaptchaPrivateKey" value="${oauth.core.recaptcha.private.key}"/>
        <property name="recaptchaVerifyEndpoint" value="${oauth.core.recaptcha.verify.endpoint}"/>
        <property name="asyncHttpClient" ref="commonAsyncHttpClient"/>
    </bean>

    <bean id="sentryRegisterValidate" class="com.junbo.oauth.core.action.SentryRegisterValidate">
        <property name="sentryFacade" ref="oauth_sentryFacade" />
    </bean>

    <bean id="sentryLoginValidate" class="com.junbo.oauth.core.action.SentryLoginValidate">
        <property name="sentryFacade" ref="oauth_sentryFacade" />
    </bean>

    <bean id="sendAccountVerifyEmail" class="com.junbo.oauth.core.action.SendAccountVerifyEmail">
        <property name="userService" ref="userService" />
        <property name="sentryFacade" ref="oauth_sentryFacade"/>
    </bean>

    <bean id="sendWelcomeEmail" class="com.junbo.oauth.core.action.SendWelcomeEmail">
        <property name="userService" ref="userService" />
    </bean>

    <bean id="sendResetPasswordEmail" class="com.junbo.oauth.core.action.SendResetPasswordEmail">
        <property name="userService" ref="userService" />
    </bean>

    <bean id="facebookLogin" class="com.junbo.oauth.core.action.FacebookLogin">
        <property name="facebookApi" ref="facebookApi"/>
    </bean>

    <bean id="googleLogin" class="com.junbo.oauth.core.action.GoogleLogin">
        <property name="googleApi" ref="googleApi"/>
    </bean>

    <bean id="checkAuthenticator" class="com.junbo.oauth.core.action.CheckAuthenticator">
        <property name="authenticatorResource" ref="oauth_authenticatorResource"/>
    </bean>

    <bean id="redirectToThirdPartyUpgrade" class="com.junbo.oauth.core.view.RedirectToPage">
        <property name="pageUrl" value="${oauth.core.portal.thirdPartyUpgradeUri}"/>
    </bean>

    <bean id="thirdPartyUpgradeView" class="com.junbo.oauth.core.view.ThirdPartyUpgradeView"/>

    <bean id="createAnonymousUser" class="com.junbo.oauth.core.action.CreateAnonymousUser">
        <property name="userResource" ref="oauth_userResource"/>
        <property name="userPersonalInfoResource" ref="oauth_userPersonalInfoResource"/>
    </bean>

    <bean id="linkThirdPartyAccount" class="com.junbo.oauth.core.action.LinkThirdPartyAccount">
        <property name="authenticatorResource" ref="oauth_authenticatorResource"/>
    </bean>


    <bean id="checkEmailVerified" class="com.junbo.oauth.core.action.CheckEmailVerified">
        <property name="userResource" ref="oauth_userResource"/>
        <property name="userPersonalInfoResource" ref="oauth_userPersonalInfoResource"/>
    </bean>

    <bean id="checkChangePassword" class="com.junbo.oauth.core.action.CheckChangePassword">
        <property name="userService" ref="userService"/>
    </bean>

    <!--bean id="redirectToEmailVerifyRequired" class="com.junbo.oauth.core.view.RedirectToPageView">
        <property name="pageUrl" value="${oauth.core.portal.emailVerifyRequiredUri}"/>
    </bean-->

    <bean id="emailVerifyRequiredView" class="com.junbo.oauth.core.view.EmailVerifyRequiredView">
        <property name="debugEnabled" value="${common.conf.debugMode}"/>
    </bean>
    <bean id="changeCredentialRequiredView" class="com.junbo.oauth.core.view.ChangeCredentialRequiredView" />

    <bean id="verifyEmail" class="com.junbo.oauth.core.action.VerifyEmail">
        <property name="emailVerifyCodeRepository" ref="emailVerifyCodeRepository"/>
        <property name="userPersonalInfoResource" ref="oauth_userPersonalInfoResource"/>
        <property name="userResource" ref="oauth_userResource"/>
    </bean>

    <bean id="emailVerifyView" class="com.junbo.oauth.core.view.EmailVerifyView"/>

    <!--bean id="redirectToPaymentMethod" class="com.junbo.oauth.core.view.RedirectToPageView">
        <property name="pageUrl" value="${oauth.core.portal.paymentMethodUri}"/>
    </bean-->

    <bean id="paymentMethodView" class="com.junbo.oauth.core.view.PaymentMethodView">
        <property name="btCSE" value="${payment.provider.braintree.CSE}" />
        <property name="parentControlAge" value="18" />
    </bean>

    <bean id="validatePaymentMethod" class="com.junbo.oauth.core.action.ValidatePaymentMethod">
        <property name="countryResource" ref="oauth_countryResource"/>
    </bean>

    <bean id="createAddress" class="com.junbo.oauth.core.action.CreateAddress">
        <property name="userPersonalInfoResource" ref="oauth_userPersonalInfoResource"/>
        <property name="userResource" ref="oauth_userResource"/>
    </bean>

    <bean id="createPaymentInstrument" class="com.junbo.oauth.core.action.CreatePaymentInstrument">
        <property name="paymentInstrumentResource" ref="oauth_paymentInstrumentResource"/>
    </bean>

    <bean id="createUserTosAgreement" class="com.junbo.oauth.core.action.CreateUserTosAgreement">
        <property name="tosResource" ref="oauth_tosResource"/>
        <property name="userTosAgreementResource" ref="oauth_userTosAgreementResource"/>
    </bean>

    <bean id="createUserCommunication" class="com.junbo.oauth.core.action.CreateUserCommunication">
        <property name="communicationResource" ref="oauth_communicationResource"/>
        <property name="userCommunicationResource" ref="oauth_userCommunicationResource"/>
    </bean>

    <bean id="redirectToTFARequired" class="com.junbo.oauth.core.view.RedirectToPage">
        <property name="pageUrl" value="${oauth.core.portal.loginUri}"/>
    </bean>

    <bean id="validateScopeAfterLogin" class="com.junbo.oauth.core.action.ValidateScopeAfterLogin">
        <property name="scopeRepository" ref="scopeRepository"/>
        <property name="scopePreconditionFactory" ref="scopePreconditionFactory"/>
        <property name="conditionEvaluator" ref="spelConditionEvaluator"/>
        <property name="isAuthorizeFlow" value="true"/>
    </bean>

    <bean id="sendTFA" class="com.junbo.oauth.core.action.SendTFA">
        <property name="userResource" ref="oauth_userResource"/>
        <property name="userTFAResource" ref="oauth_userTFAResource"/>
    </bean>

    <bean id="verifyTFA" class="com.junbo.oauth.core.action.VerifyTFA">
        <property name="userTFAAttemptResource" ref="oauth_userTFAAttemptResource"/>
    </bean>

    <bean id="tfaRequiredView" class="com.junbo.oauth.core.view.TFARequiredView">
        <property name="debugEnabled" value="${common.conf.debugMode}"/>
    </bean>

    <bean id="validateClientAfterLoginAuthorize" class="com.junbo.oauth.core.action.ValidateClientAfterLogin">
        <property name="groupUtil" ref="groupUtil"/>
        <property name="isAuthorizeFlow" value="true"/>
    </bean>

    <bean id="generateConversationVerifyCode" class="com.junbo.oauth.core.action.GenerateConversationVerifyCode">
        <property name="expiration" value="${oauth.conversation.verify.code.expiration}"/>
        <property name="verifyEnabled" value="${oauth.flow.verify.enabled}"/>
    </bean>

    <bean id="clearConversationVerifyCode" class="com.junbo.oauth.core.action.ClearConversationVerifyCode"/>

    <bean id="validateTos" class="com.junbo.oauth.core.action.ValidateTos">
        <property name="tosUtil" ref="tosUtil"/>
    </bean>

    <bean id="tosChallengeView" class="com.junbo.oauth.core.view.TosChallengeView"/>

</beans>
