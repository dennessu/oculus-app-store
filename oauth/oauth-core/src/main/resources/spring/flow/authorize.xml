<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:wf="http://www.junbo.com/schema/webflow"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.junbo.com/schema/webflow http://www.junbo.com/schema/webflow-config/webflow.xsd">

    <wf:flow id="authorizeFlow">

        <wf:action-state id="START">
            <wf:action ref="validateClient"/>
            <wf:action ref="validateScope"/>
            <wf:action ref="validateRedirectUri"/>
            <wf:action ref="validateResponseType"/>
            <wf:action ref="validateDisplay"/>
            <wf:action ref="validatePrompt"/>
            <wf:action ref="validateMaxAge"/>
            <wf:action ref="validateNonce"/>
            <wf:action ref="validateLocale" />
            <wf:action ref="validateExtraParameters" />
            <wf:transition on="*" to="CHECK_LOGIN"/>
        </wf:action-state>

        <wf:action-state id="CHECK_LOGIN">
            <wf:action ref="loadIdTokenHint"/>
            <wf:action ref="loadLoginState"/>
            <wf:action ref="loadRememberMeToken"/>
            <wf:action ref="validateLoginState"/>
            <wf:transition on="loginRequired" to="REDIRECT_TO_LOGIN"/>
            <wf:transition on="loginRequiredError" to="LOGIN_REQUIRED"/>
            <wf:transition on="*" to="CHECK_CONSENT"/>
        </wf:action-state>

        <wf:view-state id="REDIRECT_TO_LOGIN">
            <wf:on-render>
                <wf:action ref="redirectToLogin"/>
            </wf:on-render>
            <wf:transition on="register" to="REGISTER_VIEW"/>
            <wf:transition on="*" to="LOGIN_VIEW"/>
        </wf:view-state>

        <wf:view-state id="LOGIN_VIEW">
            <wf:on-render>
                <wf:action ref="loginView"/>
            </wf:on-render>
            <wf:transition on="next" to="LOGIN_SUCCESS">
                <wf:action ref="validateCaptcha"/>
                <wf:action ref="authenticateUserAuthorize"/>
            </wf:transition>
            <wf:transition on="register" to="REGISTER_VIEW"/>
            <wf:transition on="cancel" to="CANCEL_VIEW"/>
        </wf:view-state>

        <wf:view-state id="LOGIN_SUCCESS">
            <wf:on-render>
                <wf:action ref="redirectToAuth"/>
            </wf:on-render>
            <wf:transition on="*" to="CHECK_CONSENT">
                <wf:action ref="saveLoginState"/>
                <wf:action ref="grantRememberMeToken"/>
            </wf:transition>
        </wf:view-state>

        <wf:view-state id="REGISTER_VIEW">
            <wf:on-render>
                <wf:action ref="registerView"/>
            </wf:on-render>
            <wf:transition on="next" to="REGISTER_SUCCESS">
                <wf:action ref="validateRegister"/>
                <wf:action ref="validateCaptcha"/>
                <wf:action ref="createUser"/>
                <wf:action ref="createUserCredential"/>
                <wf:action ref="createUserPii"/>
                <wf:action ref="sendAccountVerifyEmail"/>
            </wf:transition>
            <wf:transition on="cancel" to="CANCEL_VIEW"/>
        </wf:view-state>

        <wf:view-state id="REGISTER_SUCCESS">
            <wf:on-render>
                <wf:action ref="redirectToAuth"/>
            </wf:on-render>
            <wf:transition on="*" to="CHECK_CONSENT">
                <wf:action ref="saveLoginState"/>
                <wf:action ref="grantRememberMeToken"/>
            </wf:transition>
        </wf:view-state>

        <wf:action-state id="CHECK_CONSENT">
            <wf:action ref="validateConsent"/>
            <wf:transition on="consentRequired" to="REDIRECT_TO_CONSENT"/>
            <wf:transition on="*" to="END"/>
        </wf:action-state>

        <wf:view-state id="REDIRECT_TO_CONSENT">
            <wf:on-entry>
                <wf:action ref="redirectToConsent"/>
            </wf:on-entry>
            <wf:transition on="*" to="CONSENT_VIEW"/>
        </wf:view-state>

        <wf:view-state id="CONSENT_VIEW">
            <wf:on-entry>
                <wf:action ref="consentView"/>
            </wf:on-entry>
            <wf:transition on="next" to="CONSENT_SUCCESS">
                <wf:action ref="saveConsent"/>
            </wf:transition>
            <wf:transition on="cancel" to="CANCEL_VIEW"/>
        </wf:view-state>

        <wf:view-state id="CONSENT_SUCCESS">
            <wf:on-render>
                <wf:action ref="redirectToAuth"/>
            </wf:on-render>
            <wf:transition on="*" to="END"/>
        </wf:view-state>

        <wf:end-state id="END">
            <wf:on-entry>
                <wf:action ref="grantAuthorizationCode"/>
                <wf:action ref="grantImplicitAccessToken"/>
                <wf:action ref="grantIdToken"/>
                <wf:action ref="redirectToClient"/>
            </wf:on-entry>
        </wf:end-state>

        <wf:view-state id="CANCEL_VIEW">
            <wf:on-render>
                <wf:action ref="redirectToAuth"/>
            </wf:on-render>
            <wf:transition on="*" to="ACCESS_DENIED"/>
        </wf:view-state>

        <wf:end-state id="ACCESS_DENIED">
            <wf:on-entry>
                <wf:action ref="accessDenied"/>
            </wf:on-entry>
        </wf:end-state>

        <wf:end-state id="LOGIN_REQUIRED">
            <wf:on-entry>
                <wf:action ref="loginRequired"/>
            </wf:on-entry>
        </wf:end-state>

        <wf:end-state id="CONSENT_REQUIRED">
            <wf:on-entry>
                <wf:action ref="consentRequired"/>
            </wf:on-entry>
        </wf:end-state>
    </wf:flow>

    <!-- actions -->
    <bean id="validateClient" class="com.junbo.oauth.core.action.ValidateClient">
        <property name="clientRepository" ref="clientRepository"/>
    </bean>

    <bean id="validateScope" class="com.junbo.oauth.core.action.ValidateScope"/>

    <bean id="validateRedirectUri" class="com.junbo.oauth.core.action.ValidateRedirectUri"/>

    <bean id="validateResponseType" class="com.junbo.oauth.core.action.ValidateResponseType"/>

    <bean id="validateDisplay" class="com.junbo.oauth.core.action.ValidateDisplay">
        <property name="defaultDisplay" value="PAGE"/>
    </bean>

    <bean id="validatePrompt" class="com.junbo.oauth.core.action.ValidatePrompt"/>

    <bean id="validateMaxAge" class="com.junbo.oauth.core.action.ValidateMaxAge"/>

    <bean id="validateNonce" class="com.junbo.oauth.core.action.ValidateNonce"/>

    <bean id="loadIdTokenHint" class="com.junbo.oauth.core.action.LoadIdTokenHint">
        <property name="tokenService" ref="tokenService"/>
    </bean>

    <bean id="loadLoginState" class="com.junbo.oauth.core.action.LoadLoginState">
        <property name="loginStateRepository" ref="loginStateRepository"/>
    </bean>

    <bean id="loadRememberMeToken" class="com.junbo.oauth.core.action.LoadRememberMeToken">
        <property name="rememberMeTokenRepository" ref="rememberMeTokenRepository"/>
    </bean>

    <bean id="validateLoginState" class="com.junbo.oauth.core.action.ValidateLoginState">
    </bean>

    <bean id="redirectToLogin" class="com.junbo.oauth.core.view.RedirectToPage">
        <property name="pageUrl" value="${oauth.core.portal.loginUri}"/>
    </bean>

    <bean id="loginView" class="com.junbo.oauth.core.view.LoginView">
        <property name="recaptchaPublicKey" value="${oauth.core.recaptcha.public.key}"/>
    </bean>

    <bean id="authenticateUserAuthorize" class="com.junbo.oauth.core.action.AuthenticateUser">
        <property name="userService" ref="userService"/>
        <property name="rethrowException" value="false"/>
    </bean>

    <bean id="redirectToAuth" class="com.junbo.oauth.core.view.RedirectToAuthView"/>

    <bean id="saveLoginState" class="com.junbo.oauth.core.action.SaveLoginState">
        <property name="loginStateRepository" ref="loginStateRepository"/>
    </bean>

    <bean id="validateConsent" class="com.junbo.oauth.core.action.ValidateConsent">
        <property name="consentRepository" ref="consentRepository"/>
        <property name="consentUri" value="${oauth.core.portal.consentUri}"/>
    </bean>

    <bean id="redirectToConsent" class="com.junbo.oauth.core.view.RedirectToPage">
        <property name="pageUrl" value="${oauth.core.portal.consentUri}"/>
    </bean>

    <bean id="consentView" class="com.junbo.oauth.core.view.ConsentView">
    </bean>

    <bean id="saveConsent" class="com.junbo.oauth.core.action.SaveConsent">
        <property name="consentRepository" ref="consentRepository"/>
    </bean>


    <bean id="redirectToClient" class="com.junbo.oauth.core.view.RedirectToClient">
        <property name="tokenService" ref="tokenService"/>
    </bean>

    <bean id="accessDenied" class="com.junbo.oauth.core.view.RedirectToClientError">
        <property name="errorMessage" value="access_denied"/>
    </bean>

    <bean id="loginRequired" class="com.junbo.oauth.core.view.RedirectToClientError">
        <property name="errorMessage" value="login_required"/>
    </bean>

    <bean id="consentRequired" class="com.junbo.oauth.core.view.RedirectToClientError">
        <property name="errorMessage" value="consent_required"/>
    </bean>

    <bean id="redirectToRegister" class="com.junbo.oauth.core.view.RedirectToPage">
        <property name="pageUrl" value="${oauth.core.portal.registerUri}"/>
    </bean>

    <bean id="registerView" class="com.junbo.oauth.core.view.RegisterView">
        <property name="recaptchaPublicKey" value="${oauth.core.recaptcha.public.key}"/>
    </bean>

    <bean id="createUser" class="com.junbo.oauth.core.action.CreateUser">
        <property name="userResource" ref="userResource"/>
    </bean>

    <bean id="createUserCredential" class="com.junbo.oauth.core.action.CreateUserCredential">
        <property name="userCredentialResource" ref="userCredentialResource"/>
    </bean>

    <bean id="createUserPii" class="com.junbo.oauth.core.action.CreateUserPii">
        <property name="userResource" ref="userResource"/>
        <property name="userPersonalInfoResource" ref="userPersonalInfoResource"/>
    </bean>

    <bean id="validateRegister" class="com.junbo.oauth.core.action.ValidateRegister"/>

    <bean id="validateCaptcha" class="com.junbo.oauth.core.action.ValidateCaptcha">
        <property name="enabled" value="${oauth.core.recaptcha.enabled}"/>
        <property name="recaptchaPublicKey" value="${oauth.core.recaptcha.public.key}"/>
        <property name="recaptchaPrivateKey" value="${oauth.core.recaptcha.private.key}"/>
        <property name="recaptchaVerifyEndpoint" value="${oauth.core.recaptcha.verify.endpoint}"/>
        <property name="asyncHttpClient" ref="commonAsyncHttpClient"/>
    </bean>

    <bean id="sendAccountVerifyEmail" class="com.junbo.oauth.core.action.SendAccountVerifyEmail">
        <property name="emailResource" ref="emailResource"/>
        <property name="emailTemplateResource" ref="emailTemplateResource"/>
        <property name="emailVerifyCodeRepository" ref="emailVerifyCodeRepository"/>
    </bean>
</beans>
