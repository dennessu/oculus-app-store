<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <import resource="classpath*:spring/sharding-context.xml"/>

    <context:component-scan base-package="com.junbo.oom.core.builtin"/>
    <context:component-scan base-package="com.junbo.token.db"/>
    <context:annotation-config />

    <!--Data source has the database information -->
    <bean id="tokenDataSource" class="com.junbo.sharding.hibernate.ShardMultiTenantConnectionProviderFactoryBean">
        <property name="jdbcUrls" value="${token.db.jdbcUrls}"/>
        <property name="uniqueName" value="jdbc/token"/>
        <property name="className" value="org.postgresql.xa.PGXADataSource"/>
        <property name="minPoolSize" value="${token.db.minConnectionsPerPartition}"/>
        <property name="maxPoolSize" value="${token.db.maxConnectionsPerPartition}"/>
        <property name="driverProperties">
            <props>
                <prop key="user">${token.db.username}</prop>
                <prop key="password">${token.db.password}</prop>
            </props>
        </property>
    </bean>

    <!-- SessonFactory for Hibernate -->
    <bean id="tokenSessionFactory"
          class="com.junbo.sharding.hibernate.LocalSessionFactoryWithListenerBean">
        <property name="jtaTransactionManager" ref="transactionManager"/>
        <property name="hibernateProperties">
            <map>
                <entry key="hibernate.dialect" value="${token.hibernate.dialect}"/>
                <entry key="hibernate.max_fetch_depth" value="${token.hibernate.max_fetch_depth}"/>
                <entry key="hibernate.jdbc.fetch_size" value="${token.hibernate.jdbc.fetch_size}"/>
                <entry key="hibernate.jdbc.batch_size" value="${token.hibernate.jdbc.batch_size}"/>
                <entry key="hibernate.show_sql" value="${token.hibernate.show_sql}"/>

                <entry key="hibernate.multiTenancy" value="SCHEMA"/>
                <entry key="hibernate.current_session_context_class" value="com.junbo.sharding.hibernate.MultiTenantJTASessionContext"/>
                <entry key="hibernate.tenant_identifier_resolver" value="com.junbo.sharding.hibernate.ShardCurrentTenantIdentifierResolver"/>
                <entry key="hibernate.multi_tenant_connection_provider" value-ref="tokenDataSource"/>
                <entry key="hibernate.temp.use_jdbc_metadata_defaults" value="false"/>
            </map>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.junbo.token.db</value>
                <value>com.junbo.token.db.dao</value>
                <value>com.junbo.token.db.entity</value>
            </list>
        </property>
    </bean>
    <!-- Transaction Manager
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean> -->
    <!-- Dao -->
    <bean id="genericDao"
          class="com.junbo.token.db.dao.GenericDAOImpl" abstract="true">
    </bean>

    <bean id="tokenSetDao"
          class="com.junbo.token.db.dao.TokenSetDao" parent="genericDao">
        <property name="persistentClass" value="com.junbo.token.db.entity.TokenSetEntity"/>
    </bean>

    <bean id="tokenOrderDao"
          class="com.junbo.token.db.dao.TokenOrderDao" parent="genericDao">
        <property name="persistentClass" value="com.junbo.token.db.entity.TokenOrderEntity"/>
    </bean>

    <bean id="tokenItemDao"
          class="com.junbo.token.db.dao.TokenItemDao" parent="genericDao">
        <property name="persistentClass" value="com.junbo.token.db.entity.TokenItemEntity"/>
    </bean>

    <bean id="tokenSetOfferDao"
          class="com.junbo.token.db.dao.TokenSetOfferDao" parent="genericDao">
        <property name="persistentClass" value="com.junbo.token.db.entity.TokenSetOfferEntity"/>
    </bean>

    <bean id="tokenConsumptionDao"
          class="com.junbo.token.db.dao.TokenConsumptionDao" parent="genericDao">
        <property name="persistentClass" value="com.junbo.token.db.entity.TokenConsumptionEntity"/>
    </bean>

    <bean id="domainDataRepository"
          class="com.junbo.token.db.repository.DomainDataRepository" abstract="true">
    </bean>

    <bean class="com.junbo.token.db.mapper.CommonMapper" />
    <bean id="tokenMapper" class="com.junbo.token.db.mapper.TokenMapperImpl" />
    <bean id="tokenRepository" class="com.junbo.token.db.repository.TokenRepository" />

</beans>
