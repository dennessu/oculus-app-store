<?xml version="1.1" encoding="UTF-8"?>
<testsuite name="com.junbo.catalog.db.dao.OfferDraftDaoTest" tests="5" failures="0" errors="0" timestamp="2014-03-31T07:58:46" hostname="XumengChendeMacBook-Pro.local" time="0.265">
  <properties/>
  <testcase name="testCreate" classname="com.junbo.catalog.db.dao.OfferDraftDaoTest" time="0.033"/>
  <testcase name="testExists" classname="com.junbo.catalog.db.dao.OfferDraftDaoTest" time="0.035"/>
  <testcase name="testGet" classname="com.junbo.catalog.db.dao.OfferDraftDaoTest" time="0.033"/>
  <testcase name="testGetOffers" classname="com.junbo.catalog.db.dao.OfferDraftDaoTest" time="0.089"/>
  <testcase name="testUpdate" classname="com.junbo.catalog.db.dao.OfferDraftDaoTest" time="0.034"/>
  <system-out><![CDATA[15:58:46.653 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@5259f2b7
15:58:46.653 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@1c5c52f6
15:58:46.694 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@6bc7612a
15:58:46.695 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@57bfc611
15:58:46.738 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@a27ebb8
15:58:46.738 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@6759c069
15:58:46.779 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@68b03764
15:58:46.779 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@7139b2a2
15:58:46.809 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/catalog_ds1 with 3 connection(s) (3 still available)
15:58:46.809 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/catalog_ds1 with 3 connection(s) (3 still available)
15:58:46.809 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001451725D5D90000000C]
15:58:46.809 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - no NOT_ACCESSIBLE connection enlisted in this transaction
15:58:46.809 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - getting IN_POOL connection from an XAPool of resource jdbc/catalog_ds1 with 3 connection(s) (3 still available), waiting if necessary
15:58:46.809 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753 - closing time: 1396252785378, now time: 1396252726809
15:58:46.809 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found IN_POOL connection a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753 from an XAPool of resource jdbc/catalog_ds1 with 3 connection(s) (2 still available)
15:58:46.809 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.809 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.809 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.810 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.810 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753 to the accessible pool
15:58:46.810 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@27cb2753 was in state IN_POOL, testing it
15:58:46.810 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - no query to test connection of a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753, skipping test
15:58:46.810 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.810 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/catalog_ds1 with 3 connection(s) (2 still available)
15:58:46.810 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753 into a Bitronix Transaction with GTRID [737072696E672D62746D000001451725D5D90000000C], status=ACTIVE, 0 resource(s) enlisted (started Mon Mar 31 15:58:46 CST 2014)
15:58:46.810 [Test worker] DEBUG b.tm.resource.ResourceRegistrar - XAResource org.postgresql.xa.PGXAConnection@27cb2753 does not belong to any resource of a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (3 still available)
15:58:46.810 [Test worker] DEBUG b.tm.resource.ResourceRegistrar - XAResource org.postgresql.xa.PGXAConnection@27cb2753 belongs to a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753 that itself belongs to a PoolingDataSource containing an XAPool of resource jdbc/catalog_ds1 with 3 connection(s) (2 still available)
15:58:46.810 [Test worker] DEBUG b.tm.internal.XAResourceManager - creating new branch with a Bitronix XID [737072696E672D62746D000001451725D5D90000000C : 737072696E672D62746D000001451725D61A0000000D]
15:58:46.810 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - assigning <a Bitronix XID [737072696E672D62746D000001451725D5D90000000C : 737072696E672D62746D000001451725D61A0000000D]> to <an XAResourceHolderState with uniqueName=jdbc/catalog_ds1 XAResource=org.postgresql.xa.PGXAConnection@27cb2753 with XID null>
15:58:46.810 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - starting an XAResourceHolderState with uniqueName=jdbc/catalog_ds1 XAResource=org.postgresql.xa.PGXAConnection@27cb2753 with XID a Bitronix XID [737072696E672D62746D000001451725D5D90000000C : 737072696E672D62746D000001451725D61A0000000D] with NOFLAGS
15:58:46.810 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - started an XAResourceHolderState with uniqueName=jdbc/catalog_ds1 XAResource=org.postgresql.xa.PGXAConnection@27cb2753 (started) with XID a Bitronix XID [737072696E672D62746D000001451725D5D90000000C : 737072696E672D62746D000001451725D61A0000000D] with NOFLAGS
15:58:46.810 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - putting XAResourceHolderState [an XAResourceHolderState with uniqueName=jdbc/catalog_ds1 XAResource=org.postgresql.xa.PGXAConnection@27cb2753 (started) with XID a Bitronix XID [737072696E672D62746D000001451725D5D90000000C : 737072696E672D62746D000001451725D61A0000000D]] on a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.810 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - GTRID [737072696E672D62746D000001451725D5D90000000C] previously unknown to a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753, adding it to the resource's transactions list
Hibernate: insert into offer_draft (created_by, created_time, updated_by, updated_time, status, timestamp, offer_name, owner_id, payload, offer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
15:58:46.825 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@5e733d5a
15:58:46.825 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.825 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753 from a Bitronix Transaction with GTRID [737072696E672D62746D000001451725D5D90000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 15:58:46 CST 2014)
15:58:46.825 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.825 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753 from a Bitronix Transaction with GTRID [737072696E672D62746D000001451725D5D90000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 15:58:46 CST 2014)
15:58:46.825 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.825 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.825 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001451725D5D90000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 15:58:46 CST 2014)
15:58:46.825 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.825 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.825 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
15:58:46.826 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753 from the accessible pool
15:58:46.826 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.826 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.826 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753 to the inaccessible pool
15:58:46.826 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.827 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/catalog_ds1 with 3 connection(s) (2 still available)
15:58:46.827 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/catalog_ds1 with 3 connection(s) (2 still available)
15:58:46.827 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001451725D5D90000000C]
15:58:46.827 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.827 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.828 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D000001451725D5D90000000C
15:58:46.828 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
15:58:46.828 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753 from an XAPool of resource jdbc/catalog_ds1 with 3 connection(s) (2 still available)
15:58:46.828 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.828 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.828 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753 from the inaccessible pool
15:58:46.828 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.828 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.829 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D000001451725D5D90000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 15:58:46 CST 2014)
15:58:46.829 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D000001451725D5D90000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 15:58:46 CST 2014)
15:58:46.829 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753 to the accessible pool
15:58:46.829 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@27cb2753 was in state NOT_ACCESSIBLE, no need to test it
15:58:46.829 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.829 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/catalog_ds1 with 3 connection(s) (2 still available)
15:58:46.829 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753 into a Bitronix Transaction with GTRID [737072696E672D62746D000001451725D5D90000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 15:58:46 CST 2014)
15:58:46.830 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/catalog_ds1 XAResource=org.postgresql.xa.PGXAConnection@27cb2753 (started) with XID a Bitronix XID [737072696E672D62746D000001451725D5D90000000C : 737072696E672D62746D000001451725D61A0000000D]
Hibernate: select this_.offer_id as offer1_6_0_, this_.created_by as created2_6_0_, this_.created_time as created3_6_0_, this_.updated_by as updated4_6_0_, this_.updated_time as updated5_6_0_, this_.status as status6_0_, this_.timestamp as timestamp6_0_, this_.offer_name as offer8_6_0_, this_.owner_id as owner9_6_0_, this_.payload as payload6_0_ from offer_draft this_
15:58:46.832 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@5e733d5a
15:58:46.832 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.832 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753 from a Bitronix Transaction with GTRID [737072696E672D62746D000001451725D5D90000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 15:58:46 CST 2014)
15:58:46.832 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.833 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753 from a Bitronix Transaction with GTRID [737072696E672D62746D000001451725D5D90000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 15:58:46 CST 2014)
15:58:46.833 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.833 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.833 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001451725D5D90000000C], status=ACTIVE, 1 resource(s) enlisted (started Mon Mar 31 15:58:46 CST 2014)
15:58:46.833 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.833 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.834 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
15:58:46.834 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753 from the accessible pool
15:58:46.834 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.834 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.834 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753 to the inaccessible pool
15:58:46.834 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/catalog_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@27cb2753
15:58:46.884 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@4490a1ca
15:58:46.884 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@4e94877c
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
