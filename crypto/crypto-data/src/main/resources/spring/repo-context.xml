<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.junbo.crypto.data" />

    <bean id="cryptoDataSource" class="com.junbo.sharding.hibernate.ShardMultiTenantConnectionProviderFactoryBean">
        <property name="jdbcUrls" value="${crypto.db.jdbcUrls}"/>

        <property name="uniqueName" value="jdbc/crypto"/>
        <property name="className" value="${crypto.db.driverClassName}"/>
        <property name="minPoolSize" value="${crypto.db.minPoolSize}"/>
        <property name="maxPoolSize" value="${crypto.db.maxPoolSize}"/>
        <property name="driverProperties">
            <props>
                <prop key="user">${crypto.db.username}</prop>
                <prop key="password">${crypto.db.password}</prop>
            </props>
        </property>
    </bean>

    <bean id="cryptoSessionFactory" class="com.junbo.sharding.hibernate.LocalSessionFactoryWithListenerBean">
        <property name="jtaTransactionManager" ref="transactionManager"/>
        <property name="hibernateProperties">
            <map>
                <entry key="hibernate.dialect" value="${sharding.hibernate.dialect}"/>
                <entry key="hibernate.max_fetch_depth" value="${sharding.hibernate.max_fetch_depth}"/>
                <entry key="hibernate.jdbc.fetch_size" value="${sharding.hibernate.jdbc.fetch_size}"/>
                <entry key="hibernate.jdbc.batch_size" value="${sharding.hibernate.jdbc.batch_size}"/>
                <entry key="hibernate.show_sql" value="${sharding.hibernate.show_sql}"/>

                <entry key="hibernate.multiTenancy" value="SCHEMA"/>
                <entry key="hibernate.current_session_context_class" value="com.junbo.sharding.hibernate.MultiTenantJTASessionContext"/>
                <entry key="hibernate.tenant_identifier_resolver" value="com.junbo.sharding.hibernate.ShardCurrentTenantIdentifierResolver"/>
                <entry key="hibernate.multi_tenant_connection_provider" value-ref="cryptoDataSource"/>
                <entry key="hibernate.temp.use_jdbc_metadata_defaults" value="false"/>
            </map>
        </property>
        <property name="packagesToScan" value="com.junbo.crypto.data.*" />
    </bean>

    <!--Mapper-->
    <bean id="cryptoBaseDAO" class="com.junbo.crypto.data.dao.impl.BaseDAOImpl" abstract="true">
        <property name="sessionFactory" ref="cryptoSessionFactory"/>
        <property name="shardAlgorithm" ref="userShardAlgorithm"/>
        <property name="idGenerator" ref="oculus48IdGenerator"/>
    </bean>

    <bean id="masterKeyDAO" class="com.junbo.crypto.data.dao.impl.MasterKeyDAOImpl" parent="cryptoBaseDAO" />

    <bean id="userCryptoKeyRepo" class="com.junbo.crypto.data.repo.impl.cloudant.CloudantUserCryptoKeyRepoImpl" parent="cloudantClient">
        <property name="dbName" value="user_crypt_key" />
        <property name="cloudantDbUri" value="${crypto.userkey.cloudant.url}" />
    </bean>

    <bean id="itemCryptoRepo" class="com.junbo.crypto.data.repo.impl.cloudant.CloudantItemCryptoRepoImpl" parent="cloudantClient">
        <property name="dbName" value="item_crypt_key" />
        <property name="cloudantDbUri" value="${crypto.itemCryptoKey.cloudant.url}" />
    </bean>

    <bean id="masterkeyRepository" class="com.junbo.crypto.data.repo.impl.sql.SqlMasterKeyRepoImpl">
        <property name="masterKeyDAO" ref="masterKeyDAO" />
    </bean>
</beans>