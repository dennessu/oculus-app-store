import org.apache.tools.ant.filters.*

apply plugin: 'groovy'
apply plugin: 'application'

mainClassName = "com.junbo.apphost.core.JunboApplication"
applicationDefaultJvmArgs = ["-Xmx2048m", "-XX:MaxPermSize=512m", "-Dspring.profiles.active=utility",
    "-Xdebug", "-Xrunjdwp:server=y,transport=dt_socket,address=9401,suspend=n",
    "-Dcom.sun.management.jmxremote.port=9070", "-Dcom.sun.management.jmxremote.ssl=false", "-Dcom.sun.management.jmxremote.authenticate=false"]

configurations {
    startScripts
}

dependencies {
    // add sub apps, so we can bundle everything in one zip
    compile junboProject(':apphost-rest')
    compile junboProject(':apphost-crypto')
    compile junboProject(':apphost-jobs')
    compile junboProject(':apphost-dataloader')
    compile junboProject(':apphost-identity')
}

applicationDistribution.from("../../couchdb") { into "dbsetup/couchdb" }
applicationDistribution.from("../../liquibase") { into "dbsetup/liquibase" }
applicationDistribution.from("../../scripts/pgha") { into "dbsetup/pgha" }

applicationDistribution.from("../apphost-rest/build/scripts") { into "bin" }
applicationDistribution.from("../apphost-crypto/build/scripts") { into "bin" }
applicationDistribution.from("../apphost-jobs/build/scripts") { into "bin" }
applicationDistribution.from("../apphost-dataloader/build/scripts") { into "bin" }
applicationDistribution.from("../apphost-identity/build/scripts") { into "bin" }

applicationDistribution.eachFile { FileCopyDetails f ->
    if (!f.name.endsWith('.sh')) return
    f.filter(FixCrLfFilter, eol: FixCrLfFilter.CrLf.newInstance("lf"))
}

task('silkcloud', dependsOn: [ 'installApp', 'distZip'])
