<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:annotation-config/>
    <tx:annotation-driven/>

    <context:component-scan base-package="com.junbo.subscription.db"/>

    <!--Data source has the database information -->
    <!--Data source has the database information -->
    <bean id="subscriptionDataSource" class="com.junbo.sharding.pool.JunboShardMultiTenantConnectionProviderFactoryBean">
        <property name="jdbcUrls" value="${subscription.db.jdbcUrls}"/>

        <property name="uniqueName" value="jdbc/subscription"/>
        <property name="className" value="${subscription.db.driverClassName}"/>
        <property name="minPoolSize" value="${subscription.db.minPoolSize}"/>
        <property name="maxPoolSize" value="${subscription.db.maxPoolSize}"/>
        <property name="connectionTimeout" value="${common.db.connectionTimeout}"/>
        <property name="driverProperties">
            <props>
                <prop key="user">${subscription.db.username}</prop>
                <prop key="password">${subscription.db.password}</prop>
            </props>
        </property>
    </bean>

    <!-- SessonFactory for Hibernate -->
    <bean id="subscriptionSessionFactory"
          class="com.junbo.sharding.hibernate.LocalSessionFactoryWithListenerBean">
        <property name="jtaTransactionManager" ref="transactionManager"/>
        <property name="hibernateProperties">
            <map>
                <entry key="hibernate.dialect" value="${sharding.hibernate.dialect}"/>
                <entry key="hibernate.max_fetch_depth" value="${sharding.hibernate.max_fetch_depth}"/>
                <entry key="hibernate.jdbc.fetch_size" value="${sharding.hibernate.jdbc.fetch_size}"/>
                <entry key="hibernate.jdbc.batch_size" value="${sharding.hibernate.jdbc.batch_size}"/>
                <entry key="hibernate.show_sql" value="${sharding.hibernate.show_sql}"/>
                <entry key="hibernate.multiTenancy" value="SCHEMA"/>
                <entry key="hibernate.current_session_context_class" value="com.junbo.sharding.hibernate.MultiTenantJTASessionContext"/>
                <entry key="hibernate.tenant_identifier_resolver" value="com.junbo.sharding.hibernate.ShardCurrentTenantIdentifierResolver"/>
                <entry key="hibernate.multi_tenant_connection_provider" value-ref="subscriptionDataSource"/>
                <entry key="hibernate.temp.use_jdbc_metadata_defaults" value="false"/>
            </map>
        </property>
        <property name="packagesToScan" value="com.junbo.subscription.db.entity"/>
    </bean>

    <!-- Transaction Manager -->
    <!--bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Dao -->
    <bean id="baseDao" class="com.junbo.subscription.db.dao.BaseDao" abstract="true"/>
    <bean id="subscriptionDao"
          class="com.junbo.subscription.db.dao.SubscriptionDao" parent="baseDao">
        <property name="classType" value="com.junbo.subscription.db.entity.SubscriptionEntity"/>
    </bean>
    <bean id="subscriptionEventDao"
          class="com.junbo.subscription.db.dao.SubscriptionEventDao" parent="baseDao">
        <property name="classType" value="com.junbo.subscription.db.entity.SubscriptionEventEntity"/>
    </bean>
    <bean id="subscriptionEventActionDao"
          class="com.junbo.subscription.db.dao.SubscriptionEventActionDao" parent="baseDao">
        <property name="classType" value="com.junbo.subscription.db.entity.SubscriptionEventActionEntity"/>
    </bean>
    <bean id="subscriptionEntitlementDao"
          class="com.junbo.subscription.db.dao.SubscriptionEntitlementDao" parent="baseDao">
        <property name="classType" value="com.junbo.subscription.db.entity.SubscriptionEntitlementEntiy"/>
    </bean>

    <bean id="subscriptionRepository" class="com.junbo.subscription.db.repository.SubscriptionRepository"></bean>
    <bean id="subscriptionEventRepository" class="com.junbo.subscription.db.repository.SubscriptionEventRepository"></bean>
    <bean id="subscriptionEventActionRepository" class="com.junbo.subscription.db.repository.SubscriptionEventActionRepository"></bean>
    <bean id="subscriptionEntitlementRepository" class="com.junbo.subscription.db.repository.SubscriptionEntitlementRepository"></bean>

    <bean id="subscriptionEntityViewRepository" class="com.junbo.sharding.view.DefaultEntityViewRepository">
        <property name="entityViews">
            <list>
                <bean class="com.junbo.subscription.db.view.SubsOperationView" />
            </list>
        </property>
    </bean>

    <bean id="subscriptionMultimapDAO" class="com.junbo.sharding.view.DefaultMultimapDAO">
        <property name="sessionFactory" ref="indexSessionFactory" />
        <property name="shardAlgorithm" ref="externalShardAlgorithm" />
    </bean>


    <bean id="subscriptionViewQueryFactory" class="com.junbo.sharding.view.DefaultViewQueryFactory">
        <property name="entityViewRepository" ref="subscriptionEntityViewRepository" />
        <property name="multimapDAO" ref="subscriptionMultimapDAO" />
    </bean>
</beans>