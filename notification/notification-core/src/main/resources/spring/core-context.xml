<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.junbo.notification.core"/>
    <context:annotation-config/>

    <!-- connection factory -->
    <bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${notification.activemq.brokerURL}"/>
        <property name="userName" value="${notification.activemq.userName}"/>
        <property name="password" value="${notification.activemq.password}"/>
        <property name="useAsyncSend" value="${notification.activemq.useAsyncSend}"/>
    </bean>

    <!-- base definition -->
    <bean id="basePublisher" class="com.junbo.notification.core.BasePublisher" abstract="true"/>

    <bean id="baseJmsTemplate" class="org.springframework.jms.core.JmsTemplate" abstract="true">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="explicitQosEnabled" value="true"/>
        <property name="deliveryPersistent" value="true"/>
    </bean>

    <!--
        #sessionAcknowledgeMode
        - AUTO_ACKNOWLEDGE (default):
            Automatic message acknowledgment before listener execution;
            no redelivery in case of exception thrown.

        - CLIENT_ACKNOWLEDGE:
            Automatic message acknowledgment after successful listener execution;
            no redelivery in case of exception thrown.

        - DUPS_OK_ACKNOWLEDGE:
            Lazy message acknowledgment during or after listener execution;
            potential redelivery in case of exception thrown.

        #sessionTransacted:
        - true: Transactional acknowledgment after successful listener execution; guaranteed redelivery in case of exception thrown.
    -->
    <bean id="baseListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer"
          abstract="true">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="sessionAcknowledgeMode" value="2"/>
    </bean>

    <!-- queue -->
    <bean id="emailQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="EMAIL_QUEUE"/>
    </bean>

    <bean id="offerQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="OFFER_QUEUE"/>
    </bean>

    <!-- JMS template -->
    <bean id="emailJmsTemplate" class="org.springframework.jms.core.JmsTemplate" parent="baseJmsTemplate">
        <property name="defaultDestination" ref="emailQueue"/>
    </bean>

    <bean id="offerJmsTemplate" class="org.springframework.jms.core.JmsTemplate" parent="baseJmsTemplate">
        <property name="defaultDestination" ref="offerQueue"/>
    </bean>
</beans>