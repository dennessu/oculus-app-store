<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       ">

    <context:annotation-config />

    <tx:annotation-driven />
    <context:component-scan base-package="com.junbo.identity.data" />
    <import resource="classpath*:spring/transaction.xml"/>
    <import resource="classpath*:spring/sharding-context.xml"/>

    <bean id="__builtinMapper" class="com.junbo.oom.core.builtin.BuiltinMapper" />
    <bean id="__commonMapper" class="com.junbo.identity.data.mapper.CommonMapper" />

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="baseDAO" class="com.junbo.identity.data.dao.impl.BaseDAO" abstract="true">
        <property name="sessionFactory" ref="identitySessionFactory"/>
        <property name="shardAlgorithm" ref="userShardAlgorithm"/>
        <property name="viewQueryFactory" ref="defaultViewQueryFactory"/>
        <property name="idGenerator" ref="oculus48IdGenerator"/>
    </bean>
    <bean id="userDAO" class="com.junbo.identity.data.dao.impl.UserDAOImpl" parent="baseDAO" />
    <bean id="groupDAO" class="com.junbo.identity.data.dao.impl.GroupDAOImpl" parent="baseDAO" />
    <bean id="userAuthenticatorDAO" class="com.junbo.identity.data.dao.impl.UserAuthenticatorDAOImpl" parent="baseDAO" />
    <bean id="userDeviceDAO" class="com.junbo.identity.data.dao.impl.UserDeviceDAOImpl" parent="baseDAO" />
    <bean id="userEmailDAO" class="com.junbo.identity.data.dao.impl.UserEmailDAOImpl" parent="baseDAO" />
    <bean id="userGroupDAO" class="com.junbo.identity.data.dao.impl.UserGroupDAOImpl" parent="baseDAO" />
    <bean id="userCredentialVerifyAttemptDAO" class="com.junbo.identity.data.dao.impl.UserCredentialVerifyAttemptDAOImpl" parent="baseDAO" />
    <bean id="userOptinDAO" class="com.junbo.identity.data.dao.impl.UserOptinDAOImpl" parent="baseDAO" />
    <bean id="userPasswordDAO" class="com.junbo.identity.data.dao.impl.UserPasswordDAOImpl" parent="baseDAO" />
    <bean id="userPhoneNumberDAO" class="com.junbo.identity.data.dao.impl.UserPhoneNumberDAOImpl" parent="baseDAO" />
    <bean id="userPinDAO" class="com.junbo.identity.data.dao.impl.UserPinDAOImpl" parent="baseDAO" />
    <bean id="userSecurityQuestionDAO" class="com.junbo.identity.data.dao.impl.UserSecurityQuestionDAOImpl" parent="baseDAO" />
    <bean id="userTosDAO" class="com.junbo.identity.data.dao.impl.UserTosDAOImpl" parent="baseDAO" />
    <bean id="userNameDAO" class="com.junbo.identity.data.dao.impl.UserNameDAOImpl" parent="baseDAO" />
    <bean id="userSecurityQuestionAttemptDAO" class="com.junbo.identity.data.dao.impl.UserSecurityQuestionAttemptDAOImpl" parent="baseDAO" />
    <bean id="deviceDAO" class="com.junbo.identity.data.dao.impl.DeviceDAOImpl" parent="baseDAO" />
    <bean id="tosDAO" class="com.junbo.identity.data.dao.impl.TosDAOImpl" parent="baseDAO" />
    <bean id="roleDAO" class="com.junbo.identity.data.dao.impl.RoleDAOImpl" parent="baseDAO"/>
    <bean id="roleAssignmentDAO" class="com.junbo.identity.data.dao.impl.RoleAssignmentDAOImpl" parent="baseDAO"/>

    <bean id="groupRepository" class="com.junbo.identity.data.repository.impl.GroupRepositoryImpl" />
    <bean id="userAuthenticatorRepository" class="com.junbo.identity.data.repository.impl.UserAuthenticatorRepositoryImpl" />
    <bean id="userDeviceRepository" class="com.junbo.identity.data.repository.impl.UserDeviceRepositoryImpl" />
    <bean id="userEmailRepository" class="com.junbo.identity.data.repository.impl.UserEmailRepositoryImpl" />
    <bean id="userGroupRepository" class="com.junbo.identity.data.repository.impl.UserGroupRepositoryImpl" />
    <bean id="userCredentialVerifyAttemptRepository" class="com.junbo.identity.data.repository.impl.UserCredentialVerifyAttemptRepositoryImpl" />
    <bean id="userOptinRepository" class="com.junbo.identity.data.repository.impl.UserOptinRepositoryImpl" />
    <bean id="userPasswordRepository" class="com.junbo.identity.data.repository.impl.UserPasswordRepositoryImpl" />
    <bean id="userPhoneNumberRepository" class="com.junbo.identity.data.repository.impl.UserPhoneNumberRepositoryImpl" />
    <bean id="userPinRepository" class="com.junbo.identity.data.repository.impl.UserPinRepositoryImpl" />
    <bean id="userRepository" class="com.junbo.identity.data.repository.impl.UserRepositoryImpl" />
    <bean id="userSecurityQuestionRepository" class="com.junbo.identity.data.repository.impl.UserSecurityQuestionRepositoryImpl" />
    <bean id="userTosRepository" class="com.junbo.identity.data.repository.impl.UserTosRepositoryImpl" />
    <bean id="securityQuestionRepository" class="com.junbo.identity.data.repository.impl.SecurityQuestionRepositoryImpl"/>
    <bean id="userSecurityQuestionAttemptRepository" class="com.junbo.identity.data.repository.impl.UserSecurityQuestionAttemptRepositoryImpl" />
    <bean id="deviceRepository" class="com.junbo.identity.data.repository.impl.DeviceRepositoryImpl" />
    <bean id="tosRepository" class="com.junbo.identity.data.repository.impl.TosRepositoryImpl" />
    <bean id="roleRepository" class="com.junbo.identity.data.repository.impl.RoleRepositoryImpl">
        <property name="roleDAO" ref="roleDAO"/>
    </bean>
    <bean id="roleAssignmentRepository" class="com.junbo.identity.data.repository.impl.RoleAssignmentRepositoryImpl">
        <property name="roleAssignmentDAO" ref="roleAssignmentDAO"/>
    </bean>
    
    <bean id="defaultEntityViewRepository" class="com.junbo.sharding.view.DefaultEntityViewRepository">
        <property name="entityViews">
            <list>
                <bean class="com.junbo.identity.data.view.UsernameView" />
                <bean class="com.junbo.identity.data.view.GroupNameView" />
                <bean class="com.junbo.identity.data.view.AuthenticatorValueView" />
                <bean class="com.junbo.identity.data.view.UserEmailView" />
                <bean class="com.junbo.identity.data.view.DeviceExternalRefView" />
                <bean class="com.junbo.identity.data.view.UserDeviceIdView" />
                <bean class="com.junbo.identity.data.view.UserGroupIdView"/>
                <bean class="com.junbo.identity.data.view.RoleNameView"/>
                <bean class="com.junbo.identity.data.view.RoleAssignmentRoleIdAssigneeView"/>
            </list>
        </property>
    </bean>

    <bean id="multimapDAO" class="com.junbo.sharding.view.DefaultMultimapDAO">
        <property name="sessionFactory" ref="indexSessionFactory" />
        <property name="shardAlgorithm" ref="externalShardAlgorithm" />
    </bean>

    <bean id="entityListener" class="com.junbo.sharding.view.EntityListener">
        <property name="entityViewRepository" ref="defaultEntityViewRepository" />
        <property name="multimapDAO" ref="multimapDAO" />
    </bean>

    <bean id="defaultViewQueryFactory" class="com.junbo.sharding.view.DefaultViewQueryFactory">
        <property name="entityViewRepository" ref="defaultEntityViewRepository" />
        <property name="multimapDAO" ref="multimapDAO" />
    </bean>


    <bean id="indexDataSource" class="com.junbo.sharding.hibernate.ShardMultiTenantConnectionProviderFactoryBean">
        <property name="jdbcUrls" value="${index.db.jdbcUrls}"/>

        <property name="uniqueName" value="jdbc/index"/>
        <property name="className" value="${index.db.driverClassName}"/>
        <property name="minPoolSize" value="${index.db.minPoolSize}"/>
        <property name="maxPoolSize" value="${index.db.maxPoolSize}"/>
        <property name="driverProperties">
            <props>
                <prop key="user">${index.db.username}</prop>
                <prop key="password">${index.db.password}</prop>
            </props>
        </property>
    </bean>

    <bean id="indexSessionFactory" class="com.junbo.sharding.hibernate.LocalSessionFactoryWithListenerBean">
        <property name="jtaTransactionManager" ref="transactionManager"/>
        <property name="hibernateProperties">
            <map>
                <entry key="hibernate.dialect" value="${sharding.hibernate.dialect}"/>
                <entry key="hibernate.max_fetch_depth" value="${sharding.hibernate.max_fetch_depth}"/>
                <entry key="hibernate.jdbc.fetch_size" value="${sharding.hibernate.jdbc.fetch_size}"/>
                <entry key="hibernate.jdbc.batch_size" value="${sharding.hibernate.jdbc.batch_size}"/>
                <entry key="hibernate.show_sql" value="${sharding.hibernate.show_sql}"/>

                <entry key="hibernate.multiTenancy" value="SCHEMA"/>
                <entry key="hibernate.current_session_context_class" value="com.junbo.sharding.hibernate.MultiTenantJTASessionContext"/>
                <entry key="hibernate.tenant_identifier_resolver" value="com.junbo.sharding.hibernate.ShardCurrentTenantIdentifierResolver"/>
                <entry key="hibernate.multi_tenant_connection_provider" value-ref="indexDataSource"/>
                <entry key="hibernate.temp.use_jdbc_metadata_defaults" value="false"/>
            </map>
        </property>
    </bean>

    <bean id="identityDataSource" class="com.junbo.sharding.hibernate.ShardMultiTenantConnectionProviderFactoryBean">
        <property name="jdbcUrls" value="${identity.db.jdbcUrls}"/>

        <property name="uniqueName" value="jdbc/identity"/>
        <property name="className" value="${identity.db.driverClassName}"/>
        <property name="minPoolSize" value="${identity.db.minPoolSize}"/>
        <property name="maxPoolSize" value="${identity.db.maxPoolSize}"/>
        <property name="driverProperties">
            <props>
                <prop key="user">${identity.db.username}</prop>
                <prop key="password">${identity.db.password}</prop>
            </props>
        </property>
    </bean>

    <bean id="identitySessionFactory" class="com.junbo.sharding.hibernate.LocalSessionFactoryWithListenerBean">
        <property name="jtaTransactionManager" ref="transactionManager"/>
        <property name="hibernateProperties">
            <map>
                <entry key="hibernate.dialect" value="${sharding.hibernate.dialect}"/>
                <entry key="hibernate.max_fetch_depth" value="${sharding.hibernate.max_fetch_depth}"/>
                <entry key="hibernate.jdbc.fetch_size" value="${sharding.hibernate.jdbc.fetch_size}"/>
                <entry key="hibernate.jdbc.batch_size" value="${sharding.hibernate.jdbc.batch_size}"/>
                <entry key="hibernate.show_sql" value="${sharding.hibernate.show_sql}"/>

                <entry key="hibernate.multiTenancy" value="SCHEMA"/>
                <entry key="hibernate.current_session_context_class" value="com.junbo.sharding.hibernate.MultiTenantJTASessionContext"/>
                <entry key="hibernate.tenant_identifier_resolver" value="com.junbo.sharding.hibernate.ShardCurrentTenantIdentifierResolver"/>
                <entry key="hibernate.multi_tenant_connection_provider" value-ref="identityDataSource"/>
                <entry key="hibernate.temp.use_jdbc_metadata_defaults" value="false"/>
            </map>
        </property>

        <property name="packagesToScan" value="com.junbo.identity.data.entity.*"/>
        <property name="postInsertEventListeners" ref="entityListener" />
        <property name="postUpdateEventListeners" ref="entityListener" />
        <property name="postDeleteEventListeners" ref="entityListener" />
        <property name="entityInterceptor">
            <bean class="com.junbo.identity.data.dao.interceptor.AuditInterceptor" />
        </property>
    </bean>

    <bean id="configDataSource" class="com.junbo.sharding.hibernate.ShardMultiTenantConnectionProviderFactoryBean">
        <property name="jdbcUrls" value="${config.db.jdbcUrls}"/>

        <property name="uniqueName" value="jdbc/config"/>
        <property name="className" value="${config.db.driverClassName}"/>
        <property name="minPoolSize" value="${config.db.minPoolSize}"/>
        <property name="maxPoolSize" value="${config.db.maxPoolSize}"/>
        <property name="driverProperties">
            <props>
                <prop key="user">${config.db.username}</prop>
                <prop key="password">${config.db.password}</prop>
            </props>
        </property>
    </bean>

    <bean id="configSessionFactory" class="com.junbo.sharding.hibernate.LocalSessionFactoryWithListenerBean">
        <property name="jtaTransactionManager" ref="transactionManager"/>
        <property name="hibernateProperties">
            <map>
                <entry key="hibernate.dialect" value="${sharding.hibernate.dialect}"/>
                <entry key="hibernate.max_fetch_depth" value="${sharding.hibernate.max_fetch_depth}"/>
                <entry key="hibernate.jdbc.fetch_size" value="${sharding.hibernate.jdbc.fetch_size}"/>
                <entry key="hibernate.jdbc.batch_size" value="${sharding.hibernate.jdbc.batch_size}"/>
                <entry key="hibernate.show_sql" value="${sharding.hibernate.show_sql}"/>

                <entry key="hibernate.multiTenancy" value="SCHEMA"/>
                <entry key="hibernate.current_session_context_class" value="com.junbo.sharding.hibernate.MultiTenantJTASessionContext"/>
                <entry key="hibernate.tenant_identifier_resolver" value="com.junbo.sharding.hibernate.ShardCurrentTenantIdentifierResolver"/>
                <entry key="hibernate.multi_tenant_connection_provider" value-ref="indexDataSource"/>
                <entry key="hibernate.temp.use_jdbc_metadata_defaults" value="false"/>
            </map>
        </property>
    </bean>

    <bean id="securityQuestionDAO" class="com.junbo.identity.data.dao.impl.SecurityQuestionDAOImpl">
        <property name="sessionFactory" ref="configSessionFactory"/>
    </bean>
</beans>
