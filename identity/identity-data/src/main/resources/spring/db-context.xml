<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       ">

    <context:component-scan base-package="com.junbo.identity.data" />

    <!--Mapper-->
    <bean id="__builtinMapper" class="com.junbo.oom.core.builtin.BuiltinMapper" />
    <bean id="__commonMapper" class="com.junbo.identity.data.mapper.CommonMapper" />
    <bean id="modelMapper" class="com.junbo.identity.data.mapper.ModelMapperImpl">
        <property name="__builtinMapper" ref="__builtinMapper"/>
        <property name="__commonMapper" ref="__commonMapper"/>
    </bean>

    <bean id="identityBaseDAO" class="com.junbo.identity.data.dao.impl.BaseDAO" abstract="true">
        <property name="sessionFactory" ref="identitySessionFactory"/>
        <property name="shardAlgorithm" ref="userShardAlgorithm"/>
        <property name="viewQueryFactory" ref="defaultViewQueryFactory"/>
        <property name="idGenerator" ref="oculus48IdGenerator"/>
    </bean>
    <bean id="userDAO" class="com.junbo.identity.data.dao.impl.UserDAOImpl" parent="identityBaseDAO" />
    <bean id="groupDAO" class="com.junbo.identity.data.dao.impl.GroupDAOImpl" parent="identityBaseDAO" />
    <bean id="userAuthenticatorDAO" class="com.junbo.identity.data.dao.impl.UserAuthenticatorDAOImpl" parent="identityBaseDAO" />
    <bean id="userEmailDAO" class="com.junbo.identity.data.dao.impl.UserEmailDAOImpl" parent="identityBaseDAO" />
    <bean id="userGroupDAO" class="com.junbo.identity.data.dao.impl.UserGroupDAOImpl" parent="identityBaseDAO" />
    <bean id="userCredentialVerifyAttemptDAO" class="com.junbo.identity.data.dao.impl.UserCredentialVerifyAttemptDAOImpl" parent="identityBaseDAO" />
    <bean id="userOptinDAO" class="com.junbo.identity.data.dao.impl.UserCommunicationDAOImpl" parent="identityBaseDAO" />
    <bean id="userPasswordDAO" class="com.junbo.identity.data.dao.impl.UserPasswordDAOImpl" parent="identityBaseDAO" />
    <bean id="userPhoneNumberDAO" class="com.junbo.identity.data.dao.impl.UserPhoneNumberDAOImpl" parent="identityBaseDAO" />
    <bean id="userPinDAO" class="com.junbo.identity.data.dao.impl.UserPinDAOImpl" parent="identityBaseDAO" />
    <bean id="userSecurityQuestionDAO" class="com.junbo.identity.data.dao.impl.UserSecurityQuestionDAOImpl" parent="identityBaseDAO" />
    <bean id="userTosDAO" class="com.junbo.identity.data.dao.impl.UserTosDAOImpl" parent="identityBaseDAO" />
    <bean id="userNameDAO" class="com.junbo.identity.data.dao.impl.UserNameDAOImpl" parent="identityBaseDAO" />
    <bean id="userSecurityQuestionAttemptDAO" class="com.junbo.identity.data.dao.impl.UserSecurityQuestionAttemptDAOImpl" parent="identityBaseDAO" />
    <bean id="deviceDAO" class="com.junbo.identity.data.dao.impl.DeviceDAOImpl" parent="identityBaseDAO" />
    <bean id="tosDAO" class="com.junbo.identity.data.dao.impl.TosDAOImpl" parent="identityBaseDAO" />
    <bean id="roleDAO" class="com.junbo.identity.data.dao.impl.RoleDAOImpl" parent="identityBaseDAO"/>
    <bean id="roleAssignmentDAO" class="com.junbo.identity.data.dao.impl.RoleAssignmentDAOImpl" parent="identityBaseDAO"/>
    <bean id="addressDAO" class="com.junbo.identity.data.dao.impl.AddressDAOImpl" parent="identityBaseDAO" />
    <bean id="userAddressDAO" class="com.junbo.identity.data.dao.impl.UserAddressDAOImpl" parent="identityBaseDAO" />
    <bean id="userTeleDAO" class="com.junbo.identity.data.dao.impl.UserTeleDAOImpl" parent="identityBaseDAO" />
    <bean id="userTeleAttemptDAO" class="com.junbo.identity.data.dao.impl.UserTeleAttemptDAOImpl" parent="identityBaseDAO" />
    <bean id="userTeleBackupCodeDAO" class="com.junbo.identity.data.dao.impl.UserTeleBackupCodeDAOImpl" parent="identityBaseDAO" />
    <bean id="userTeleBackupCodeAttemptDAO" class="com.junbo.identity.data.dao.impl.UserTeleBackupCodeAttemptDAOImpl" parent="identityBaseDAO" />

    <bean id="sqlUserAuthenticatorRepository" class="com.junbo.identity.data.repository.impl.sql.UserAuthenticatorRepositorySqlImpl">
        <property name="modelMapper" ref="modelMapper"/>
        <property name="authenticatorDAO" ref="userAuthenticatorDAO"/>
    </bean>

    <bean id="sqlGroupRepository" class="com.junbo.identity.data.repository.impl.sql.GroupRepositorySqlImpl">
        <property name="modelMapper" ref="modelMapper"/>
        <property name="groupDAO" ref="groupDAO"/>
    </bean>

    <bean id="sqlUserGroupRepository" class="com.junbo.identity.data.repository.impl.sql.UserGroupRepositorySqlImpl" >
        <property name="userGroupDAO" ref="userGroupDAO"/>
        <property name="modelMapper" ref="modelMapper"/>
    </bean>

    <bean id="sqlUserCredentialVerifyAttemptRepository" class="com.junbo.identity.data.repository.impl.sql.UserCredentialVerifyAttemptRepositorySqlImpl" >
        <property name="modelMapper" ref="modelMapper"/>
        <property name="credentialVerifyAttemptDAO" ref="userCredentialVerifyAttemptDAO"/>
    </bean>
    <bean id="sqlUserOptinRepository" class="com.junbo.identity.data.repository.impl.sql.UserCommunicationRepositorySqlImpl" >
        <property name="userOptinDAO" ref="userOptinDAO"/>
        <property name="modelMapper" ref="modelMapper"/>
    </bean>
    <bean id="sqlUserPasswordRepository" class="com.junbo.identity.data.repository.impl.sql.UserPasswordRepositorySqlImpl" >
        <property name="userPasswordDAO" ref="userPasswordDAO"/>
        <property name="modelMapper" ref="modelMapper"/>
    </bean>
    <bean id="sqlUserPinRepository" class="com.junbo.identity.data.repository.impl.sql.UserPinRepositorySqlImpl" >
        <property name="modelMapper" ref="modelMapper"/>
        <property name="userPinDAO" ref="userPinDAO"/>
    </bean>
    <bean id="sqlUserRepository" class="com.junbo.identity.data.repository.impl.sql.UserRepositorySqlImpl" >
        <property name="userDAO" ref="userDAO"/>
        <property name="modelMapper" ref="modelMapper"/>
    </bean>
    <bean id="sqlUserSecurityQuestionRepository" class="com.junbo.identity.data.repository.impl.sql.UserSecurityQuestionRepositorySqlImpl" >
        <property name="userSecurityQuestionDAO" ref="userSecurityQuestionDAO"/>
        <property name="modelMapper" ref="modelMapper"/>
    </bean>

    <bean id="sqlUserTosRepository" class="com.junbo.identity.data.repository.impl.sql.UserTosRepositorySqlImpl" >
        <property name="modelMapper" ref="modelMapper"/>
        <property name="userTosDAO" ref="userTosDAO"/>
    </bean>

    <bean id="sqlSecurityQuestionRepository" class="com.junbo.identity.data.repository.impl.sql.SecurityQuestionRepositorySqlImpl">
        <property name="securityQuestionDAO" ref="securityQuestionDAO"/>
        <property name="modelMapper" ref="modelMapper"/>
    </bean>

    <bean id="sqlUserSecurityQuestionAttemptRepository" class="com.junbo.identity.data.repository.impl.sql.UserSecurityQuestionAttemptRepositorySqlImpl" >
        <property name="modelMapper" ref="modelMapper"/>
        <property name="userSecurityQuestionAttemptDAO" ref="userSecurityQuestionAttemptDAO"/>
    </bean>

    <bean id="sqlDeviceRepository" class="com.junbo.identity.data.repository.impl.sql.DeviceRepositorySqlImpl" >
        <property name="modelMapper" ref="modelMapper"/>
        <property name="deviceDAO" ref="deviceDAO"/>
    </bean>

    <bean id="sqlTosRepository" class="com.junbo.identity.data.repository.impl.sql.TosRepositorySqlImpl" >
        <property name="modelMapper" ref="modelMapper"/>
        <property name="tosDAO" ref="tosDAO"/>
    </bean>

    <bean id="sqlRoleRepository" class="com.junbo.identity.data.repository.impl.sql.RoleRepositorySqlImpl">
        <property name="roleDAO" ref="roleDAO"/>
    </bean>

    <bean id="sqlRoleAssignmentRepository" class="com.junbo.identity.data.repository.impl.sql.RoleAssignmentRepositorySqlImpl">
        <property name="roleAssignmentDAO" ref="roleAssignmentDAO"/>
    </bean>

    <bean id="sqlAddressRepository" class="com.junbo.identity.data.repository.impl.sql.AddressRepositorySqlImpl" >
        <property name="addressDAO" ref="addressDAO"/>
        <property name="modelMapper" ref="modelMapper"/>
    </bean>

    <bean id="sqlUserTeleRepository" class="com.junbo.identity.data.repository.impl.sql.UserTeleRepositorySqlImpl">
        <property name="userTeleDAO" ref="userTeleDAO" />
        <property name="modelMapper" ref="modelMapper" />
    </bean>
    
    <bean id="sqlUserTeleAttemptRepository" class="com.junbo.identity.data.repository.impl.sql.UserTeleAttemptRepositorySqlImpl">
        <property name="userTeleAttemptDAO" ref="userTeleAttemptDAO" />
        <property name="modelMapper" ref="modelMapper" />
    </bean>
    
    <bean id="sqlUserTeleBackupCodeRepository" class="com.junbo.identity.data.repository.impl.sql.UserTeleBackupCodeRepositorySqlImpl">
        <property name="userTeleBackupCodeDAO" ref="userTeleBackupCodeDAO" />
        <property name="modelMapper" ref="modelMapper" />
    </bean>

    <bean id="sqlUserTeleBackupCodeAttemptRepository" class="com.junbo.identity.data.repository.impl.sql.UserTeleBackupCodeAttemptRepositorySqlImpl">
        <property name="userTeleBackupCodeAttemptDAO" ref="userTeleBackupCodeAttemptDAO" />
        <property name="modelMapper" ref="modelMapper" />
    </bean>
    
    <bean id="defaultEntityViewRepository" class="com.junbo.sharding.view.DefaultEntityViewRepository">
        <property name="entityViews">
            <list>
                <bean class="com.junbo.identity.data.view.UsernameView" />
                <bean class="com.junbo.identity.data.view.GroupNameView" />
                <bean class="com.junbo.identity.data.view.AuthenticatorValueView" />
                <bean class="com.junbo.identity.data.view.UserEmailView" />
                <bean class="com.junbo.identity.data.view.DeviceExternalRefView" />
                <bean class="com.junbo.identity.data.view.UserDeviceIdView" />
                <bean class="com.junbo.identity.data.view.UserGroupIdView"/>
                <bean class="com.junbo.identity.data.view.RoleNameView"/>
                <bean class="com.junbo.identity.data.view.RoleAssignmentRoleIdAssigneeView"/>
                <bean class="com.junbo.identity.data.view.UserOptinCommunicationView" />
                <bean class="com.junbo.identity.data.view.CommunicationNameView" />
            </list>
        </property>
    </bean>

    <bean id="multimapDAO" class="com.junbo.sharding.view.DefaultMultimapDAO">
        <property name="sessionFactory" ref="indexSessionFactory" />
        <property name="shardAlgorithm" ref="externalShardAlgorithm" />
    </bean>

    <bean id="entityListener" class="com.junbo.sharding.view.EntityListener">
        <property name="entityViewRepository" ref="defaultEntityViewRepository" />
        <property name="multimapDAO" ref="multimapDAO" />
    </bean>

    <bean id="defaultViewQueryFactory" class="com.junbo.sharding.view.DefaultViewQueryFactory">
        <property name="entityViewRepository" ref="defaultEntityViewRepository" />
        <property name="multimapDAO" ref="multimapDAO" />
    </bean>

    <bean id="identityDataSource" class="com.junbo.sharding.hibernate.ShardMultiTenantConnectionProviderFactoryBean">
        <property name="jdbcUrls" value="${identity.db.jdbcUrls}"/>

        <property name="uniqueName" value="jdbc/identity"/>
        <property name="className" value="${identity.db.driverClassName}"/>
        <property name="minPoolSize" value="${identity.db.minPoolSize}"/>
        <property name="maxPoolSize" value="${identity.db.maxPoolSize}"/>
        <property name="driverProperties">
            <props>
                <prop key="user">${identity.db.username}</prop>
                <prop key="password">${identity.db.password}</prop>
            </props>
        </property>
    </bean>

    <bean id="identitySessionFactory" class="com.junbo.sharding.hibernate.LocalSessionFactoryWithListenerBean">
        <property name="jtaTransactionManager" ref="transactionManager"/>
        <property name="hibernateProperties">
            <map>
                <entry key="hibernate.dialect" value="${sharding.hibernate.dialect}"/>
                <entry key="hibernate.max_fetch_depth" value="${sharding.hibernate.max_fetch_depth}"/>
                <entry key="hibernate.jdbc.fetch_size" value="${sharding.hibernate.jdbc.fetch_size}"/>
                <entry key="hibernate.jdbc.batch_size" value="${sharding.hibernate.jdbc.batch_size}"/>
                <entry key="hibernate.show_sql" value="${sharding.hibernate.show_sql}"/>

                <entry key="hibernate.multiTenancy" value="SCHEMA"/>
                <entry key="hibernate.current_session_context_class" value="com.junbo.sharding.hibernate.MultiTenantJTASessionContext"/>
                <entry key="hibernate.tenant_identifier_resolver" value="com.junbo.sharding.hibernate.ShardCurrentTenantIdentifierResolver"/>
                <entry key="hibernate.multi_tenant_connection_provider" value-ref="identityDataSource"/>
                <entry key="hibernate.temp.use_jdbc_metadata_defaults" value="false"/>
            </map>
        </property>

        <property name="packagesToScan" value="com.junbo.identity.data.entity.*"/>
        <property name="postInsertEventListeners" ref="entityListener" />
        <property name="postUpdateEventListeners" ref="entityListener" />
        <property name="postDeleteEventListeners" ref="entityListener" />
        <property name="entityInterceptor">
            <bean class="com.junbo.identity.data.dao.interceptor.AuditInterceptor" />
        </property>
    </bean>

    <bean id="configDataSource" class="com.junbo.sharding.hibernate.ShardMultiTenantConnectionProviderFactoryBean">
        <property name="jdbcUrls" value="${config.db.jdbcUrls}"/>

        <property name="uniqueName" value="jdbc/config"/>
        <property name="className" value="${config.db.driverClassName}"/>
        <property name="minPoolSize" value="${config.db.minPoolSize}"/>
        <property name="maxPoolSize" value="${config.db.maxPoolSize}"/>
        <property name="driverProperties">
            <props>
                <prop key="user">${config.db.username}</prop>
                <prop key="password">${config.db.password}</prop>
            </props>
        </property>
    </bean>

    <bean id="configSessionFactory" class="com.junbo.sharding.hibernate.LocalSessionFactoryWithListenerBean">
        <property name="jtaTransactionManager" ref="transactionManager"/>
        <property name="hibernateProperties">
            <map>
                <entry key="hibernate.dialect" value="${sharding.hibernate.dialect}"/>
                <entry key="hibernate.max_fetch_depth" value="${sharding.hibernate.max_fetch_depth}"/>
                <entry key="hibernate.jdbc.fetch_size" value="${sharding.hibernate.jdbc.fetch_size}"/>
                <entry key="hibernate.jdbc.batch_size" value="${sharding.hibernate.jdbc.batch_size}"/>
                <entry key="hibernate.show_sql" value="${sharding.hibernate.show_sql}"/>

                <entry key="hibernate.multiTenancy" value="SCHEMA"/>
                <entry key="hibernate.current_session_context_class" value="com.junbo.sharding.hibernate.MultiTenantJTASessionContext"/>
                <entry key="hibernate.tenant_identifier_resolver" value="com.junbo.sharding.hibernate.ShardCurrentTenantIdentifierResolver"/>
                <entry key="hibernate.multi_tenant_connection_provider" value-ref="configDataSource"/>
                <entry key="hibernate.temp.use_jdbc_metadata_defaults" value="false"/>
            </map>
        </property>
    </bean>

    <bean id="securityQuestionDAO" class="com.junbo.identity.data.dao.impl.SecurityQuestionDAOImpl">
        <property name="sessionFactory" ref="configSessionFactory"/>
    </bean>
</beans>
