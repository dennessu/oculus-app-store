É17:27:32.753 [Test worker] ERROR c.j.o.c.i.o.DefaultFlowSelector - name=Payment_Instrument_Type_Not_Supported, action: CREDIT_CARD
÷17:27:32.816 [bitronix-async-jmx-worker] DEBUG b.tm.utils.ManagementRegistrar - Calling ManagementRegisterCommand on object with name bitronix.tm:type=Transaction,Gtrid=737072696E672D62746D000001452C108A5900000001
ÿ17:27:33.148 [bitronix-async-jmx-worker] DEBUG b.tm.utils.ManagementRegistrar - Calling ManagementUnregisterCommand on object with name bitronix.tm:type=Transaction,Gtrid=737072696E672D62746D000001452C108A5900000001
÷17:27:33.148 [bitronix-async-jmx-worker] DEBUG b.tm.utils.ManagementRegistrar - Calling ManagementRegisterCommand on object with name bitronix.tm:type=Transaction,Gtrid=737072696E672D62746D000001452C108B8300000003
â17:27:33.200 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
i17:27:33.201 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Participating in existing transaction
á17:27:33.205 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'orderEventAspect'
17:27:33.205 [Test worker] INFO  c.j.o.c.i.o.aspect.OrderEventAspect - name=Save_Order_Event_Before. action: FulfillmentAction
â17:27:33.210 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
È17:27:33.210 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Suspending current transaction, creating new transaction with name [com.junbo.order.core.impl.common.TransactionHelper$TransactionHelperImpl.executeInNewTransaction]
˘17:27:33.210 [Test worker] DEBUG b.tm.BitronixTransactionManager - suspending transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108B8300000003], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:32 CST 2014)
∆17:27:33.210 [Test worker] DEBUG b.tm.BitronixTransactionManager - clearing current thread context: a ThreadContext (1165822536) with transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108B8300000003], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:32 CST 2014), default timeout 60s
_17:27:33.210 [Test worker] DEBUG b.tm.BitronixTransactionManager - beginning a new transaction
d17:27:33.210 [Test worker] DEBUG b.tm.BitronixTransactionManager - dumping 1 transaction context(s)
‚17:27:33.210 [Test worker] DEBUG b.tm.BitronixTransactionManager - a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108B8300000003], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:32 CST 2014)
ñ17:27:33.210 [Test worker] DEBUG bitronix.tm.BitronixTransaction - creating new transaction with GTRID [737072696E672D62746D000001452C108C5A00000004]
Æ17:27:33.210 [Test worker] DEBUG bitronix.tm.internal.ThreadContext - assigning <a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108C5A00000004], status=NO_TRANSACTION, 0 resource(s) enlisted (started null)> to <a ThreadContext (1165822536) with transaction null, default timeout 60s>
i17:27:33.211 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to ACTIVE
ö17:27:33.211 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from NO_TRANSACTION to ACTIVE - executing 0 listener(s)
™17:27:33.211 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - scheduling transaction timeout task on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108C5A00000004], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014) for Fri Apr 04 17:28:33 CST 2014
Û17:27:33.211 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - removing task by a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108C5A00000004], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Ã17:27:33.211 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - scheduled a TransactionTimeoutTask on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108C5A00000004], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014) scheduled for Fri Apr 04 17:28:33 CST 2014, total task(s) queued: 5
y17:27:33.211 [Test worker] DEBUG b.tm.BitronixTransactionManager - begun new transaction at Fri Apr 04 17:27:33 CST 2014
≥17:27:33.221 [Test worker] INFO  c.j.o.d.r.impl.OrderRepositoryImpl - name=Create_Order_Event, event: testFlowType,1396603653063,FULFILL,OPEN,15595020-d7d2-4d07-a419-1123e8904da2
º17:27:33.258 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@5c95d9a5
p17:27:33.259 [Test worker] DEBUG o.h.e.t.i.TransactionCoordinatorImpl - successfully registered Synchronization
o17:27:33.259 [Test worker] DEBUG org.hibernate.internal.SessionImpl - Opened session at timestamp: 13966036532
¶17:27:33.260 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@7397c640
ô17:27:33.265 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 741627593228288063, using strategy: org.hibernate.id.Assigned
a17:27:33.274 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Initiating transaction commit
˘17:27:33.274 [Test worker] DEBUG b.tm.BitronixTransactionManager - committing transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108C5A00000004], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:33.274 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - cancelling transaction timeout task on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108C5A00000004], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:33.274 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - removing task by a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108C5A00000004], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
“17:27:33.274 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - cancelled a TransactionTimeoutTask on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108C5A00000004], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014) scheduled for Fri Apr 04 17:28:33 CST 2014, total task(s) still queued: 4
v17:27:33.274 [Test worker] DEBUG bitronix.tm.BitronixTransaction - before completion, 3 synchronization(s) to execute
û17:27:33.274 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a ClearContextSynchronization for a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108C5A00000004], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
∫17:27:33.274 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@5c95d9a5
h17:27:33.276 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:33.276 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:33.278 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
ä17:27:33.278 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:33.279 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
∂17:27:33.280 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderEventEntity{statusId=OPEN, flowType=testFlowType, createdBy=dev, eventId=741627593228288063, trackingUuid=15595020-d7d2-4d07-a419-1123e8904da2, createdTime=Fri Apr 04 17:27:33 CST 2014, actionId=FULFILL, eventTrackingUuid=035294b1-1cef-4842-95d0-49a5ad56d6ca, orderId=1396603653063, updatedTime=Fri Apr 04 17:27:33 CST 2014, updatedBy=dev}
ç17:27:33.287 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@79b2d283, groups=[Ljava.lang.Class;@4b1ad4e0}, constraintType=GENERIC}.
û17:27:33.287 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@7933d049, max=2147483647, groups=[Ljava.lang.Class;@38afa6c9}, constraintType=GENERIC}.
ç17:27:33.288 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@18bf8e52, groups=[Ljava.lang.Class;@4818b62f}, constraintType=GENERIC}.
û17:27:33.289 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@12e4440f, max=2147483647, groups=[Ljava.lang.Class;@48303e79}, constraintType=GENERIC}.
í17:27:33.291 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@4defbda8, groups=[Ljava.lang.Class;@368c8891}, constraintType=GENERIC}.
¢17:27:33.291 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@aff0994, max=2147483647, groups=[Ljava.lang.Class;@6dcdd92f}, constraintType=GENERIC}.
í17:27:33.291 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@108b6ba4, groups=[Ljava.lang.Class;@3147e478}, constraintType=GENERIC}.
£17:27:33.292 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@43f3638e, max=2147483647, groups=[Ljava.lang.Class;@200d227c}, constraintType=GENERIC}.
í17:27:33.293 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@6824c196, groups=[Ljava.lang.Class;@45219444}, constraintType=GENERIC}.
£17:27:33.294 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@463e8264, max=2147483647, groups=[Ljava.lang.Class;@31e29743}, constraintType=GENERIC}.
ë17:27:33.294 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@58430b0, groups=[Ljava.lang.Class;@299875a4}, constraintType=GENERIC}.
£17:27:33.294 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@608ee7c0, max=2147483647, groups=[Ljava.lang.Class;@46111fc6}, constraintType=GENERIC}.
í17:27:33.308 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@1ce6e239, groups=[Ljava.lang.Class;@7a0e1b01}, constraintType=GENERIC}.
£17:27:33.309 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@394481f2, max=2147483647, groups=[Ljava.lang.Class;@40af543d}, constraintType=GENERIC}.
í17:27:33.309 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@53829e40, groups=[Ljava.lang.Class;@2463a695}, constraintType=GENERIC}.
£17:27:33.310 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@5c6644d8, max=2147483647, groups=[Ljava.lang.Class;@3e31f04c}, constraintType=GENERIC}.
í17:27:33.310 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@17d10a89, groups=[Ljava.lang.Class;@1d0ab496}, constraintType=GENERIC}.
£17:27:33.311 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@7b989655, max=2147483647, groups=[Ljava.lang.Class;@5eb5e5d7}, constraintType=GENERIC}.
í17:27:33.311 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@73112ba2, groups=[Ljava.lang.Class;@6c47d3b2}, constraintType=GENERIC}.
£17:27:33.311 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@5438c6fc, max=2147483647, groups=[Ljava.lang.Class;@5b8ff596}, constraintType=GENERIC}.
]17:27:33.334 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
œ17:27:33.334 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (3 still available)
≈17:27:33.334 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/order_ds1 with 3 connection(s) (3 still available)
í17:27:33.334 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C108C5A00000004]
Ä17:27:33.334 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - no NOT_ACCESSIBLE connection enlisted in this transaction
 17:27:33.334 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - getting IN_POOL connection from an XAPool of resource jdbc/order_ds1 with 3 connection(s) (3 still available), waiting if necessary
∞17:27:33.334 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 - closing time: 1396603703533, now time: 1396603653334
ø17:27:33.334 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found IN_POOL connection a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 from an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
Ô17:27:33.334 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
¨17:27:33.334 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7
˛17:27:33.334 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7
Æ17:27:33.335 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7
Û17:27:33.335 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7 to the accessible pool
ô17:27:33.335 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@49d869e7 was in state IN_POOL, testing it
Å17:27:33.335 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - no query to test connection of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7, skipping test
Ó17:27:33.335 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7
Œ17:27:33.335 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
\17:27:33.335 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Ç17:27:33.335 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108C5A00000004], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
ó17:27:33.336 [Test worker] DEBUG b.tm.resource.ResourceRegistrar - XAResource org.postgresql.xa.PGXAConnection@49d869e7 belongs to a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7 that itself belongs to a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
…17:27:33.337 [Test worker] DEBUG b.tm.internal.XAResourceManager - creating new branch with a Bitronix XID [737072696E672D62746D000001452C108C5A00000004 : 737072696E672D62746D000001452C108CD900000005]
¿17:27:33.338 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - assigning <a Bitronix XID [737072696E672D62746D000001452C108C5A00000004 : 737072696E672D62746D000001452C108CD900000005]> to <an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@49d869e7 with XID null>
¿17:27:33.338 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - starting an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@49d869e7 with XID a Bitronix XID [737072696E672D62746D000001452C108C5A00000004 : 737072696E672D62746D000001452C108CD900000005] with NOFLAGS
…17:27:33.338 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - started an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@49d869e7 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108C5A00000004 : 737072696E672D62746D000001452C108CD900000005] with NOFLAGS
‰17:27:33.338 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - putting XAResourceHolderState [an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@49d869e7 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108C5A00000004 : 737072696E672D62746D000001452C108CD900000005]] on a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7
Œ17:27:33.338 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - GTRID [737072696E672D62746D000001452C108C5A00000004] previously unknown to a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7, adding it to the resource's transactions list
Ñ17:27:33.355 [Test worker] DEBUG org.hibernate.SQL - insert into ORDER_EVENT (CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, ACTION_ID, EVENT_TRACKING_UUID, FLOW_NAME, ORDER_ID, STATUS_ID, TRACKING_UUID, EVENT_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
⁄Hibernate: insert into ORDER_EVENT (CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, ACTION_ID, EVENT_TRACKING_UUID, FLOW_NAME, ORDER_ID, STATUS_ID, TRACKING_UUID, EVENT_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
`17:27:33.371 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w17:27:33.381 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
]17:27:33.382 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
Ÿ17:27:33.382 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@2e91734e
Â17:27:33.382 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7
Ç17:27:33.382 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108C5A00000004], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:33.382 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
Ç17:27:33.382 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108C5A00000004], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:33.382 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
Ò17:27:33.383 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
•17:27:33.383 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108C5A00000004], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
É17:27:33.383 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
∂17:27:33.384 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
l17:27:33.384 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
˜17:27:33.384 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 from the accessible pool
à17:27:33.384 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
π17:27:33.384 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
˘17:27:33.384 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 to the inaccessible pool
Ë17:27:33.384 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
\17:27:33.384 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
Ü17:27:33.384 [Test worker] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
§17:27:33.384 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@7397c640
”17:27:33.384 [Test worker] DEBUG bitronix.tm.BitronixTransaction - found unclosed resource to delist: an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@49d869e7 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108C5A00000004 : 737072696E672D62746D000001452C108CD900000005]
√17:27:33.384 [Test worker] DEBUG b.tm.internal.XAResourceManager - delisting resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@49d869e7 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108C5A00000004 : 737072696E672D62746D000001452C108CD900000005]
»17:27:33.385 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ending an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@49d869e7 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108C5A00000004 : 737072696E672D62746D000001452C108CD900000005] with SUCCESS
«17:27:33.385 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ended an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@49d869e7 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108C5A00000004 : 737072696E672D62746D000001452C108CD900000005] with SUCCESS
f17:27:33.385 [Test worker] DEBUG bitronix.tm.BitronixTransaction - committing, 1 enlisted resource(s)
l17:27:33.385 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to PREPARING
ï17:27:33.385 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from ACTIVE to PREPARING - executing 0 listener(s)
k17:27:33.385 [Test worker] DEBUG bitronix.tm.twopc.Preparer - 1 resource enlisted, no prepare needed (1PC)
k17:27:33.385 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to PREPARED
ó17:27:33.385 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from PREPARING to PREPARED - executing 0 listener(s)
\17:27:33.385 [Test worker] DEBUG bitronix.tm.BitronixTransaction - 1 interested resource(s)
m17:27:33.385 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to COMMITTING
ò17:27:33.385 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from PREPARED to COMMITTING - executing 0 listener(s)
ó17:27:33.385 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - executing phase on 1 resource(s) enlisted in 1 position(s) in reverse position order
d17:27:33.386 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - running 1 job(s) for position '1'
‹17:27:33.387 [Test worker] DEBUG bitronix.tm.twopc.Committer - committing resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@49d869e7 (ended) with XID a Bitronix XID [737072696E672D62746D000001452C108C5A00000004 : 737072696E672D62746D000001452C108CD900000005] (with one-phase optimization)
Ω17:27:33.389 [Test worker] DEBUG bitronix.tm.twopc.Committer - committed resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@49d869e7 (ended) with XID a Bitronix XID [737072696E672D62746D000001452C108C5A00000004 : 737072696E672D62746D000001452C108CD900000005]
e17:27:33.389 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - phase executed with 0 exception(s)
`17:27:33.390 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - ran 1 job(s) for position '1'
u17:27:33.390 [Test worker] DEBUG bitronix.tm.twopc.Committer - phase 2 commit executed on resources [jdbc/order_ds1]
v17:27:33.391 [Test worker] DEBUG bitronix.tm.twopc.Committer - phase 2 commit succeeded on resources [jdbc/order_ds1]
l17:27:33.391 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to COMMITTED
ô17:27:33.391 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from COMMITTING to COMMITTED - executing 0 listener(s)
¸17:27:33.391 [Test worker] DEBUG bitronix.tm.BitronixTransaction - successfully committed a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108C5A00000004], status=COMMITTED, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
u17:27:33.391 [Test worker] DEBUG b.tm.internal.XAResourceManager - clearing XAResourceHolder states on 1 resource(s)
17:27:33.391 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - removing XAResourceHolderState of xid a Bitronix XID [737072696E672D62746D000001452C108C5A00000004 : 737072696E672D62746D000001452C108CD900000005] from a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
ª17:27:33.391 [Test worker] DEBUG b.tm.internal.XAResourceManager - resource a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 cleaned up all transaction states for GTRID [737072696E672D62746D000001452C108C5A00000004]
u17:27:33.391 [Test worker] DEBUG bitronix.tm.BitronixTransaction - after completion, 4 synchronization(s) to execute
–17:27:33.391 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@5c95d9a5 with status=COMMITTED
j17:27:33.392 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Aggressively releasing JDBC connection
m17:27:33.392 [Test worker] DEBUG o.h.e.j.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
∫17:27:33.394 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@7397c640 with status=COMMITTED
∑17:27:33.394 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a ClearContextSynchronization for a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108C5A00000004], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014) with status=COMMITTED
“17:27:33.394 [Test worker] DEBUG b.tm.BitronixTransactionManager - clearing transaction from thread context: a ThreadContext (1165822536) with transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108C5A00000004], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014), default timeout 60s
ó17:27:33.394 [Test worker] DEBUG b.tm.BitronixTransactionManager - removing transaction from in-flight transactions: a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108C5A00000004], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
´17:27:33.394 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a DeferredReleaseSynchronization of a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 with status=COMMITTED
á17:27:33.394 [Test worker] DEBUG b.t.r.c.DeferredReleaseSynchronization - DeferredReleaseSynchronization requeuing a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
∑17:27:33.394 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
l17:27:33.394 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
˝17:27:33.394 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 from the inaccessible pool
â17:27:33.394 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
Ø17:27:33.394 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
Ô17:27:33.394 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 to the available pool
ˇ17:27:33.394 [Test worker] DEBUG b.t.r.c.DeferredReleaseSynchronization - DeferredReleaseSynchronization requeued a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
à17:27:33.395 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Resuming suspended transaction after completion of inner transaction
Î17:27:33.395 [Test worker] DEBUG b.tm.BitronixTransactionManager - resuming a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108B8300000003], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:32 CST 2014)
æ17:27:33.395 [Test worker] DEBUG bitronix.tm.internal.ThreadContext - assigning <a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108B8300000003], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:32 CST 2014)> to <a ThreadContext (1165822536) with transaction null, default timeout 60s>
d17:27:33.412 [Test worker] ERROR c.j.o.c.i.o.FulfillmentAction - name=Order_FulfillmentAction_Error
)java.lang.IllegalArgumentException: null
Y	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.7.0_45]
p	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57) ~[na:1.7.0_45]
x	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.7.0_45]
S	at java.lang.reflect.Constructor.newInstance(Constructor.java:526) ~[na:1.7.0_45]
u	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:77) ~[groovy-all-2.2.1.jar:2.2.1]
°	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:102) ~[groovy-all-2.2.1.jar:2.2.1]
É	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57) ~[groovy-all-2.2.1.jar:2.2.1]
É	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:182) ~[groovy-all-2.2.1.jar:2.2.1]
É	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:186) ~[groovy-all-2.2.1.jar:2.2.1]
	at com.junbo.order.core.action.FulfillmentActionTest.testExecuteFulfillmentError(FulfillmentActionTest.groovy:85) ~[test/:na]
O	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_45]
a	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_45]
i	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_45]
D	at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_45]
s	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84) ~[testng-6.8.7.jar:na]
w	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200) ~[testng-6.8.7.jar:na]
´	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:172) ~[spring-test-4.0.2.RELEASE.jar:4.0.2.RELEASE]
O	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_45]
a	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_45]
i	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_45]
D	at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_45]
v	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212) ~[testng-6.8.7.jar:na]
U	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707) [testng-6.8.7.jar:na]
Y	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901) [testng-6.8.7.jar:na]
[	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231) [testng-6.8.7.jar:na]
l	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127) [testng-6.8.7.jar:na]
^	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111) [testng-6.8.7.jar:na]
P	at org.testng.TestRunner.privateRun(TestRunner.java:767) [testng-6.8.7.jar:na]
I	at org.testng.TestRunner.run(TestRunner.java:617) [testng-6.8.7.jar:na]
O	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334) [testng-6.8.7.jar:na]
W	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329) [testng-6.8.7.jar:na]
R	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291) [testng-6.8.7.jar:na]
K	at org.testng.SuiteRunner.run(SuiteRunner.java:240) [testng-6.8.7.jar:na]
[	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-6.8.7.jar:na]
V	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) [testng-6.8.7.jar:na]
T	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224) [testng-6.8.7.jar:na]
O	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149) [testng-6.8.7.jar:na]
B	at org.testng.TestNG.run(TestNG.java:1057) [testng-6.8.7.jar:na]
ë	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:112) [gradle-plugins-1.10.jar:1.10]
á	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:59) [gradle-plugins-1.10.jar:1.10]
O	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_45]
a	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_45]
i	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_45]
D	at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_45]
{	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) [gradle-messaging-1.10.jar:1.10]
{	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) [gradle-messaging-1.10.jar:1.10]
ã	at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) [gradle-messaging-1.10.jar:1.10]
ö	at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) [gradle-messaging-1.10.jar:1.10]
7	at com.sun.proxy.$Proxy2.stop(Unknown Source) [na:na]
u	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:113) [gradle-plugins-1.10.jar:1.10]
O	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_45]
a	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_45]
i	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_45]
D	at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_45]
{	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) [gradle-messaging-1.10.jar:1.10]
{	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) [gradle-messaging-1.10.jar:1.10]
z	at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:355) [gradle-messaging-1.10.jar:1.10]
õ	at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64) [gradle-base-services-1.10.jar:1.10]
b	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_45]
b	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_45]
8	at java.lang.Thread.run(Thread.java:744) [na:1.7.0_45]
á17:27:33.426 [Test worker] INFO  c.j.o.c.i.o.aspect.OrderEventAspect - name=Save_Order_Event_AfterReturning. action: FulfillmentAction
â17:27:33.428 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
È17:27:33.428 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Suspending current transaction, creating new transaction with name [com.junbo.order.core.impl.common.TransactionHelper$TransactionHelperImpl.executeInNewTransaction]
˘17:27:33.428 [Test worker] DEBUG b.tm.BitronixTransactionManager - suspending transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108B8300000003], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:32 CST 2014)
∆17:27:33.429 [Test worker] DEBUG b.tm.BitronixTransactionManager - clearing current thread context: a ThreadContext (1165822536) with transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108B8300000003], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:32 CST 2014), default timeout 60s
_17:27:33.429 [Test worker] DEBUG b.tm.BitronixTransactionManager - beginning a new transaction
d17:27:33.429 [Test worker] DEBUG b.tm.BitronixTransactionManager - dumping 1 transaction context(s)
‚17:27:33.429 [Test worker] DEBUG b.tm.BitronixTransactionManager - a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108B8300000003], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:32 CST 2014)
ñ17:27:33.429 [Test worker] DEBUG bitronix.tm.BitronixTransaction - creating new transaction with GTRID [737072696E672D62746D000001452C108D3500000006]
Æ17:27:33.429 [Test worker] DEBUG bitronix.tm.internal.ThreadContext - assigning <a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D3500000006], status=NO_TRANSACTION, 0 resource(s) enlisted (started null)> to <a ThreadContext (1165822536) with transaction null, default timeout 60s>
i17:27:33.429 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to ACTIVE
ö17:27:33.429 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from NO_TRANSACTION to ACTIVE - executing 0 listener(s)
™17:27:33.429 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - scheduling transaction timeout task on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D3500000006], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014) for Fri Apr 04 17:28:33 CST 2014
Û17:27:33.429 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - removing task by a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D3500000006], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Ã17:27:33.429 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - scheduled a TransactionTimeoutTask on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D3500000006], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014) scheduled for Fri Apr 04 17:28:33 CST 2014, total task(s) queued: 5
y17:27:33.429 [Test worker] DEBUG b.tm.BitronixTransactionManager - begun new transaction at Fri Apr 04 17:27:33 CST 2014
¥17:27:33.429 [Test worker] INFO  c.j.o.d.r.impl.OrderRepositoryImpl - name=Create_Order_Event, event: testFlowType,1396603653063,FULFILL,ERROR,15595020-d7d2-4d07-a419-1123e8904da2
º17:27:33.430 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@52efb835
p17:27:33.430 [Test worker] DEBUG o.h.e.t.i.TransactionCoordinatorImpl - successfully registered Synchronization
o17:27:33.430 [Test worker] DEBUG org.hibernate.internal.SessionImpl - Opened session at timestamp: 13966036534
¶17:27:33.430 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@1834925a
ô17:27:33.431 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 741627593228289063, using strategy: org.hibernate.id.Assigned
a17:27:33.432 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Initiating transaction commit
˘17:27:33.432 [Test worker] DEBUG b.tm.BitronixTransactionManager - committing transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D3500000006], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:33.433 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - cancelling transaction timeout task on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D3500000006], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:33.433 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - removing task by a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D3500000006], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
“17:27:33.433 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - cancelled a TransactionTimeoutTask on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D3500000006], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014) scheduled for Fri Apr 04 17:28:33 CST 2014, total task(s) still queued: 4
v17:27:33.433 [Test worker] DEBUG bitronix.tm.BitronixTransaction - before completion, 3 synchronization(s) to execute
û17:27:33.433 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a ClearContextSynchronization for a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D3500000006], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
∫17:27:33.433 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@52efb835
h17:27:33.433 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:33.433 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:33.433 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
ä17:27:33.433 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:33.433 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
∑17:27:33.434 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderEventEntity{statusId=ERROR, flowType=testFlowType, createdBy=dev, eventId=741627593228289063, trackingUuid=15595020-d7d2-4d07-a419-1123e8904da2, createdTime=Fri Apr 04 17:27:33 CST 2014, actionId=FULFILL, eventTrackingUuid=09ed3327-022c-4d4a-94a5-acc8beba42f9, orderId=1396603653063, updatedTime=Fri Apr 04 17:27:33 CST 2014, updatedBy=dev}
]17:27:33.435 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
œ17:27:33.435 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (3 still available)
≈17:27:33.435 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/order_ds1 with 3 connection(s) (3 still available)
í17:27:33.435 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C108D3500000006]
Ä17:27:33.435 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - no NOT_ACCESSIBLE connection enlisted in this transaction
 17:27:33.435 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - getting IN_POOL connection from an XAPool of resource jdbc/order_ds1 with 3 connection(s) (3 still available), waiting if necessary
∞17:27:33.435 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 - closing time: 1396603704349, now time: 1396603653435
ø17:27:33.435 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found IN_POOL connection a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
Ô17:27:33.435 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
¨17:27:33.435 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
˛17:27:33.435 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Æ17:27:33.435 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Û17:27:33.435 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the accessible pool
ô17:27:33.435 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@555afe16 was in state IN_POOL, testing it
Å17:27:33.435 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - no query to test connection of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16, skipping test
Ó17:27:33.435 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Œ17:27:33.435 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
\17:27:33.436 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Ç17:27:33.436 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D3500000006], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
ó17:27:33.436 [Test worker] DEBUG b.tm.resource.ResourceRegistrar - XAResource org.postgresql.xa.PGXAConnection@555afe16 belongs to a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 that itself belongs to a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
…17:27:33.436 [Test worker] DEBUG b.tm.internal.XAResourceManager - creating new branch with a Bitronix XID [737072696E672D62746D000001452C108D3500000006 : 737072696E672D62746D000001452C108D3C00000007]
¿17:27:33.436 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - assigning <a Bitronix XID [737072696E672D62746D000001452C108D3500000006 : 737072696E672D62746D000001452C108D3C00000007]> to <an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 with XID null>
¿17:27:33.436 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - starting an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 with XID a Bitronix XID [737072696E672D62746D000001452C108D3500000006 : 737072696E672D62746D000001452C108D3C00000007] with NOFLAGS
…17:27:33.436 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - started an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108D3500000006 : 737072696E672D62746D000001452C108D3C00000007] with NOFLAGS
‰17:27:33.436 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - putting XAResourceHolderState [an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108D3500000006 : 737072696E672D62746D000001452C108D3C00000007]] on a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Œ17:27:33.436 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - GTRID [737072696E672D62746D000001452C108D3500000006] previously unknown to a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16, adding it to the resource's transactions list
Ñ17:27:33.436 [Test worker] DEBUG org.hibernate.SQL - insert into ORDER_EVENT (CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, ACTION_ID, EVENT_TRACKING_UUID, FLOW_NAME, ORDER_ID, STATUS_ID, TRACKING_UUID, EVENT_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
⁄Hibernate: insert into ORDER_EVENT (CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, ACTION_ID, EVENT_TRACKING_UUID, FLOW_NAME, ORDER_ID, STATUS_ID, TRACKING_UUID, EVENT_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
`17:27:33.441 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w17:27:33.443 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
]17:27:33.444 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
Ÿ17:27:33.444 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@10805ac7
Â17:27:33.444 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ç17:27:33.444 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D3500000006], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:33.444 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ç17:27:33.444 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D3500000006], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:33.444 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ò17:27:33.444 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
•17:27:33.444 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D3500000006], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
É17:27:33.444 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
∂17:27:33.444 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
l17:27:33.444 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
˜17:27:33.444 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from the accessible pool
à17:27:33.445 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
π17:27:33.445 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
˘17:27:33.445 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the inaccessible pool
Ë17:27:33.445 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
\17:27:33.445 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
Ü17:27:33.445 [Test worker] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
§17:27:33.445 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@1834925a
”17:27:33.445 [Test worker] DEBUG bitronix.tm.BitronixTransaction - found unclosed resource to delist: an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108D3500000006 : 737072696E672D62746D000001452C108D3C00000007]
√17:27:33.445 [Test worker] DEBUG b.tm.internal.XAResourceManager - delisting resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108D3500000006 : 737072696E672D62746D000001452C108D3C00000007]
»17:27:33.445 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ending an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108D3500000006 : 737072696E672D62746D000001452C108D3C00000007] with SUCCESS
«17:27:33.445 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ended an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108D3500000006 : 737072696E672D62746D000001452C108D3C00000007] with SUCCESS
f17:27:33.445 [Test worker] DEBUG bitronix.tm.BitronixTransaction - committing, 1 enlisted resource(s)
l17:27:33.445 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to PREPARING
ï17:27:33.445 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from ACTIVE to PREPARING - executing 0 listener(s)
k17:27:33.445 [Test worker] DEBUG bitronix.tm.twopc.Preparer - 1 resource enlisted, no prepare needed (1PC)
k17:27:33.445 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to PREPARED
ó17:27:33.445 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from PREPARING to PREPARED - executing 0 listener(s)
\17:27:33.445 [Test worker] DEBUG bitronix.tm.BitronixTransaction - 1 interested resource(s)
m17:27:33.445 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to COMMITTING
ò17:27:33.445 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from PREPARED to COMMITTING - executing 0 listener(s)
ó17:27:33.445 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - executing phase on 1 resource(s) enlisted in 1 position(s) in reverse position order
d17:27:33.445 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - running 1 job(s) for position '1'
‹17:27:33.445 [Test worker] DEBUG bitronix.tm.twopc.Committer - committing resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (ended) with XID a Bitronix XID [737072696E672D62746D000001452C108D3500000006 : 737072696E672D62746D000001452C108D3C00000007] (with one-phase optimization)
Ω17:27:33.452 [Test worker] DEBUG bitronix.tm.twopc.Committer - committed resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (ended) with XID a Bitronix XID [737072696E672D62746D000001452C108D3500000006 : 737072696E672D62746D000001452C108D3C00000007]
e17:27:33.452 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - phase executed with 0 exception(s)
`17:27:33.452 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - ran 1 job(s) for position '1'
u17:27:33.452 [Test worker] DEBUG bitronix.tm.twopc.Committer - phase 2 commit executed on resources [jdbc/order_ds1]
v17:27:33.452 [Test worker] DEBUG bitronix.tm.twopc.Committer - phase 2 commit succeeded on resources [jdbc/order_ds1]
l17:27:33.452 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to COMMITTED
ô17:27:33.452 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from COMMITTING to COMMITTED - executing 0 listener(s)
¸17:27:33.452 [Test worker] DEBUG bitronix.tm.BitronixTransaction - successfully committed a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D3500000006], status=COMMITTED, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
u17:27:33.452 [Test worker] DEBUG b.tm.internal.XAResourceManager - clearing XAResourceHolder states on 1 resource(s)
17:27:33.452 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - removing XAResourceHolderState of xid a Bitronix XID [737072696E672D62746D000001452C108D3500000006 : 737072696E672D62746D000001452C108D3C00000007] from a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
ª17:27:33.452 [Test worker] DEBUG b.tm.internal.XAResourceManager - resource a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 cleaned up all transaction states for GTRID [737072696E672D62746D000001452C108D3500000006]
u17:27:33.452 [Test worker] DEBUG bitronix.tm.BitronixTransaction - after completion, 4 synchronization(s) to execute
–17:27:33.452 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@52efb835 with status=COMMITTED
j17:27:33.452 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Aggressively releasing JDBC connection
m17:27:33.453 [Test worker] DEBUG o.h.e.j.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
∫17:27:33.453 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@1834925a with status=COMMITTED
∑17:27:33.454 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a ClearContextSynchronization for a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D3500000006], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014) with status=COMMITTED
“17:27:33.454 [Test worker] DEBUG b.tm.BitronixTransactionManager - clearing transaction from thread context: a ThreadContext (1165822536) with transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D3500000006], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014), default timeout 60s
ó17:27:33.454 [Test worker] DEBUG b.tm.BitronixTransactionManager - removing transaction from in-flight transactions: a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D3500000006], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
´17:27:33.454 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a DeferredReleaseSynchronization of a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 with status=COMMITTED
á17:27:33.454 [Test worker] DEBUG b.t.r.c.DeferredReleaseSynchronization - DeferredReleaseSynchronization requeuing a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
∑17:27:33.454 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
l17:27:33.454 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
˝17:27:33.454 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from the inaccessible pool
â17:27:33.454 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ø17:27:33.454 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ô17:27:33.454 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the available pool
ˇ17:27:33.454 [Test worker] DEBUG b.t.r.c.DeferredReleaseSynchronization - DeferredReleaseSynchronization requeued a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
à17:27:33.454 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Resuming suspended transaction after completion of inner transaction
Î17:27:33.454 [Test worker] DEBUG b.tm.BitronixTransactionManager - resuming a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108B8300000003], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:32 CST 2014)
æ17:27:33.454 [Test worker] DEBUG bitronix.tm.internal.ThreadContext - assigning <a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108B8300000003], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:32 CST 2014)> to <a ThreadContext (1165822536) with transaction null, default timeout 60s>
r17:27:33.456 [Test worker] ERROR c.j.o.c.i.o.aspect.OrderEventAspect - name=Save_Error_Order_Event_AfterReturning
Icom.junbo.common.error.AppErrorException: HTTP 500 Internal Server Error
k	at com.junbo.common.error.ErrorProxy$1.exception(ErrorProxy.java:105) ~[common-lib-0.0.1-SNAPSHOT.jar:na]
~	at com.junbo.order.core.impl.orderaction.FulfillmentAction$_execute_closure1.doCall(FulfillmentAction.groovy:60) ~[main/:na]
O	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_45]
a	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_45]
i	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_45]
D	at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_45]
k	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90) ~[groovy-all-2.2.1.jar:2.2.1]
]	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233) ~[groovy-all-2.2.1.jar:2.2.1]
Å	at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:272) ~[groovy-all-2.2.1.jar:2.2.1]
a	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:909) ~[groovy-all-2.2.1.jar:2.2.1]
M	at groovy.lang.Closure.call(Closure.java:423) ~[groovy-all-2.2.1.jar:2.2.1]
M	at groovy.lang.Closure.call(Closure.java:439) ~[groovy-all-2.2.1.jar:2.2.1]
i	at com.junbo.langur.core.promise.Promise$8.apply(Promise.java:209) ~[langur-core-0.0.1-SNAPSHOT.jar:na]
i	at com.junbo.langur.core.promise.Promise$8.apply(Promise.java:205) ~[langur-core-0.0.1-SNAPSHOT.jar:na]
i	at com.junbo.langur.core.promise.Promise$7.apply(Promise.java:199) ~[langur-core-0.0.1-SNAPSHOT.jar:na]
i	at com.junbo.langur.core.promise.Promise$7.apply(Promise.java:196) ~[langur-core-0.0.1-SNAPSHOT.jar:na]
h	at com.junbo.langur.core.promise.Wrapper$4.apply(Wrapper.java:80) ~[langur-core-0.0.1-SNAPSHOT.jar:na]
j	at com.junbo.langur.core.promise.Promise$5.create(Promise.java:180) ~[langur-core-0.0.1-SNAPSHOT.jar:na]
p	at com.google.common.util.concurrent.Futures$FallbackFuture$1.onFailure(Futures.java:465) ~[guava-15.0.jar:na]
\	at com.google.common.util.concurrent.Futures$4.run(Futures.java:1160) ~[guava-15.0.jar:na]
É	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297) ~[guava-15.0.jar:na]
q	at com.google.common.util.concurrent.Futures$ImmediateFuture.addListener(Futures.java:100) ~[guava-15.0.jar:na]
b	at com.google.common.util.concurrent.Futures.addCallback(Futures.java:1172) ~[guava-15.0.jar:na]
k	at com.google.common.util.concurrent.Futures$FallbackFuture.<init>(Futures.java:453) ~[guava-15.0.jar:na]
b	at com.google.common.util.concurrent.Futures.withFallback(Futures.java:438) ~[guava-15.0.jar:na]
b	at com.google.common.util.concurrent.Futures.withFallback(Futures.java:373) ~[guava-15.0.jar:na]
i	at com.junbo.langur.core.promise.Promise.recover(Promise.java:177) ~[langur-core-0.0.1-SNAPSHOT.jar:na]
m	at com.junbo.langur.core.promise.Promise.syncRecover(Promise.java:196) ~[langur-core-0.0.1-SNAPSHOT.jar:na]
m	at com.junbo.langur.core.promise.Promise.syncRecover(Promise.java:205) ~[langur-core-0.0.1-SNAPSHOT.jar:na]
m	at com.junbo.order.core.impl.orderaction.FulfillmentAction.execute(FulfillmentAction.groovy:57) ~[main/:na]
ñ	at com.junbo.order.core.impl.orderaction.FulfillmentAction$$FastClassBySpringCGLIB$$256d86a0.invoke(<generated>) ~[spring-core-4.0.2.RELEASE.jar:na]
|	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) ~[spring-core-4.0.2.RELEASE.jar:4.0.2.RELEASE]
†	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:711) ~[spring-aop-4.0.2.RELEASE.jar:4.0.2.RELEASE]
õ	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.0.2.RELEASE.jar:4.0.2.RELEASE]
®	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52) ~[spring-aop-4.0.2.RELEASE.jar:4.0.2.RELEASE]
õ	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168) [spring-aop-4.0.2.RELEASE.jar:4.0.2.RELEASE]
¨	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52) ~[spring-aop-4.0.2.RELEASE.jar:4.0.2.RELEASE]
õ	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168) [spring-aop-4.0.2.RELEASE.jar:4.0.2.RELEASE]
ò	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:58) ~[spring-aop-4.0.2.RELEASE.jar:4.0.2.RELEASE]
õ	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168) [spring-aop-4.0.2.RELEASE.jar:4.0.2.RELEASE]
¨	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:98) ~[spring-tx-4.0.2.RELEASE.jar:4.0.2.RELEASE]
¶	at com.junbo.langur.core.transaction.AsyncTransactionInterceptor.invokeWithinTransaction(AsyncTransactionInterceptor.groovy:50) ~[langur-core-0.0.1-SNAPSHOT.jar:na]
õ	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:95) ~[spring-tx-4.0.2.RELEASE.jar:4.0.2.RELEASE]
õ	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.0.2.RELEASE.jar:4.0.2.RELEASE]
û	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) ~[spring-aop-4.0.2.RELEASE.jar:4.0.2.RELEASE]
õ	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.0.2.RELEASE.jar:4.0.2.RELEASE]
ù	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:644) [spring-aop-4.0.2.RELEASE.jar:4.0.2.RELEASE]
ï	at com.junbo.order.core.impl.orderaction.FulfillmentAction$$EnhancerBySpringCGLIB$$e33dce3c.execute(<generated>) [spring-core-4.0.2.RELEASE.jar:na]
q	at com.junbo.langur.core.webflow.action.Action$execute.call(Unknown Source) [langur-core-0.0.1-SNAPSHOT.jar:na]
w	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45) [groovy-all-2.2.1.jar:2.2.1]
w	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108) [groovy-all-2.2.1.jar:2.2.1]
w	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116) [groovy-all-2.2.1.jar:2.2.1]
~	at com.junbo.order.core.action.FulfillmentActionTest.testExecuteFulfillmentError(FulfillmentActionTest.groovy:89) [test/:na]
O	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_45]
a	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_45]
i	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_45]
D	at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_45]
r	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84) [testng-6.8.7.jar:na]
v	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200) [testng-6.8.7.jar:na]
™	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:172) [spring-test-4.0.2.RELEASE.jar:4.0.2.RELEASE]
O	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_45]
a	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_45]
i	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_45]
D	at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_45]
u	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212) [testng-6.8.7.jar:na]
U	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707) [testng-6.8.7.jar:na]
Y	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901) [testng-6.8.7.jar:na]
[	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231) [testng-6.8.7.jar:na]
l	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127) [testng-6.8.7.jar:na]
^	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111) [testng-6.8.7.jar:na]
P	at org.testng.TestRunner.privateRun(TestRunner.java:767) [testng-6.8.7.jar:na]
I	at org.testng.TestRunner.run(TestRunner.java:617) [testng-6.8.7.jar:na]
O	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334) [testng-6.8.7.jar:na]
W	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329) [testng-6.8.7.jar:na]
R	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291) [testng-6.8.7.jar:na]
K	at org.testng.SuiteRunner.run(SuiteRunner.java:240) [testng-6.8.7.jar:na]
[	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) [testng-6.8.7.jar:na]
V	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) [testng-6.8.7.jar:na]
T	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224) [testng-6.8.7.jar:na]
O	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149) [testng-6.8.7.jar:na]
B	at org.testng.TestNG.run(TestNG.java:1057) [testng-6.8.7.jar:na]
ë	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:112) [gradle-plugins-1.10.jar:1.10]
á	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:59) [gradle-plugins-1.10.jar:1.10]
O	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_45]
a	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_45]
i	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_45]
D	at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_45]
{	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) [gradle-messaging-1.10.jar:1.10]
{	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) [gradle-messaging-1.10.jar:1.10]
ã	at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) [gradle-messaging-1.10.jar:1.10]
ö	at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) [gradle-messaging-1.10.jar:1.10]
7	at com.sun.proxy.$Proxy2.stop(Unknown Source) [na:na]
u	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:113) [gradle-plugins-1.10.jar:1.10]
O	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_45]
a	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_45]
i	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_45]
D	at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_45]
{	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) [gradle-messaging-1.10.jar:1.10]
{	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) [gradle-messaging-1.10.jar:1.10]
z	at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:355) [gradle-messaging-1.10.jar:1.10]
õ	at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64) [gradle-base-services-1.10.jar:1.10]
b	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_45]
b	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_45]
8	at java.lang.Thread.run(Thread.java:744) [na:1.7.0_45]
î17:27:33.461 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Participating transaction failed - marking existing transaction as rollback-only
i17:27:33.461 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Setting JTA transaction rollback-only
à17:27:33.461 [Test worker] DEBUG b.tm.BitronixTransactionManager - marking transaction as rollback only: a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108B8300000003], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:32 CST 2014)
r17:27:33.461 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to MARKED_ROLLBACK
õ17:27:33.461 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from ACTIVE to MARKED_ROLLBACK - executing 0 listener(s)
â17:27:33.616 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
i17:27:33.616 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Participating in existing transaction
17:27:33.617 [Test worker] INFO  c.j.o.c.i.o.aspect.OrderEventAspect - name=Save_Order_Event_Before. action: FulfillmentAction
â17:27:33.617 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
È17:27:33.617 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Suspending current transaction, creating new transaction with name [com.junbo.order.core.impl.common.TransactionHelper$TransactionHelperImpl.executeInNewTransaction]
˘17:27:33.617 [Test worker] DEBUG b.tm.BitronixTransactionManager - suspending transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D8900000008], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
∆17:27:33.617 [Test worker] DEBUG b.tm.BitronixTransactionManager - clearing current thread context: a ThreadContext (1165822536) with transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D8900000008], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014), default timeout 60s
_17:27:33.617 [Test worker] DEBUG b.tm.BitronixTransactionManager - beginning a new transaction
d17:27:33.617 [Test worker] DEBUG b.tm.BitronixTransactionManager - dumping 1 transaction context(s)
‚17:27:33.617 [Test worker] DEBUG b.tm.BitronixTransactionManager - a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D8900000008], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
ñ17:27:33.617 [Test worker] DEBUG bitronix.tm.BitronixTransaction - creating new transaction with GTRID [737072696E672D62746D000001452C108DF100000009]
Æ17:27:33.617 [Test worker] DEBUG bitronix.tm.internal.ThreadContext - assigning <a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108DF100000009], status=NO_TRANSACTION, 0 resource(s) enlisted (started null)> to <a ThreadContext (1165822536) with transaction null, default timeout 60s>
i17:27:33.617 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to ACTIVE
ö17:27:33.617 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from NO_TRANSACTION to ACTIVE - executing 0 listener(s)
™17:27:33.617 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - scheduling transaction timeout task on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108DF100000009], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014) for Fri Apr 04 17:28:33 CST 2014
Û17:27:33.618 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - removing task by a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108DF100000009], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Ã17:27:33.618 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - scheduled a TransactionTimeoutTask on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108DF100000009], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014) scheduled for Fri Apr 04 17:28:33 CST 2014, total task(s) queued: 5
y17:27:33.618 [Test worker] DEBUG b.tm.BitronixTransactionManager - begun new transaction at Fri Apr 04 17:27:33 CST 2014
≥17:27:33.618 [Test worker] INFO  c.j.o.d.r.impl.OrderRepositoryImpl - name=Create_Order_Event, event: testFlowType,1396603653529,FULFILL,OPEN,adb7829a-b832-4605-a5d0-3497eca282c8
º17:27:33.619 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@190f2b99
p17:27:33.619 [Test worker] DEBUG o.h.e.t.i.TransactionCoordinatorImpl - successfully registered Synchronization
o17:27:33.619 [Test worker] DEBUG org.hibernate.internal.SessionImpl - Opened session at timestamp: 13966036536
¶17:27:33.619 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@32f756a9
ô17:27:33.621 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 741627593229312529, using strategy: org.hibernate.id.Assigned
a17:27:33.621 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Initiating transaction commit
˘17:27:33.621 [Test worker] DEBUG b.tm.BitronixTransactionManager - committing transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108DF100000009], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:33.621 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - cancelling transaction timeout task on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108DF100000009], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:33.622 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - removing task by a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108DF100000009], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
“17:27:33.622 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - cancelled a TransactionTimeoutTask on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108DF100000009], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014) scheduled for Fri Apr 04 17:28:33 CST 2014, total task(s) still queued: 4
v17:27:33.622 [Test worker] DEBUG bitronix.tm.BitronixTransaction - before completion, 3 synchronization(s) to execute
û17:27:33.622 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a ClearContextSynchronization for a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108DF100000009], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
∫17:27:33.622 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@190f2b99
h17:27:33.622 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:33.622 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:33.622 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
ä17:27:33.622 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:33.622 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
∂17:27:33.622 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderEventEntity{statusId=OPEN, flowType=testFlowType, createdBy=dev, eventId=741627593229312529, trackingUuid=adb7829a-b832-4605-a5d0-3497eca282c8, createdTime=Fri Apr 04 17:27:33 CST 2014, actionId=FULFILL, eventTrackingUuid=145ce3d7-eb53-4e49-a32e-788b74a8b365, orderId=1396603653529, updatedTime=Fri Apr 04 17:27:33 CST 2014, updatedBy=dev}
]17:27:33.624 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
œ17:27:33.624 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (3 still available)
≈17:27:33.624 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/order_ds1 with 3 connection(s) (3 still available)
í17:27:33.624 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C108DF100000009]
Ä17:27:33.624 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - no NOT_ACCESSIBLE connection enlisted in this transaction
 17:27:33.624 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - getting IN_POOL connection from an XAPool of resource jdbc/order_ds1 with 3 connection(s) (3 still available), waiting if necessary
∞17:27:33.624 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 - closing time: 1396603705498, now time: 1396603653624
ø17:27:33.624 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found IN_POOL connection a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 from an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
Ô17:27:33.624 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
¨17:27:33.624 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221
˛17:27:33.624 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221
Æ17:27:33.625 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221
Û17:27:33.625 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221 to the accessible pool
ô17:27:33.625 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@48df8221 was in state IN_POOL, testing it
Å17:27:33.625 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - no query to test connection of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221, skipping test
Ó17:27:33.625 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221
Œ17:27:33.625 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
\17:27:33.625 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Ç17:27:33.625 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108DF100000009], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
ó17:27:33.625 [Test worker] DEBUG b.tm.resource.ResourceRegistrar - XAResource org.postgresql.xa.PGXAConnection@48df8221 belongs to a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221 that itself belongs to a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
…17:27:33.625 [Test worker] DEBUG b.tm.internal.XAResourceManager - creating new branch with a Bitronix XID [737072696E672D62746D000001452C108DF100000009 : 737072696E672D62746D000001452C108DF90000000A]
¿17:27:33.625 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - assigning <a Bitronix XID [737072696E672D62746D000001452C108DF100000009 : 737072696E672D62746D000001452C108DF90000000A]> to <an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@48df8221 with XID null>
¿17:27:33.625 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - starting an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@48df8221 with XID a Bitronix XID [737072696E672D62746D000001452C108DF100000009 : 737072696E672D62746D000001452C108DF90000000A] with NOFLAGS
…17:27:33.625 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - started an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@48df8221 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108DF100000009 : 737072696E672D62746D000001452C108DF90000000A] with NOFLAGS
‰17:27:33.625 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - putting XAResourceHolderState [an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@48df8221 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108DF100000009 : 737072696E672D62746D000001452C108DF90000000A]] on a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221
Œ17:27:33.625 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - GTRID [737072696E672D62746D000001452C108DF100000009] previously unknown to a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221, adding it to the resource's transactions list
Ñ17:27:33.626 [Test worker] DEBUG org.hibernate.SQL - insert into ORDER_EVENT (CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, ACTION_ID, EVENT_TRACKING_UUID, FLOW_NAME, ORDER_ID, STATUS_ID, TRACKING_UUID, EVENT_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
⁄Hibernate: insert into ORDER_EVENT (CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, ACTION_ID, EVENT_TRACKING_UUID, FLOW_NAME, ORDER_ID, STATUS_ID, TRACKING_UUID, EVENT_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
`17:27:33.628 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w17:27:33.630 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
]17:27:33.631 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
Ÿ17:27:33.631 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@7eae50a8
Â17:27:33.631 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221
Ç17:27:33.631 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108DF100000009], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:33.631 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
Ç17:27:33.631 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108DF100000009], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:33.631 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
Ò17:27:33.631 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
•17:27:33.631 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108DF100000009], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
É17:27:33.631 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
∂17:27:33.631 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
l17:27:33.631 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
˜17:27:33.631 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 from the accessible pool
à17:27:33.631 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
π17:27:33.631 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
˘17:27:33.631 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 to the inaccessible pool
Ë17:27:33.631 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
\17:27:33.631 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
Ü17:27:33.631 [Test worker] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
§17:27:33.631 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@32f756a9
”17:27:33.631 [Test worker] DEBUG bitronix.tm.BitronixTransaction - found unclosed resource to delist: an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@48df8221 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108DF100000009 : 737072696E672D62746D000001452C108DF90000000A]
√17:27:33.631 [Test worker] DEBUG b.tm.internal.XAResourceManager - delisting resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@48df8221 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108DF100000009 : 737072696E672D62746D000001452C108DF90000000A]
»17:27:33.631 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ending an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@48df8221 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108DF100000009 : 737072696E672D62746D000001452C108DF90000000A] with SUCCESS
«17:27:33.631 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ended an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@48df8221 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108DF100000009 : 737072696E672D62746D000001452C108DF90000000A] with SUCCESS
f17:27:33.632 [Test worker] DEBUG bitronix.tm.BitronixTransaction - committing, 1 enlisted resource(s)
l17:27:33.632 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to PREPARING
ï17:27:33.632 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from ACTIVE to PREPARING - executing 0 listener(s)
k17:27:33.632 [Test worker] DEBUG bitronix.tm.twopc.Preparer - 1 resource enlisted, no prepare needed (1PC)
k17:27:33.632 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to PREPARED
ó17:27:33.632 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from PREPARING to PREPARED - executing 0 listener(s)
\17:27:33.632 [Test worker] DEBUG bitronix.tm.BitronixTransaction - 1 interested resource(s)
m17:27:33.632 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to COMMITTING
ò17:27:33.632 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from PREPARED to COMMITTING - executing 0 listener(s)
ó17:27:33.632 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - executing phase on 1 resource(s) enlisted in 1 position(s) in reverse position order
d17:27:33.638 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - running 1 job(s) for position '1'
‹17:27:33.638 [Test worker] DEBUG bitronix.tm.twopc.Committer - committing resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@48df8221 (ended) with XID a Bitronix XID [737072696E672D62746D000001452C108DF100000009 : 737072696E672D62746D000001452C108DF90000000A] (with one-phase optimization)
Ω17:27:33.639 [Test worker] DEBUG bitronix.tm.twopc.Committer - committed resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@48df8221 (ended) with XID a Bitronix XID [737072696E672D62746D000001452C108DF100000009 : 737072696E672D62746D000001452C108DF90000000A]
e17:27:33.639 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - phase executed with 0 exception(s)
`17:27:33.639 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - ran 1 job(s) for position '1'
u17:27:33.639 [Test worker] DEBUG bitronix.tm.twopc.Committer - phase 2 commit executed on resources [jdbc/order_ds1]
v17:27:33.639 [Test worker] DEBUG bitronix.tm.twopc.Committer - phase 2 commit succeeded on resources [jdbc/order_ds1]
l17:27:33.639 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to COMMITTED
ô17:27:33.639 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from COMMITTING to COMMITTED - executing 0 listener(s)
¸17:27:33.639 [Test worker] DEBUG bitronix.tm.BitronixTransaction - successfully committed a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108DF100000009], status=COMMITTED, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
u17:27:33.639 [Test worker] DEBUG b.tm.internal.XAResourceManager - clearing XAResourceHolder states on 1 resource(s)
17:27:33.639 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - removing XAResourceHolderState of xid a Bitronix XID [737072696E672D62746D000001452C108DF100000009 : 737072696E672D62746D000001452C108DF90000000A] from a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
ª17:27:33.640 [Test worker] DEBUG b.tm.internal.XAResourceManager - resource a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 cleaned up all transaction states for GTRID [737072696E672D62746D000001452C108DF100000009]
u17:27:33.640 [Test worker] DEBUG bitronix.tm.BitronixTransaction - after completion, 4 synchronization(s) to execute
–17:27:33.640 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@190f2b99 with status=COMMITTED
j17:27:33.640 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Aggressively releasing JDBC connection
m17:27:33.640 [Test worker] DEBUG o.h.e.j.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
∫17:27:33.640 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@32f756a9 with status=COMMITTED
∑17:27:33.641 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a ClearContextSynchronization for a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108DF100000009], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014) with status=COMMITTED
“17:27:33.641 [Test worker] DEBUG b.tm.BitronixTransactionManager - clearing transaction from thread context: a ThreadContext (1165822536) with transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108DF100000009], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014), default timeout 60s
ó17:27:33.641 [Test worker] DEBUG b.tm.BitronixTransactionManager - removing transaction from in-flight transactions: a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108DF100000009], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
´17:27:33.641 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a DeferredReleaseSynchronization of a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 with status=COMMITTED
á17:27:33.641 [Test worker] DEBUG b.t.r.c.DeferredReleaseSynchronization - DeferredReleaseSynchronization requeuing a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
∑17:27:33.641 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
l17:27:33.641 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
˝17:27:33.641 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 from the inaccessible pool
â17:27:33.641 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
Ø17:27:33.641 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
Ô17:27:33.641 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 to the available pool
ˇ17:27:33.641 [Test worker] DEBUG b.t.r.c.DeferredReleaseSynchronization - DeferredReleaseSynchronization requeued a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
à17:27:33.641 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Resuming suspended transaction after completion of inner transaction
Î17:27:33.641 [Test worker] DEBUG b.tm.BitronixTransactionManager - resuming a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D8900000008], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
æ17:27:33.642 [Test worker] DEBUG bitronix.tm.internal.ThreadContext - assigning <a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D8900000008], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)> to <a ThreadContext (1165822536) with transaction null, default timeout 60s>
ÿ17:27:33.650 [bitronix-async-jmx-worker] DEBUG b.tm.utils.ManagementRegistrar - Calling ManagementUnregisterCommand on object with name bitronix.tm:type=Transaction,Gtrid=737072696E672D62746D000001452C108B8300000003
÷17:27:33.651 [bitronix-async-jmx-worker] DEBUG b.tm.utils.ManagementRegistrar - Calling ManagementRegisterCommand on object with name bitronix.tm:type=Transaction,Gtrid=737072696E672D62746D000001452C108D8900000008
á17:27:33.758 [Test worker] INFO  c.j.o.c.i.o.aspect.OrderEventAspect - name=Save_Order_Event_AfterReturning. action: FulfillmentAction
â17:27:33.760 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
È17:27:33.760 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Suspending current transaction, creating new transaction with name [com.junbo.order.core.impl.common.TransactionHelper$TransactionHelperImpl.executeInNewTransaction]
˘17:27:33.760 [Test worker] DEBUG b.tm.BitronixTransactionManager - suspending transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D8900000008], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
∆17:27:33.760 [Test worker] DEBUG b.tm.BitronixTransactionManager - clearing current thread context: a ThreadContext (1165822536) with transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D8900000008], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014), default timeout 60s
_17:27:33.760 [Test worker] DEBUG b.tm.BitronixTransactionManager - beginning a new transaction
d17:27:33.760 [Test worker] DEBUG b.tm.BitronixTransactionManager - dumping 1 transaction context(s)
‚17:27:33.761 [Test worker] DEBUG b.tm.BitronixTransactionManager - a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D8900000008], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
ñ17:27:33.761 [Test worker] DEBUG bitronix.tm.BitronixTransaction - creating new transaction with GTRID [737072696E672D62746D000001452C108E810000000B]
Æ17:27:33.761 [Test worker] DEBUG bitronix.tm.internal.ThreadContext - assigning <a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108E810000000B], status=NO_TRANSACTION, 0 resource(s) enlisted (started null)> to <a ThreadContext (1165822536) with transaction null, default timeout 60s>
i17:27:33.762 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to ACTIVE
ö17:27:33.762 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from NO_TRANSACTION to ACTIVE - executing 0 listener(s)
™17:27:33.762 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - scheduling transaction timeout task on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108E810000000B], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014) for Fri Apr 04 17:28:33 CST 2014
Û17:27:33.762 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - removing task by a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108E810000000B], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Ã17:27:33.762 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - scheduled a TransactionTimeoutTask on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108E810000000B], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014) scheduled for Fri Apr 04 17:28:33 CST 2014, total task(s) queued: 5
y17:27:33.763 [Test worker] DEBUG b.tm.BitronixTransactionManager - begun new transaction at Fri Apr 04 17:27:33 CST 2014
∂17:27:33.763 [Test worker] INFO  c.j.o.d.r.impl.OrderRepositoryImpl - name=Create_Order_Event, event: testFlowType,1396603653529,FULFILL,PENDING,adb7829a-b832-4605-a5d0-3497eca282c8
º17:27:33.763 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@6b6c3a33
p17:27:33.763 [Test worker] DEBUG o.h.e.t.i.TransactionCoordinatorImpl - successfully registered Synchronization
o17:27:33.763 [Test worker] DEBUG org.hibernate.internal.SessionImpl - Opened session at timestamp: 13966036537
•17:27:33.763 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@e61215e
ô17:27:33.763 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 741627593229313529, using strategy: org.hibernate.id.Assigned
a17:27:33.765 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Initiating transaction commit
˘17:27:33.765 [Test worker] DEBUG b.tm.BitronixTransactionManager - committing transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108E810000000B], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:33.765 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - cancelling transaction timeout task on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108E810000000B], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:33.765 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - removing task by a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108E810000000B], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
“17:27:33.765 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - cancelled a TransactionTimeoutTask on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108E810000000B], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014) scheduled for Fri Apr 04 17:28:33 CST 2014, total task(s) still queued: 4
v17:27:33.765 [Test worker] DEBUG bitronix.tm.BitronixTransaction - before completion, 3 synchronization(s) to execute
û17:27:33.765 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a ClearContextSynchronization for a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108E810000000B], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
∫17:27:33.765 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@6b6c3a33
h17:27:33.766 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:33.766 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:33.766 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
ä17:27:33.766 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:33.766 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
π17:27:33.766 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderEventEntity{statusId=PENDING, flowType=testFlowType, createdBy=dev, eventId=741627593229313529, trackingUuid=adb7829a-b832-4605-a5d0-3497eca282c8, createdTime=Fri Apr 04 17:27:33 CST 2014, actionId=FULFILL, eventTrackingUuid=66baa5a2-23e6-44bb-b5f7-22a84f864763, orderId=1396603653529, updatedTime=Fri Apr 04 17:27:33 CST 2014, updatedBy=dev}
]17:27:33.769 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
œ17:27:33.769 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (3 still available)
≈17:27:33.769 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/order_ds1 with 3 connection(s) (3 still available)
í17:27:33.769 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C108E810000000B]
Ä17:27:33.769 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - no NOT_ACCESSIBLE connection enlisted in this transaction
 17:27:33.769 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - getting IN_POOL connection from an XAPool of resource jdbc/order_ds1 with 3 connection(s) (3 still available), waiting if necessary
∞17:27:33.769 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 - closing time: 1396603713394, now time: 1396603653769
ø17:27:33.769 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found IN_POOL connection a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 from an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
Ô17:27:33.769 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
¨17:27:33.769 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7
˛17:27:33.769 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7
Æ17:27:33.769 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7
Û17:27:33.769 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7 to the accessible pool
ô17:27:33.769 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@49d869e7 was in state IN_POOL, testing it
Å17:27:33.769 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - no query to test connection of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7, skipping test
Ó17:27:33.769 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7
Œ17:27:33.769 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
\17:27:33.769 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Ç17:27:33.769 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108E810000000B], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
ó17:27:33.769 [Test worker] DEBUG b.tm.resource.ResourceRegistrar - XAResource org.postgresql.xa.PGXAConnection@49d869e7 belongs to a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7 that itself belongs to a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
…17:27:33.769 [Test worker] DEBUG b.tm.internal.XAResourceManager - creating new branch with a Bitronix XID [737072696E672D62746D000001452C108E810000000B : 737072696E672D62746D000001452C108E890000000C]
¿17:27:33.769 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - assigning <a Bitronix XID [737072696E672D62746D000001452C108E810000000B : 737072696E672D62746D000001452C108E890000000C]> to <an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@49d869e7 with XID null>
¿17:27:33.769 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - starting an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@49d869e7 with XID a Bitronix XID [737072696E672D62746D000001452C108E810000000B : 737072696E672D62746D000001452C108E890000000C] with NOFLAGS
…17:27:33.769 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - started an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@49d869e7 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108E810000000B : 737072696E672D62746D000001452C108E890000000C] with NOFLAGS
‰17:27:33.769 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - putting XAResourceHolderState [an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@49d869e7 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108E810000000B : 737072696E672D62746D000001452C108E890000000C]] on a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7
Œ17:27:33.770 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - GTRID [737072696E672D62746D000001452C108E810000000B] previously unknown to a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7, adding it to the resource's transactions list
Ñ17:27:33.770 [Test worker] DEBUG org.hibernate.SQL - insert into ORDER_EVENT (CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, ACTION_ID, EVENT_TRACKING_UUID, FLOW_NAME, ORDER_ID, STATUS_ID, TRACKING_UUID, EVENT_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
⁄Hibernate: insert into ORDER_EVENT (CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, ACTION_ID, EVENT_TRACKING_UUID, FLOW_NAME, ORDER_ID, STATUS_ID, TRACKING_UUID, EVENT_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
`17:27:33.772 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w17:27:33.774 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
]17:27:33.774 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
Ÿ17:27:33.774 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@2e91734e
Â17:27:33.774 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@49d869e7
Ç17:27:33.774 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108E810000000B], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:33.774 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
Ç17:27:33.774 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108E810000000B], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:33.774 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
Ò17:27:33.774 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
•17:27:33.774 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108E810000000B], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
É17:27:33.774 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
∂17:27:33.774 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
l17:27:33.774 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
˜17:27:33.774 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 from the accessible pool
à17:27:33.774 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
π17:27:33.774 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
˘17:27:33.775 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 to the inaccessible pool
Ë17:27:33.775 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
\17:27:33.775 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
Ü17:27:33.775 [Test worker] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
£17:27:33.775 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@e61215e
”17:27:33.775 [Test worker] DEBUG bitronix.tm.BitronixTransaction - found unclosed resource to delist: an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@49d869e7 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108E810000000B : 737072696E672D62746D000001452C108E890000000C]
√17:27:33.775 [Test worker] DEBUG b.tm.internal.XAResourceManager - delisting resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@49d869e7 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108E810000000B : 737072696E672D62746D000001452C108E890000000C]
»17:27:33.775 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ending an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@49d869e7 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108E810000000B : 737072696E672D62746D000001452C108E890000000C] with SUCCESS
«17:27:33.775 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ended an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@49d869e7 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108E810000000B : 737072696E672D62746D000001452C108E890000000C] with SUCCESS
f17:27:33.775 [Test worker] DEBUG bitronix.tm.BitronixTransaction - committing, 1 enlisted resource(s)
l17:27:33.775 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to PREPARING
ï17:27:33.775 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from ACTIVE to PREPARING - executing 0 listener(s)
k17:27:33.776 [Test worker] DEBUG bitronix.tm.twopc.Preparer - 1 resource enlisted, no prepare needed (1PC)
k17:27:33.776 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to PREPARED
ó17:27:33.776 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from PREPARING to PREPARED - executing 0 listener(s)
\17:27:33.776 [Test worker] DEBUG bitronix.tm.BitronixTransaction - 1 interested resource(s)
m17:27:33.776 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to COMMITTING
ò17:27:33.776 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from PREPARED to COMMITTING - executing 0 listener(s)
ó17:27:33.776 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - executing phase on 1 resource(s) enlisted in 1 position(s) in reverse position order
d17:27:33.776 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - running 1 job(s) for position '1'
‹17:27:33.776 [Test worker] DEBUG bitronix.tm.twopc.Committer - committing resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@49d869e7 (ended) with XID a Bitronix XID [737072696E672D62746D000001452C108E810000000B : 737072696E672D62746D000001452C108E890000000C] (with one-phase optimization)
Ω17:27:33.779 [Test worker] DEBUG bitronix.tm.twopc.Committer - committed resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@49d869e7 (ended) with XID a Bitronix XID [737072696E672D62746D000001452C108E810000000B : 737072696E672D62746D000001452C108E890000000C]
e17:27:33.779 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - phase executed with 0 exception(s)
`17:27:33.779 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - ran 1 job(s) for position '1'
u17:27:33.779 [Test worker] DEBUG bitronix.tm.twopc.Committer - phase 2 commit executed on resources [jdbc/order_ds1]
v17:27:33.779 [Test worker] DEBUG bitronix.tm.twopc.Committer - phase 2 commit succeeded on resources [jdbc/order_ds1]
l17:27:33.779 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to COMMITTED
ô17:27:33.780 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from COMMITTING to COMMITTED - executing 0 listener(s)
¸17:27:33.780 [Test worker] DEBUG bitronix.tm.BitronixTransaction - successfully committed a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108E810000000B], status=COMMITTED, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
u17:27:33.780 [Test worker] DEBUG b.tm.internal.XAResourceManager - clearing XAResourceHolder states on 1 resource(s)
17:27:33.780 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - removing XAResourceHolderState of xid a Bitronix XID [737072696E672D62746D000001452C108E810000000B : 737072696E672D62746D000001452C108E890000000C] from a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
ª17:27:33.780 [Test worker] DEBUG b.tm.internal.XAResourceManager - resource a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 cleaned up all transaction states for GTRID [737072696E672D62746D000001452C108E810000000B]
u17:27:33.780 [Test worker] DEBUG bitronix.tm.BitronixTransaction - after completion, 4 synchronization(s) to execute
–17:27:33.780 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@6b6c3a33 with status=COMMITTED
j17:27:33.780 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Aggressively releasing JDBC connection
m17:27:33.780 [Test worker] DEBUG o.h.e.j.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
π17:27:33.780 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@e61215e with status=COMMITTED
∑17:27:33.780 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a ClearContextSynchronization for a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108E810000000B], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014) with status=COMMITTED
“17:27:33.780 [Test worker] DEBUG b.tm.BitronixTransactionManager - clearing transaction from thread context: a ThreadContext (1165822536) with transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108E810000000B], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014), default timeout 60s
ó17:27:33.780 [Test worker] DEBUG b.tm.BitronixTransactionManager - removing transaction from in-flight transactions: a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108E810000000B], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
´17:27:33.780 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a DeferredReleaseSynchronization of a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 with status=COMMITTED
á17:27:33.780 [Test worker] DEBUG b.t.r.c.DeferredReleaseSynchronization - DeferredReleaseSynchronization requeuing a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
∑17:27:33.780 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
l17:27:33.780 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
˝17:27:33.780 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 from the inaccessible pool
â17:27:33.780 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
Ø17:27:33.780 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
Ô17:27:33.780 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7 to the available pool
ˇ17:27:33.781 [Test worker] DEBUG b.t.r.c.DeferredReleaseSynchronization - DeferredReleaseSynchronization requeued a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@49d869e7
à17:27:33.781 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Resuming suspended transaction after completion of inner transaction
Î17:27:33.781 [Test worker] DEBUG b.tm.BitronixTransactionManager - resuming a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D8900000008], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
æ17:27:33.781 [Test worker] DEBUG bitronix.tm.internal.ThreadContext - assigning <a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108D8900000008], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)> to <a ThreadContext (1165822536) with transaction null, default timeout 60s>
ÿ17:27:33.902 [bitronix-async-jmx-worker] DEBUG b.tm.utils.ManagementRegistrar - Calling ManagementUnregisterCommand on object with name bitronix.tm:type=Transaction,Gtrid=737072696E672D62746D000001452C108D8900000008
÷17:27:33.902 [bitronix-async-jmx-worker] DEBUG b.tm.utils.ManagementRegistrar - Calling ManagementRegisterCommand on object with name bitronix.tm:type=Transaction,Gtrid=737072696E672D62746D000001452C108EFE0000000D
ã17:27:33.916 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'flow_MOCK_RATE_ORDER'
ã17:27:33.930 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'flow_MOCK_RATE_ORDER'
j17:27:33.967 [Test worker] ERROR c.j.o.c.i.i.i.OrderInternalServiceImpl - name=Rating_Result_Successfully
â17:27:33.991 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
i17:27:33.991 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Participating in existing transaction
}17:27:33.992 [Test worker] INFO  c.j.o.c.i.o.aspect.OrderEventAspect - name=Save_Order_Event_Before. action: SaveOrderAction
{17:27:34.019 [Test worker] INFO  c.j.o.c.c.i.CachedCatalogFacadeImpl - name=Offer_Missing_In_Cache. offerId: 1396603653890
}17:27:34.019 [Test worker] INFO  c.j.o.c.c.i.CachedCatalogFacadeImpl - name=Offer_Load_Without_Cache. offerId: 1396603653890
q17:27:34.062 [Test worker] INFO  c.j.o.c.c.i.CachedCatalogFacadeImpl - name=Offer_Cached. offerId: 1396603653890
â17:27:34.072 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
–17:27:34.072 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Suspending current transaction, creating new transaction with name [com.junbo.sharding.id.oculus.OculusGlobalCounterInDBImpl.getAndIncrease]
˘17:27:34.073 [Test worker] DEBUG b.tm.BitronixTransactionManager - suspending transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
∆17:27:34.073 [Test worker] DEBUG b.tm.BitronixTransactionManager - clearing current thread context: a ThreadContext (1165822536) with transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014), default timeout 60s
_17:27:34.073 [Test worker] DEBUG b.tm.BitronixTransactionManager - beginning a new transaction
d17:27:34.073 [Test worker] DEBUG b.tm.BitronixTransactionManager - dumping 1 transaction context(s)
‚17:27:34.073 [Test worker] DEBUG b.tm.BitronixTransactionManager - a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
ñ17:27:34.073 [Test worker] DEBUG bitronix.tm.BitronixTransaction - creating new transaction with GTRID [737072696E672D62746D000001452C108FB90000000E]
Æ17:27:34.073 [Test worker] DEBUG bitronix.tm.internal.ThreadContext - assigning <a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=NO_TRANSACTION, 0 resource(s) enlisted (started null)> to <a ThreadContext (1165822536) with transaction null, default timeout 60s>
i17:27:34.073 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to ACTIVE
ö17:27:34.073 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from NO_TRANSACTION to ACTIVE - executing 0 listener(s)
™17:27:34.073 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - scheduling transaction timeout task on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014) for Fri Apr 04 17:28:34 CST 2014
Û17:27:34.073 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - removing task by a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ã17:27:34.073 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - scheduled a TransactionTimeoutTask on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014) scheduled for Fri Apr 04 17:28:34 CST 2014, total task(s) queued: 5
y17:27:34.073 [Test worker] DEBUG b.tm.BitronixTransactionManager - begun new transaction at Fri Apr 04 17:27:34 CST 2014
â17:27:34.084 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
i17:27:34.084 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Participating in existing transaction
º17:27:34.097 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@5026ec63
p17:27:34.097 [Test worker] DEBUG o.h.e.t.i.TransactionCoordinatorImpl - successfully registered Synchronization
o17:27:34.097 [Test worker] DEBUG org.hibernate.internal.SessionImpl - Opened session at timestamp: 13966036540
¶17:27:34.097 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@2baaab94
]17:27:34.135 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ17:27:34.136 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (3 still available)
ƒ17:27:34.136 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (3 still available)
í17:27:34.136 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C108FB90000000E]
Ä17:27:34.136 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - no NOT_ACCESSIBLE connection enlisted in this transaction
…17:27:34.136 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - getting IN_POOL connection from an XAPool of resource jdbc/sharding with 3 connection(s) (3 still available), waiting if necessary
Ø17:27:34.136 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee - closing time: 1396603706857, now time: 1396603654136
Ω17:27:34.136 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found IN_POOL connection a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
Ó17:27:34.136 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
´17:27:34.136 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
˝17:27:34.136 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
≠17:27:34.136 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Ú17:27:34.136 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee to the accessible pool
ô17:27:34.136 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@14fdc2ee was in state IN_POOL, testing it
Ä17:27:34.136 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - no query to test connection of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee, skipping test
Ì17:27:34.136 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Õ17:27:34.139 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\17:27:34.140 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å17:27:34.140 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.140 [Test worker] DEBUG b.tm.resource.ResourceRegistrar - XAResource org.postgresql.xa.PGXAConnection@14fdc2ee does not belong to any resource of a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (3 still available)
ï17:27:34.140 [Test worker] DEBUG b.tm.resource.ResourceRegistrar - XAResource org.postgresql.xa.PGXAConnection@14fdc2ee belongs to a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee that itself belongs to a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
…17:27:34.140 [Test worker] DEBUG b.tm.internal.XAResourceManager - creating new branch with a Bitronix XID [737072696E672D62746D000001452C108FB90000000E : 737072696E672D62746D000001452C108FFC0000000F]
ø17:27:34.140 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - assigning <a Bitronix XID [737072696E672D62746D000001452C108FB90000000E : 737072696E672D62746D000001452C108FFC0000000F]> to <an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@14fdc2ee with XID null>
ø17:27:34.140 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - starting an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@14fdc2ee with XID a Bitronix XID [737072696E672D62746D000001452C108FB90000000E : 737072696E672D62746D000001452C108FFC0000000F] with NOFLAGS
»17:27:34.140 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - started an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@14fdc2ee (started) with XID a Bitronix XID [737072696E672D62746D000001452C108FB90000000E : 737072696E672D62746D000001452C108FFC0000000F] with NOFLAGS
‚17:27:34.140 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - putting XAResourceHolderState [an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@14fdc2ee (started) with XID a Bitronix XID [737072696E672D62746D000001452C108FB90000000E : 737072696E672D62746D000001452C108FFC0000000F]] on a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Õ17:27:34.140 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - GTRID [737072696E672D62746D000001452C108FB90000000E] previously unknown to a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee, adding it to the resource's transactions list
|17:27:34.140 [Test worker] DEBUG org.hibernate.SQL - select * from id_global_counter where shard_id = ? and option_mode = ?
RHibernate: select * from id_global_counter where shard_id = ? and option_mode = ?
f17:27:34.141 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 0 -> shardId [1]
i17:27:34.141 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 3 -> optionMode [2]
÷17:27:34.153 [bitronix-async-jmx-worker] DEBUG b.tm.utils.ManagementRegistrar - Calling ManagementRegisterCommand on object with name bitronix.tm:type=Transaction,Gtrid=737072696E672D62746D000001452C108FB90000000E
Q17:27:34.169 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
ä17:27:34.172 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.sharding.id.model.IdGlobalCounterEntity#3]
]17:27:34.175 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ17:27:34.176 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@308f4acd
‰17:27:34.176 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Å17:27:34.176 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.176 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Å17:27:34.176 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.176 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
17:27:34.176 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
§17:27:34.176 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ç17:27:34.176 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
µ17:27:34.176 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
l17:27:34.176 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ17:27:34.176 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from the accessible pool
á17:27:34.176 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
∏17:27:34.176 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
¯17:27:34.179 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee to the inaccessible pool
Á17:27:34.179 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
\17:27:34.179 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
Ü17:27:34.179 [Test worker] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
ï17:27:34.180 [Test worker] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.junbo.sharding.id.model.IdGlobalCounterEntity#3]
î17:27:34.181 [Test worker] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.junbo.sharding.id.model.IdGlobalCounterEntity#3]
h17:27:34.181 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
â17:27:34.182 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
i17:27:34.182 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Participating in existing transaction
h17:27:34.183 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:34.183 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:34.185 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
ä17:27:34.185 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:34.185 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
•17:27:34.185 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.sharding.id.model.IdGlobalCounterEntity{id=3, shardId=0, globalCounter=3, optionMode=3}
|17:27:34.185 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Changes must be flushed to space: id_global_counter
]17:27:34.190 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ17:27:34.190 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ƒ17:27:34.190 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
í17:27:34.190 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C108FB90000000E]
Ö17:27:34.190 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
ô17:27:34.190 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
ï17:27:34.191 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D000001452C108FB90000000E
ò17:27:34.191 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
À17:27:34.191 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ı17:27:34.191 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
π17:27:34.191 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
¸17:27:34.191 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from the inaccessible pool
ã17:27:34.191 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
¥17:27:34.191 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
â17:27:34.191 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
©17:27:34.191 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ú17:27:34.191 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee to the accessible pool
®17:27:34.191 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@14fdc2ee was in state NOT_ACCESSIBLE, no need to test it
Ì17:27:34.191 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Õ17:27:34.191 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\17:27:34.191 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å17:27:34.192 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ú17:27:34.192 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@14fdc2ee (started) with XID a Bitronix XID [737072696E672D62746D000001452C108FB90000000E : 737072696E672D62746D000001452C108FFC0000000F]
á17:27:34.192 [Test worker] DEBUG org.hibernate.SQL - update id_global_counter set global_count=?, option_mode=?, shard_id=? where id=?
]Hibernate: update id_global_counter set global_count=?, option_mode=?, shard_id=? where id=?
`17:27:34.192 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w17:27:34.194 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
]17:27:34.194 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ17:27:34.194 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@308f4acd
‰17:27:34.194 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Å17:27:34.194 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.194 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Å17:27:34.194 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.194 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
17:27:34.194 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
§17:27:34.194 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ç17:27:34.194 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
µ17:27:34.194 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
l17:27:34.194 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ17:27:34.194 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from the accessible pool
á17:27:34.194 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
∏17:27:34.194 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
¯17:27:34.194 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee to the inaccessible pool
Á17:27:34.194 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
\17:27:34.194 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
]17:27:34.195 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ17:27:34.195 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ƒ17:27:34.195 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
í17:27:34.195 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C108FB90000000E]
Ö17:27:34.195 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
ô17:27:34.195 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
ï17:27:34.195 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D000001452C108FB90000000E
ò17:27:34.195 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
À17:27:34.195 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ı17:27:34.195 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
π17:27:34.195 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
¸17:27:34.195 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from the inaccessible pool
ã17:27:34.195 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
¥17:27:34.195 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
â17:27:34.195 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
©17:27:34.195 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ú17:27:34.196 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee to the accessible pool
®17:27:34.196 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@14fdc2ee was in state NOT_ACCESSIBLE, no need to test it
Ì17:27:34.196 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Õ17:27:34.196 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\17:27:34.196 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å17:27:34.196 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ú17:27:34.196 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@14fdc2ee (started) with XID a Bitronix XID [737072696E672D62746D000001452C108FB90000000E : 737072696E672D62746D000001452C108FFC0000000F]
|17:27:34.196 [Test worker] DEBUG org.hibernate.SQL - select * from id_global_counter where shard_id = ? and option_mode = ?
RHibernate: select * from id_global_counter where shard_id = ? and option_mode = ?
f17:27:34.196 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 0 -> shardId [1]
i17:27:34.196 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 3 -> optionMode [2]
Q17:27:34.197 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
ä17:27:34.198 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.sharding.id.model.IdGlobalCounterEntity#3]
]17:27:34.198 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ17:27:34.198 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@308f4acd
‰17:27:34.198 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Å17:27:34.198 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.198 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Å17:27:34.198 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.198 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
17:27:34.198 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
§17:27:34.198 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ç17:27:34.198 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
µ17:27:34.198 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
l17:27:34.198 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ17:27:34.198 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from the accessible pool
á17:27:34.198 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
∏17:27:34.198 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
¯17:27:34.198 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee to the inaccessible pool
Á17:27:34.198 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
\17:27:34.198 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
h17:27:34.199 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
h17:27:34.203 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:34.203 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:34.204 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
ä17:27:34.204 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:34.204 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
•17:27:34.204 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.sharding.id.model.IdGlobalCounterEntity{id=3, shardId=0, globalCounter=3, optionMode=3}
|17:27:34.204 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Changes must be flushed to space: id_global_counter
]17:27:34.204 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ17:27:34.204 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ƒ17:27:34.204 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
í17:27:34.204 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C108FB90000000E]
Ö17:27:34.204 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
ô17:27:34.204 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
ï17:27:34.204 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D000001452C108FB90000000E
ò17:27:34.204 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
À17:27:34.204 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ı17:27:34.205 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
π17:27:34.205 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
¸17:27:34.205 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from the inaccessible pool
ã17:27:34.205 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
¥17:27:34.205 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
â17:27:34.205 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
©17:27:34.205 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ú17:27:34.205 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee to the accessible pool
®17:27:34.205 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@14fdc2ee was in state NOT_ACCESSIBLE, no need to test it
Ì17:27:34.205 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Õ17:27:34.205 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\17:27:34.205 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å17:27:34.205 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ú17:27:34.205 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@14fdc2ee (started) with XID a Bitronix XID [737072696E672D62746D000001452C108FB90000000E : 737072696E672D62746D000001452C108FFC0000000F]
á17:27:34.205 [Test worker] DEBUG org.hibernate.SQL - update id_global_counter set global_count=?, option_mode=?, shard_id=? where id=?
]Hibernate: update id_global_counter set global_count=?, option_mode=?, shard_id=? where id=?
`17:27:34.206 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w17:27:34.213 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
]17:27:34.213 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ17:27:34.213 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@308f4acd
‰17:27:34.214 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Å17:27:34.214 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.214 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Å17:27:34.214 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.214 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
17:27:34.214 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
§17:27:34.214 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ç17:27:34.214 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
µ17:27:34.214 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
l17:27:34.214 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ17:27:34.214 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from the accessible pool
á17:27:34.214 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
∏17:27:34.214 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
¯17:27:34.214 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee to the inaccessible pool
Á17:27:34.214 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
\17:27:34.214 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
]17:27:34.215 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ17:27:34.215 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ƒ17:27:34.215 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
í17:27:34.215 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C108FB90000000E]
Ö17:27:34.215 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
ô17:27:34.215 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
ï17:27:34.215 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D000001452C108FB90000000E
ò17:27:34.215 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
À17:27:34.215 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ı17:27:34.215 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
π17:27:34.215 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
¸17:27:34.216 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from the inaccessible pool
ã17:27:34.216 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
¥17:27:34.216 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
â17:27:34.216 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
©17:27:34.216 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ú17:27:34.216 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee to the accessible pool
®17:27:34.216 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@14fdc2ee was in state NOT_ACCESSIBLE, no need to test it
Ì17:27:34.216 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Õ17:27:34.216 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\17:27:34.216 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å17:27:34.216 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ú17:27:34.216 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@14fdc2ee (started) with XID a Bitronix XID [737072696E672D62746D000001452C108FB90000000E : 737072696E672D62746D000001452C108FFC0000000F]
|17:27:34.216 [Test worker] DEBUG org.hibernate.SQL - select * from id_global_counter where shard_id = ? and option_mode = ?
RHibernate: select * from id_global_counter where shard_id = ? and option_mode = ?
f17:27:34.217 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 0 -> shardId [1]
i17:27:34.217 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 3 -> optionMode [2]
Q17:27:34.221 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
ä17:27:34.221 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.sharding.id.model.IdGlobalCounterEntity#3]
]17:27:34.221 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ17:27:34.221 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@308f4acd
‰17:27:34.221 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Å17:27:34.221 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.221 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Å17:27:34.222 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.222 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
17:27:34.222 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
§17:27:34.222 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ç17:27:34.222 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
µ17:27:34.222 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
l17:27:34.222 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ17:27:34.222 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from the accessible pool
á17:27:34.222 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
∏17:27:34.222 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
¯17:27:34.222 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee to the inaccessible pool
Á17:27:34.222 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
\17:27:34.222 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
h17:27:34.222 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
h17:27:34.222 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:34.222 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:34.222 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
ä17:27:34.223 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:34.223 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
•17:27:34.225 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.sharding.id.model.IdGlobalCounterEntity{id=3, shardId=0, globalCounter=3, optionMode=3}
]17:27:34.225 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ17:27:34.225 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ƒ17:27:34.225 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
í17:27:34.225 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C108FB90000000E]
Ö17:27:34.225 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
ô17:27:34.225 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
ï17:27:34.225 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D000001452C108FB90000000E
ò17:27:34.225 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
À17:27:34.225 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ı17:27:34.225 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
π17:27:34.225 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
¸17:27:34.225 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from the inaccessible pool
ã17:27:34.225 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
¥17:27:34.225 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
â17:27:34.225 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
©17:27:34.225 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ú17:27:34.225 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee to the accessible pool
®17:27:34.225 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@14fdc2ee was in state NOT_ACCESSIBLE, no need to test it
Ì17:27:34.226 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Õ17:27:34.226 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\17:27:34.226 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å17:27:34.226 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ú17:27:34.226 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@14fdc2ee (started) with XID a Bitronix XID [737072696E672D62746D000001452C108FB90000000E : 737072696E672D62746D000001452C108FFC0000000F]
|17:27:34.226 [Test worker] DEBUG org.hibernate.SQL - select * from id_global_counter where shard_id = ? and option_mode = ?
RHibernate: select * from id_global_counter where shard_id = ? and option_mode = ?
f17:27:34.226 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 0 -> shardId [1]
i17:27:34.226 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 3 -> optionMode [2]
Q17:27:34.228 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
ä17:27:34.228 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.sharding.id.model.IdGlobalCounterEntity#3]
]17:27:34.228 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ17:27:34.229 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@308f4acd
‰17:27:34.229 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Å17:27:34.229 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.229 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Å17:27:34.229 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.229 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
17:27:34.229 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
§17:27:34.229 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ç17:27:34.229 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
µ17:27:34.229 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
l17:27:34.229 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ17:27:34.229 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from the accessible pool
á17:27:34.229 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
∏17:27:34.229 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
¯17:27:34.229 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee to the inaccessible pool
Á17:27:34.229 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
\17:27:34.229 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
h17:27:34.229 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
a17:27:34.230 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Initiating transaction commit
˘17:27:34.230 [Test worker] DEBUG b.tm.BitronixTransactionManager - committing transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
â17:27:34.230 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - cancelling transaction timeout task on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Û17:27:34.230 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - removing task by a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
“17:27:34.230 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - cancelled a TransactionTimeoutTask on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014) scheduled for Fri Apr 04 17:28:34 CST 2014, total task(s) still queued: 4
v17:27:34.230 [Test worker] DEBUG bitronix.tm.BitronixTransaction - before completion, 4 synchronization(s) to execute
î17:27:34.230 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a DeferredReleaseSynchronization of a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
û17:27:34.230 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a ClearContextSynchronization for a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
∫17:27:34.230 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@5026ec63
h17:27:34.230 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:34.230 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:34.230 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
ä17:27:34.230 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:34.230 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
•17:27:34.230 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.sharding.id.model.IdGlobalCounterEntity{id=3, shardId=0, globalCounter=3, optionMode=3}
]17:27:34.230 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
§17:27:34.230 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@2baaab94
“17:27:34.230 [Test worker] DEBUG bitronix.tm.BitronixTransaction - found unclosed resource to delist: an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@14fdc2ee (started) with XID a Bitronix XID [737072696E672D62746D000001452C108FB90000000E : 737072696E672D62746D000001452C108FFC0000000F]
¬17:27:34.231 [Test worker] DEBUG b.tm.internal.XAResourceManager - delisting resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@14fdc2ee (started) with XID a Bitronix XID [737072696E672D62746D000001452C108FB90000000E : 737072696E672D62746D000001452C108FFC0000000F]
«17:27:34.231 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ending an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@14fdc2ee (started) with XID a Bitronix XID [737072696E672D62746D000001452C108FB90000000E : 737072696E672D62746D000001452C108FFC0000000F] with SUCCESS
∆17:27:34.231 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ended an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@14fdc2ee (started) with XID a Bitronix XID [737072696E672D62746D000001452C108FB90000000E : 737072696E672D62746D000001452C108FFC0000000F] with SUCCESS
f17:27:34.231 [Test worker] DEBUG bitronix.tm.BitronixTransaction - committing, 1 enlisted resource(s)
l17:27:34.231 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to PREPARING
ï17:27:34.231 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from ACTIVE to PREPARING - executing 0 listener(s)
k17:27:34.231 [Test worker] DEBUG bitronix.tm.twopc.Preparer - 1 resource enlisted, no prepare needed (1PC)
k17:27:34.231 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to PREPARED
ó17:27:34.231 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from PREPARING to PREPARED - executing 0 listener(s)
\17:27:34.231 [Test worker] DEBUG bitronix.tm.BitronixTransaction - 1 interested resource(s)
m17:27:34.231 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to COMMITTING
ò17:27:34.231 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from PREPARED to COMMITTING - executing 0 listener(s)
ó17:27:34.231 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - executing phase on 1 resource(s) enlisted in 1 position(s) in reverse position order
d17:27:34.231 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - running 1 job(s) for position '1'
€17:27:34.231 [Test worker] DEBUG bitronix.tm.twopc.Committer - committing resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@14fdc2ee (ended) with XID a Bitronix XID [737072696E672D62746D000001452C108FB90000000E : 737072696E672D62746D000001452C108FFC0000000F] (with one-phase optimization)
º17:27:34.234 [Test worker] DEBUG bitronix.tm.twopc.Committer - committed resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@14fdc2ee (ended) with XID a Bitronix XID [737072696E672D62746D000001452C108FB90000000E : 737072696E672D62746D000001452C108FFC0000000F]
e17:27:34.234 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - phase executed with 0 exception(s)
`17:27:34.234 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - ran 1 job(s) for position '1'
t17:27:34.234 [Test worker] DEBUG bitronix.tm.twopc.Committer - phase 2 commit executed on resources [jdbc/sharding]
u17:27:34.234 [Test worker] DEBUG bitronix.tm.twopc.Committer - phase 2 commit succeeded on resources [jdbc/sharding]
l17:27:34.234 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to COMMITTED
ô17:27:34.234 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from COMMITTING to COMMITTED - executing 0 listener(s)
¸17:27:34.234 [Test worker] DEBUG bitronix.tm.BitronixTransaction - successfully committed a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=COMMITTED, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
u17:27:34.234 [Test worker] DEBUG b.tm.internal.XAResourceManager - clearing XAResourceHolder states on 1 resource(s)
Ô17:27:34.234 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - removing XAResourceHolderState of xid a Bitronix XID [737072696E672D62746D000001452C108FB90000000E : 737072696E672D62746D000001452C108FFC0000000F] from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
∫17:27:34.234 [Test worker] DEBUG b.tm.internal.XAResourceManager - resource a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee cleaned up all transaction states for GTRID [737072696E672D62746D000001452C108FB90000000E]
u17:27:34.234 [Test worker] DEBUG bitronix.tm.BitronixTransaction - after completion, 4 synchronization(s) to execute
–17:27:34.235 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@5026ec63 with status=COMMITTED
j17:27:34.235 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Aggressively releasing JDBC connection
m17:27:34.235 [Test worker] DEBUG o.h.e.j.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
∫17:27:34.235 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@2baaab94 with status=COMMITTED
∑17:27:34.235 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a ClearContextSynchronization for a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014) with status=COMMITTED
“17:27:34.236 [Test worker] DEBUG b.tm.BitronixTransactionManager - clearing transaction from thread context: a ThreadContext (1165822536) with transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014), default timeout 60s
ó17:27:34.236 [Test worker] DEBUG b.tm.BitronixTransactionManager - removing transaction from in-flight transactions: a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108FB90000000E], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
™17:27:34.236 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a DeferredReleaseSynchronization of a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee with status=COMMITTED
Ü17:27:34.236 [Test worker] DEBUG b.t.r.c.DeferredReleaseSynchronization - DeferredReleaseSynchronization requeuing a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
∂17:27:34.236 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
l17:27:34.236 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
¸17:27:34.236 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee from the inaccessible pool
à17:27:34.236 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Æ17:27:34.236 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
Ó17:27:34.236 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee to the available pool
˛17:27:34.236 [Test worker] DEBUG b.t.r.c.DeferredReleaseSynchronization - DeferredReleaseSynchronization requeued a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@14fdc2ee
à17:27:34.236 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Resuming suspended transaction after completion of inner transaction
Î17:27:34.236 [Test worker] DEBUG b.tm.BitronixTransactionManager - resuming a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
æ17:27:34.236 [Test worker] DEBUG bitronix.tm.internal.ThreadContext - assigning <a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)> to <a ThreadContext (1165822536) with transaction null, default timeout 60s>
º17:27:34.238 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@6ebd3044
p17:27:34.238 [Test worker] DEBUG o.h.e.t.i.TransactionCoordinatorImpl - successfully registered Synchronization
o17:27:34.238 [Test worker] DEBUG org.hibernate.internal.SessionImpl - Opened session at timestamp: 13966036542
¶17:27:34.238 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@6f6b0501
è17:27:34.239 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 50348032, using strategy: org.hibernate.id.Assigned
h17:27:34.265 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:34.265 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:34.266 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
ä17:27:34.266 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:34.266 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
ﬁ17:27:34.266 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderEntity{shippingAddressId=1396603653894, trackingUuid=25e7d904-b99f-44bb-8e4d-4fa11236ff8f, honoredTime=Fri Apr 04 17:27:33 CST 2014, shippingMethodId=1396603653895, currency=USD, updatedBy=dev, totalShippingFee=10.0, isTaxInclusive=false, orderTypeId=PAY_IN, userId=1396603653892, originalOrderId=null, totalAmount=50.0, updatedTime=Fri Apr 04 17:27:34 CST 2014, orderId=50348032, totalPreorderAmount=null, totalDiscount=10.0, createdTime=Fri Apr 04 17:27:34 CST 2014, orderStatusId=OPEN, properties=null, totalShippingFeeDiscount=0, country=US, createdBy=dev, totalPreorderTax=null, tentative=true, totalTax=2.00, honorUntilTime=null}
]17:27:34.267 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
œ17:27:34.267 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (3 still available)
≈17:27:34.267 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/order_ds1 with 3 connection(s) (3 still available)
í17:27:34.267 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C108EFE0000000D]
Ä17:27:34.267 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - no NOT_ACCESSIBLE connection enlisted in this transaction
 17:27:34.267 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - getting IN_POOL connection from an XAPool of resource jdbc/order_ds1 with 3 connection(s) (3 still available), waiting if necessary
∞17:27:34.267 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 - closing time: 1396603713454, now time: 1396603654267
ø17:27:34.267 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found IN_POOL connection a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
Ô17:27:34.267 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
¨17:27:34.267 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
˛17:27:34.267 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Æ17:27:34.267 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Û17:27:34.267 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the accessible pool
ô17:27:34.267 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@555afe16 was in state IN_POOL, testing it
Å17:27:34.267 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - no query to test connection of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16, skipping test
Ó17:27:34.267 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Œ17:27:34.267 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
\17:27:34.267 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Ç17:27:34.267 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
ó17:27:34.267 [Test worker] DEBUG b.tm.resource.ResourceRegistrar - XAResource org.postgresql.xa.PGXAConnection@555afe16 belongs to a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 that itself belongs to a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
…17:27:34.267 [Test worker] DEBUG b.tm.internal.XAResourceManager - creating new branch with a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
¿17:27:34.267 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - assigning <a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]> to <an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 with XID null>
¿17:27:34.268 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - starting an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010] with NOFLAGS
…17:27:34.268 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - started an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010] with NOFLAGS
‰17:27:34.268 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - putting XAResourceHolderState [an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]] on a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Œ17:27:34.268 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - GTRID [737072696E672D62746D000001452C108EFE0000000D] previously unknown to a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16, adding it to the resource's transactions list
⁄17:27:34.269 [Test worker] DEBUG org.hibernate.SQL - select this_.ORDER_ITEM_ID as ORDER1_4_0_, this_.CREATED_BY as CREATED2_4_0_, this_.CREATED_TIME as CREATED3_4_0_, this_.UPDATED_BY as UPDATED4_4_0_, this_.UPDATED_TIME as UPDATED5_4_0_, this_.IS_DELETED as IS6_4_0_, this_.FEDERATED_ID as FEDERATED7_4_0_, this_.HONOR_UNTIL_TIME as HONOR8_4_0_, this_.HONORED_TIME as HONORED9_4_0_, this_.IS_TAX_EXEMPTED as IS10_4_0_, this_.ORDER_ID as ORDER11_4_0_, this_.ORDER_ITEM_TYPE as ORDER12_4_0_, this_.PRODUCT_ITEM_ID as PRODUCT13_4_0_, this_.PROPERTIES as PROPERTIES4_0_, this_.QUANTITY as QUANTITY4_0_, this_.SHIPPING_ADDRESS_ID as SHIPPING16_4_0_, this_.SHIPPING_METHOD_ID as SHIPPING17_4_0_, this_.TOTAL_AMOUNT as TOTAL18_4_0_, this_.TOTAL_DISCOUNT as TOTAL19_4_0_, this_.TOTAL_PREORDER_AMOUNT as TOTAL20_4_0_, this_.TOTAL_PREORDER_TAX as TOTAL21_4_0_, this_.TOTAL_TAX as TOTAL22_4_0_, this_.UNIT_PRICE as UNIT23_4_0_ from ORDER_ITEM this_ where this_.ORDER_ID=? and this_.IS_DELETED=?
∞Hibernate: select this_.ORDER_ITEM_ID as ORDER1_4_0_, this_.CREATED_BY as CREATED2_4_0_, this_.CREATED_TIME as CREATED3_4_0_, this_.UPDATED_BY as UPDATED4_4_0_, this_.UPDATED_TIME as UPDATED5_4_0_, this_.IS_DELETED as IS6_4_0_, this_.FEDERATED_ID as FEDERATED7_4_0_, this_.HONOR_UNTIL_TIME as HONOR8_4_0_, this_.HONORED_TIME as HONORED9_4_0_, this_.IS_TAX_EXEMPTED as IS10_4_0_, this_.ORDER_ID as ORDER11_4_0_, this_.ORDER_ITEM_TYPE as ORDER12_4_0_, this_.PRODUCT_ITEM_ID as PRODUCT13_4_0_, this_.PROPERTIES as PROPERTIES4_0_, this_.QUANTITY as QUANTITY4_0_, this_.SHIPPING_ADDRESS_ID as SHIPPING16_4_0_, this_.SHIPPING_METHOD_ID as SHIPPING17_4_0_, this_.TOTAL_AMOUNT as TOTAL18_4_0_, this_.TOTAL_DISCOUNT as TOTAL19_4_0_, this_.TOTAL_PREORDER_AMOUNT as TOTAL20_4_0_, this_.TOTAL_PREORDER_TAX as TOTAL21_4_0_, this_.TOTAL_TAX as TOTAL22_4_0_, this_.UNIT_PRICE as UNIT23_4_0_ from ORDER_ITEM this_ where this_.ORDER_ID=? and this_.IS_DELETED=?
]17:27:34.286 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
Ÿ17:27:34.286 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@10805ac7
Â17:27:34.286 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ç17:27:34.286 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:34.286 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ç17:27:34.286 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:34.286 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ò17:27:34.286 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
•17:27:34.286 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
É17:27:34.286 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
∂17:27:34.287 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
l17:27:34.287 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
˜17:27:34.287 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from the accessible pool
à17:27:34.287 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
π17:27:34.287 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
˘17:27:34.287 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the inaccessible pool
Ë17:27:34.287 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
\17:27:34.287 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
Ü17:27:34.287 [Test worker] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
h17:27:34.287 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
â17:27:34.298 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
–17:27:34.298 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Suspending current transaction, creating new transaction with name [com.junbo.sharding.id.oculus.OculusGlobalCounterInDBImpl.getAndIncrease]
˘17:27:34.298 [Test worker] DEBUG b.tm.BitronixTransactionManager - suspending transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
ª17:27:34.298 [Test worker] DEBUG b.tm.internal.XAResourceManager - suspending an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
»17:27:34.298 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ending an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010] with SUCCESS
«17:27:34.299 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ended an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010] with SUCCESS
∆17:27:34.299 [Test worker] DEBUG b.tm.BitronixTransactionManager - clearing current thread context: a ThreadContext (1165822536) with transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014), default timeout 60s
_17:27:34.299 [Test worker] DEBUG b.tm.BitronixTransactionManager - beginning a new transaction
d17:27:34.299 [Test worker] DEBUG b.tm.BitronixTransactionManager - dumping 1 transaction context(s)
‚17:27:34.299 [Test worker] DEBUG b.tm.BitronixTransactionManager - a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
ñ17:27:34.299 [Test worker] DEBUG bitronix.tm.BitronixTransaction - creating new transaction with GTRID [737072696E672D62746D000001452C10909B00000011]
Æ17:27:34.299 [Test worker] DEBUG bitronix.tm.internal.ThreadContext - assigning <a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=NO_TRANSACTION, 0 resource(s) enlisted (started null)> to <a ThreadContext (1165822536) with transaction null, default timeout 60s>
i17:27:34.299 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to ACTIVE
ö17:27:34.299 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from NO_TRANSACTION to ACTIVE - executing 0 listener(s)
™17:27:34.299 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - scheduling transaction timeout task on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014) for Fri Apr 04 17:28:34 CST 2014
Û17:27:34.299 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - removing task by a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ã17:27:34.299 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - scheduled a TransactionTimeoutTask on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014) scheduled for Fri Apr 04 17:28:34 CST 2014, total task(s) queued: 5
y17:27:34.299 [Test worker] DEBUG b.tm.BitronixTransactionManager - begun new transaction at Fri Apr 04 17:27:34 CST 2014
â17:27:34.299 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
i17:27:34.299 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Participating in existing transaction
ª17:27:34.300 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@36a8287
p17:27:34.300 [Test worker] DEBUG o.h.e.t.i.TransactionCoordinatorImpl - successfully registered Synchronization
o17:27:34.300 [Test worker] DEBUG org.hibernate.internal.SessionImpl - Opened session at timestamp: 13966036542
¶17:27:34.300 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@66112137
]17:27:34.300 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ17:27:34.300 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (3 still available)
ƒ17:27:34.300 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (3 still available)
í17:27:34.301 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C10909B00000011]
Ä17:27:34.301 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - no NOT_ACCESSIBLE connection enlisted in this transaction
…17:27:34.301 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - getting IN_POOL connection from an XAPool of resource jdbc/sharding with 3 connection(s) (3 still available), waiting if necessary
Ø17:27:34.301 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 - closing time: 1396603706866, now time: 1396603654301
Ω17:27:34.301 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found IN_POOL connection a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
Ó17:27:34.301 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
´17:27:34.301 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
˝17:27:34.301 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
≠17:27:34.301 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Ú17:27:34.301 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 to the accessible pool
ô17:27:34.301 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@419c6ce5 was in state IN_POOL, testing it
Ä17:27:34.301 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - no query to test connection of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5, skipping test
Ì17:27:34.301 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Õ17:27:34.301 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\17:27:34.301 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å17:27:34.302 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.302 [Test worker] DEBUG b.tm.resource.ResourceRegistrar - XAResource org.postgresql.xa.PGXAConnection@419c6ce5 does not belong to any resource of a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
ï17:27:34.302 [Test worker] DEBUG b.tm.resource.ResourceRegistrar - XAResource org.postgresql.xa.PGXAConnection@419c6ce5 belongs to a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 that itself belongs to a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
…17:27:34.302 [Test worker] DEBUG b.tm.internal.XAResourceManager - creating new branch with a Bitronix XID [737072696E672D62746D000001452C10909B00000011 : 737072696E672D62746D000001452C10909E00000012]
ø17:27:34.302 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - assigning <a Bitronix XID [737072696E672D62746D000001452C10909B00000011 : 737072696E672D62746D000001452C10909E00000012]> to <an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@419c6ce5 with XID null>
ø17:27:34.302 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - starting an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@419c6ce5 with XID a Bitronix XID [737072696E672D62746D000001452C10909B00000011 : 737072696E672D62746D000001452C10909E00000012] with NOFLAGS
»17:27:34.302 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - started an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@419c6ce5 (started) with XID a Bitronix XID [737072696E672D62746D000001452C10909B00000011 : 737072696E672D62746D000001452C10909E00000012] with NOFLAGS
‚17:27:34.302 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - putting XAResourceHolderState [an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@419c6ce5 (started) with XID a Bitronix XID [737072696E672D62746D000001452C10909B00000011 : 737072696E672D62746D000001452C10909E00000012]] on a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Õ17:27:34.302 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - GTRID [737072696E672D62746D000001452C10909B00000011] previously unknown to a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5, adding it to the resource's transactions list
|17:27:34.302 [Test worker] DEBUG org.hibernate.SQL - select * from id_global_counter where shard_id = ? and option_mode = ?
RHibernate: select * from id_global_counter where shard_id = ? and option_mode = ?
f17:27:34.302 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 0 -> shardId [1]
i17:27:34.302 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 2 -> optionMode [2]
Q17:27:34.305 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
ä17:27:34.305 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.sharding.id.model.IdGlobalCounterEntity#2]
]17:27:34.306 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ17:27:34.306 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@7e7bb44a
‰17:27:34.306 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Å17:27:34.306 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.306 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Å17:27:34.306 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.307 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
17:27:34.307 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
§17:27:34.307 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ç17:27:34.307 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
µ17:27:34.307 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
l17:27:34.307 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ17:27:34.307 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from the accessible pool
á17:27:34.307 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
∏17:27:34.307 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
¯17:27:34.307 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 to the inaccessible pool
Á17:27:34.307 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
\17:27:34.307 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
Ü17:27:34.307 [Test worker] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
ï17:27:34.307 [Test worker] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.junbo.sharding.id.model.IdGlobalCounterEntity#2]
î17:27:34.307 [Test worker] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.junbo.sharding.id.model.IdGlobalCounterEntity#2]
h17:27:34.307 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
â17:27:34.307 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
i17:27:34.307 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Participating in existing transaction
h17:27:34.308 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:34.308 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:34.308 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
ä17:27:34.308 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:34.308 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
¶17:27:34.308 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.sharding.id.model.IdGlobalCounterEntity{id=2, shardId=0, globalCounter=77, optionMode=2}
|17:27:34.308 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Changes must be flushed to space: id_global_counter
]17:27:34.309 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ17:27:34.309 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ƒ17:27:34.309 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
í17:27:34.309 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C10909B00000011]
Ö17:27:34.309 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
ô17:27:34.309 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
ï17:27:34.309 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D000001452C10909B00000011
ò17:27:34.309 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
À17:27:34.309 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ı17:27:34.309 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
π17:27:34.309 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
¸17:27:34.309 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from the inaccessible pool
ã17:27:34.309 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
¥17:27:34.309 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
â17:27:34.309 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
©17:27:34.309 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ú17:27:34.309 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 to the accessible pool
®17:27:34.309 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@419c6ce5 was in state NOT_ACCESSIBLE, no need to test it
Ì17:27:34.309 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Õ17:27:34.309 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\17:27:34.309 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å17:27:34.309 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ú17:27:34.309 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@419c6ce5 (started) with XID a Bitronix XID [737072696E672D62746D000001452C10909B00000011 : 737072696E672D62746D000001452C10909E00000012]
á17:27:34.310 [Test worker] DEBUG org.hibernate.SQL - update id_global_counter set global_count=?, option_mode=?, shard_id=? where id=?
]Hibernate: update id_global_counter set global_count=?, option_mode=?, shard_id=? where id=?
`17:27:34.310 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w17:27:34.314 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
]17:27:34.314 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ17:27:34.314 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@7e7bb44a
‰17:27:34.314 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Å17:27:34.314 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.314 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Å17:27:34.314 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.314 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
17:27:34.314 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
§17:27:34.314 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ç17:27:34.314 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
µ17:27:34.314 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
l17:27:34.314 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ17:27:34.315 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from the accessible pool
á17:27:34.315 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
∏17:27:34.315 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
¯17:27:34.315 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 to the inaccessible pool
Á17:27:34.315 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
\17:27:34.315 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
]17:27:34.315 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ17:27:34.315 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ƒ17:27:34.315 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
í17:27:34.315 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C10909B00000011]
Ö17:27:34.315 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
ô17:27:34.315 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
ï17:27:34.315 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D000001452C10909B00000011
ò17:27:34.315 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
À17:27:34.315 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ı17:27:34.315 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
π17:27:34.315 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
¸17:27:34.315 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from the inaccessible pool
ã17:27:34.315 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
¥17:27:34.315 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
â17:27:34.315 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
©17:27:34.315 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ú17:27:34.315 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 to the accessible pool
®17:27:34.315 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@419c6ce5 was in state NOT_ACCESSIBLE, no need to test it
Ì17:27:34.316 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Õ17:27:34.316 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\17:27:34.316 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å17:27:34.316 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ú17:27:34.316 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@419c6ce5 (started) with XID a Bitronix XID [737072696E672D62746D000001452C10909B00000011 : 737072696E672D62746D000001452C10909E00000012]
|17:27:34.316 [Test worker] DEBUG org.hibernate.SQL - select * from id_global_counter where shard_id = ? and option_mode = ?
RHibernate: select * from id_global_counter where shard_id = ? and option_mode = ?
f17:27:34.316 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 0 -> shardId [1]
i17:27:34.316 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 2 -> optionMode [2]
Q17:27:34.319 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
ä17:27:34.319 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.sharding.id.model.IdGlobalCounterEntity#2]
]17:27:34.319 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ17:27:34.319 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@7e7bb44a
‰17:27:34.319 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Å17:27:34.319 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.319 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Å17:27:34.319 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.319 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
17:27:34.319 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
§17:27:34.319 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ç17:27:34.319 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
µ17:27:34.320 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
l17:27:34.320 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ17:27:34.320 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from the accessible pool
á17:27:34.320 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
∏17:27:34.320 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
¯17:27:34.320 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 to the inaccessible pool
Á17:27:34.320 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
\17:27:34.320 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
h17:27:34.320 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
h17:27:34.321 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:34.321 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:34.321 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
ä17:27:34.321 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:34.321 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
¶17:27:34.321 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.sharding.id.model.IdGlobalCounterEntity{id=2, shardId=0, globalCounter=77, optionMode=2}
|17:27:34.321 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Changes must be flushed to space: id_global_counter
]17:27:34.321 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ17:27:34.322 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ƒ17:27:34.322 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
í17:27:34.322 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C10909B00000011]
Ö17:27:34.322 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
ô17:27:34.322 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
ï17:27:34.322 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D000001452C10909B00000011
ò17:27:34.322 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
À17:27:34.322 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ı17:27:34.322 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
π17:27:34.322 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
¸17:27:34.322 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from the inaccessible pool
ã17:27:34.322 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
¥17:27:34.322 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
â17:27:34.322 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
©17:27:34.322 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ú17:27:34.322 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 to the accessible pool
®17:27:34.322 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@419c6ce5 was in state NOT_ACCESSIBLE, no need to test it
Ì17:27:34.322 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Õ17:27:34.322 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\17:27:34.322 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å17:27:34.322 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ú17:27:34.322 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@419c6ce5 (started) with XID a Bitronix XID [737072696E672D62746D000001452C10909B00000011 : 737072696E672D62746D000001452C10909E00000012]
á17:27:34.323 [Test worker] DEBUG org.hibernate.SQL - update id_global_counter set global_count=?, option_mode=?, shard_id=? where id=?
]Hibernate: update id_global_counter set global_count=?, option_mode=?, shard_id=? where id=?
`17:27:34.323 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w17:27:34.325 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
]17:27:34.325 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ17:27:34.325 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@7e7bb44a
‰17:27:34.325 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Å17:27:34.325 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.325 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Å17:27:34.325 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.325 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
17:27:34.325 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
§17:27:34.325 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ç17:27:34.325 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
µ17:27:34.326 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
l17:27:34.326 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ17:27:34.326 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from the accessible pool
á17:27:34.326 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
∏17:27:34.326 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
¯17:27:34.326 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 to the inaccessible pool
Á17:27:34.326 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
\17:27:34.326 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
]17:27:34.326 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ17:27:34.326 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ƒ17:27:34.326 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
í17:27:34.326 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C10909B00000011]
Ö17:27:34.326 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
ô17:27:34.326 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
ï17:27:34.326 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D000001452C10909B00000011
ò17:27:34.326 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
À17:27:34.326 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ı17:27:34.326 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
π17:27:34.326 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
¸17:27:34.326 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from the inaccessible pool
ã17:27:34.326 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
¥17:27:34.326 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
â17:27:34.326 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
©17:27:34.326 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ú17:27:34.326 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 to the accessible pool
®17:27:34.326 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@419c6ce5 was in state NOT_ACCESSIBLE, no need to test it
Ì17:27:34.326 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Õ17:27:34.327 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\17:27:34.327 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å17:27:34.327 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ú17:27:34.327 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@419c6ce5 (started) with XID a Bitronix XID [737072696E672D62746D000001452C10909B00000011 : 737072696E672D62746D000001452C10909E00000012]
|17:27:34.327 [Test worker] DEBUG org.hibernate.SQL - select * from id_global_counter where shard_id = ? and option_mode = ?
RHibernate: select * from id_global_counter where shard_id = ? and option_mode = ?
f17:27:34.328 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 0 -> shardId [1]
i17:27:34.328 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 2 -> optionMode [2]
Q17:27:34.332 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
ä17:27:34.332 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.sharding.id.model.IdGlobalCounterEntity#2]
]17:27:34.332 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ17:27:34.333 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@7e7bb44a
‰17:27:34.333 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Å17:27:34.333 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.333 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Å17:27:34.333 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.333 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
17:27:34.333 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
§17:27:34.333 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ç17:27:34.333 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
µ17:27:34.333 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
l17:27:34.334 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ17:27:34.334 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from the accessible pool
á17:27:34.334 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
∏17:27:34.334 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
¯17:27:34.334 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 to the inaccessible pool
Á17:27:34.334 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
\17:27:34.334 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
h17:27:34.334 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
h17:27:34.334 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:34.334 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:34.335 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
ä17:27:34.335 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:34.335 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
¶17:27:34.335 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.sharding.id.model.IdGlobalCounterEntity{id=2, shardId=0, globalCounter=77, optionMode=2}
]17:27:34.335 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
Œ17:27:34.336 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ƒ17:27:34.336 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
í17:27:34.336 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C10909B00000011]
Ö17:27:34.336 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
ô17:27:34.336 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
ï17:27:34.336 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D000001452C10909B00000011
ò17:27:34.336 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
À17:27:34.336 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
ı17:27:34.336 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
π17:27:34.336 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
¸17:27:34.336 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from the inaccessible pool
ã17:27:34.336 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
¥17:27:34.336 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
â17:27:34.336 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
©17:27:34.336 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ú17:27:34.337 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 to the accessible pool
®17:27:34.337 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@419c6ce5 was in state NOT_ACCESSIBLE, no need to test it
Ì17:27:34.337 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Õ17:27:34.337 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/sharding with 3 connection(s) (2 still available)
\17:27:34.337 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Å17:27:34.337 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ú17:27:34.337 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@419c6ce5 (started) with XID a Bitronix XID [737072696E672D62746D000001452C10909B00000011 : 737072696E672D62746D000001452C10909E00000012]
|17:27:34.337 [Test worker] DEBUG org.hibernate.SQL - select * from id_global_counter where shard_id = ? and option_mode = ?
RHibernate: select * from id_global_counter where shard_id = ? and option_mode = ?
f17:27:34.337 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 0 -> shardId [1]
i17:27:34.337 [Test worker] DEBUG org.hibernate.loader.Loader - bindNamedParameters() 2 -> optionMode [2]
Q17:27:34.339 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
ä17:27:34.340 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.sharding.id.model.IdGlobalCounterEntity#2]
]17:27:34.340 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
ÿ17:27:34.340 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@7e7bb44a
‰17:27:34.340 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Å17:27:34.340 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.340 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Å17:27:34.340 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
à17:27:34.340 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
17:27:34.340 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
§17:27:34.340 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ç17:27:34.340 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
µ17:27:34.341 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
l17:27:34.341 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
ˆ17:27:34.341 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from the accessible pool
á17:27:34.341 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
∏17:27:34.341 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
¯17:27:34.341 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 to the inaccessible pool
Á17:27:34.341 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
\17:27:34.341 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
h17:27:34.341 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
a17:27:34.341 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Initiating transaction commit
˘17:27:34.341 [Test worker] DEBUG b.tm.BitronixTransactionManager - committing transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
â17:27:34.341 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - cancelling transaction timeout task on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Û17:27:34.341 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - removing task by a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
“17:27:34.341 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - cancelled a TransactionTimeoutTask on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014) scheduled for Fri Apr 04 17:28:34 CST 2014, total task(s) still queued: 4
v17:27:34.341 [Test worker] DEBUG bitronix.tm.BitronixTransaction - before completion, 4 synchronization(s) to execute
î17:27:34.341 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a DeferredReleaseSynchronization of a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
û17:27:34.341 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a ClearContextSynchronization for a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
π17:27:34.341 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@36a8287
h17:27:34.341 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:34.341 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:34.342 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
ä17:27:34.342 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:34.342 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
¶17:27:34.342 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.sharding.id.model.IdGlobalCounterEntity{id=2, shardId=0, globalCounter=77, optionMode=2}
]17:27:34.342 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
§17:27:34.342 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@66112137
“17:27:34.342 [Test worker] DEBUG bitronix.tm.BitronixTransaction - found unclosed resource to delist: an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@419c6ce5 (started) with XID a Bitronix XID [737072696E672D62746D000001452C10909B00000011 : 737072696E672D62746D000001452C10909E00000012]
¬17:27:34.342 [Test worker] DEBUG b.tm.internal.XAResourceManager - delisting resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@419c6ce5 (started) with XID a Bitronix XID [737072696E672D62746D000001452C10909B00000011 : 737072696E672D62746D000001452C10909E00000012]
«17:27:34.342 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ending an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@419c6ce5 (started) with XID a Bitronix XID [737072696E672D62746D000001452C10909B00000011 : 737072696E672D62746D000001452C10909E00000012] with SUCCESS
∆17:27:34.342 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ended an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@419c6ce5 (started) with XID a Bitronix XID [737072696E672D62746D000001452C10909B00000011 : 737072696E672D62746D000001452C10909E00000012] with SUCCESS
f17:27:34.342 [Test worker] DEBUG bitronix.tm.BitronixTransaction - committing, 1 enlisted resource(s)
l17:27:34.342 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to PREPARING
ï17:27:34.342 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from ACTIVE to PREPARING - executing 0 listener(s)
k17:27:34.342 [Test worker] DEBUG bitronix.tm.twopc.Preparer - 1 resource enlisted, no prepare needed (1PC)
k17:27:34.342 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to PREPARED
ó17:27:34.342 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from PREPARING to PREPARED - executing 0 listener(s)
\17:27:34.342 [Test worker] DEBUG bitronix.tm.BitronixTransaction - 1 interested resource(s)
m17:27:34.342 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to COMMITTING
ò17:27:34.342 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from PREPARED to COMMITTING - executing 0 listener(s)
ó17:27:34.342 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - executing phase on 1 resource(s) enlisted in 1 position(s) in reverse position order
d17:27:34.343 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - running 1 job(s) for position '1'
€17:27:34.343 [Test worker] DEBUG bitronix.tm.twopc.Committer - committing resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@419c6ce5 (ended) with XID a Bitronix XID [737072696E672D62746D000001452C10909B00000011 : 737072696E672D62746D000001452C10909E00000012] (with one-phase optimization)
º17:27:34.348 [Test worker] DEBUG bitronix.tm.twopc.Committer - committed resource an XAResourceHolderState with uniqueName=jdbc/sharding XAResource=org.postgresql.xa.PGXAConnection@419c6ce5 (ended) with XID a Bitronix XID [737072696E672D62746D000001452C10909B00000011 : 737072696E672D62746D000001452C10909E00000012]
e17:27:34.348 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - phase executed with 0 exception(s)
`17:27:34.348 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - ran 1 job(s) for position '1'
t17:27:34.348 [Test worker] DEBUG bitronix.tm.twopc.Committer - phase 2 commit executed on resources [jdbc/sharding]
u17:27:34.348 [Test worker] DEBUG bitronix.tm.twopc.Committer - phase 2 commit succeeded on resources [jdbc/sharding]
l17:27:34.348 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to COMMITTED
ô17:27:34.348 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from COMMITTING to COMMITTED - executing 0 listener(s)
¸17:27:34.348 [Test worker] DEBUG bitronix.tm.BitronixTransaction - successfully committed a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=COMMITTED, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
u17:27:34.348 [Test worker] DEBUG b.tm.internal.XAResourceManager - clearing XAResourceHolder states on 1 resource(s)
Ô17:27:34.348 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - removing XAResourceHolderState of xid a Bitronix XID [737072696E672D62746D000001452C10909B00000011 : 737072696E672D62746D000001452C10909E00000012] from a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
∫17:27:34.348 [Test worker] DEBUG b.tm.internal.XAResourceManager - resource a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 cleaned up all transaction states for GTRID [737072696E672D62746D000001452C10909B00000011]
u17:27:34.348 [Test worker] DEBUG bitronix.tm.BitronixTransaction - after completion, 4 synchronization(s) to execute
œ17:27:34.348 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@36a8287 with status=COMMITTED
j17:27:34.348 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Aggressively releasing JDBC connection
m17:27:34.348 [Test worker] DEBUG o.h.e.j.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
∫17:27:34.348 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@66112137 with status=COMMITTED
∑17:27:34.349 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a ClearContextSynchronization for a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014) with status=COMMITTED
“17:27:34.349 [Test worker] DEBUG b.tm.BitronixTransactionManager - clearing transaction from thread context: a ThreadContext (1165822536) with transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014), default timeout 60s
ó17:27:34.349 [Test worker] DEBUG b.tm.BitronixTransactionManager - removing transaction from in-flight transactions: a Bitronix Transaction with GTRID [737072696E672D62746D000001452C10909B00000011], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
™17:27:34.349 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a DeferredReleaseSynchronization of a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 with status=COMMITTED
Ü17:27:34.349 [Test worker] DEBUG b.t.r.c.DeferredReleaseSynchronization - DeferredReleaseSynchronization requeuing a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
∂17:27:34.349 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
l17:27:34.349 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
¸17:27:34.349 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 from the inaccessible pool
à17:27:34.349 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/sharding in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Æ17:27:34.349 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
Ó17:27:34.349 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5 to the available pool
˛17:27:34.349 [Test worker] DEBUG b.t.r.c.DeferredReleaseSynchronization - DeferredReleaseSynchronization requeued a JdbcPooledConnection from datasource jdbc/sharding in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@419c6ce5
à17:27:34.349 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Resuming suspended transaction after completion of inner transaction
Î17:27:34.350 [Test worker] DEBUG b.tm.BitronixTransactionManager - resuming a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
∑17:27:34.350 [Test worker] DEBUG b.tm.internal.XAResourceManager - resuming an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (ended) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
^17:27:34.350 [Test worker] DEBUG b.tm.internal.XAResourceManager - re-enlisting 1 resource(s)
‘17:27:34.350 [Test worker] DEBUG b.tm.internal.XAResourceManager - re-enlisting resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 with XID null
Ó17:27:34.350 [Test worker] DEBUG b.tm.internal.XAResourceManager - resource already enlisted but has been ended eligible for join: an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (ended) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
∆17:27:34.350 [Test worker] DEBUG b.tm.internal.XAResourceManager - checking joinability of an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 with XID null with an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (ended) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
Z17:27:34.350 [Test worker] DEBUG b.tm.internal.XAResourceManager - resources are joinable
∂17:27:34.350 [Test worker] DEBUG b.tm.internal.XAResourceManager - joining an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 with XID null with an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (ended) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
¿17:27:34.350 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - assigning <a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]> to <an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 with XID null>
Ω17:27:34.350 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - starting an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010] with JOIN
∆17:27:34.350 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - started an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010] with JOIN
Ë17:27:34.351 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - putting XAResourceHolderState [an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]] on a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
–17:27:34.351 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - GTRID [737072696E672D62746D000001452C108EFE0000000D] previously known to a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16, adding it to the resource's transactions list
æ17:27:34.351 [Test worker] DEBUG bitronix.tm.internal.ThreadContext - assigning <a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)> to <a ThreadContext (1165822536) with transaction null, default timeout 60s>
ë17:27:34.352 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1291862016, using strategy: org.hibernate.id.Assigned
ú17:27:34.359 [Test worker] DEBUG c.j.o.d.r.impl.OrderRepositoryImpl - name=Save_List_Fields, fieldName=orderItems, numCreated=1, numUpdated=0, numDeleted=0
h17:27:34.364 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:34.364 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:34.364 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
ä17:27:34.364 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:34.364 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
ﬁ17:27:34.364 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderEntity{shippingAddressId=1396603653894, trackingUuid=25e7d904-b99f-44bb-8e4d-4fa11236ff8f, honoredTime=Fri Apr 04 17:27:33 CST 2014, shippingMethodId=1396603653895, currency=USD, updatedBy=dev, totalShippingFee=10.0, isTaxInclusive=false, orderTypeId=PAY_IN, userId=1396603653892, originalOrderId=null, totalAmount=50.0, updatedTime=Fri Apr 04 17:27:34 CST 2014, orderId=50348032, totalPreorderAmount=null, totalDiscount=10.0, createdTime=Fri Apr 04 17:27:34 CST 2014, orderStatusId=OPEN, properties=null, totalShippingFeeDiscount=0, country=US, createdBy=dev, totalPreorderTax=null, tentative=true, totalTax=2.00, honorUntilTime=null}
Ù17:27:34.364 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderItemEntity{totalPreorderAmount=null, shippingAddressId=null, productItemId=1396603653890, totalDiscount=10.0, orderItemId=1291862016, createdTime=Fri Apr 04 17:27:34 CST 2014, unitPrice=60.0, honoredTime=Fri Apr 04 17:27:33 CST 2014, properties=null, isTaxExempted=false, orderItemType=DIGITAL, shippingMethodId=null, deleted=false, updatedBy=dev, createdBy=dev, federatedId=null, totalAmount=50.0, totalPreorderTax=null, quantity=1, totalTax=1.00, honorUntilTime=null, updatedTime=Fri Apr 04 17:27:34 CST 2014, orderId=50348032}
]17:27:34.365 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
œ17:27:34.365 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
≈17:27:34.365 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
í17:27:34.365 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C108EFE0000000D]
Ü17:27:34.365 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
ö17:27:34.365 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
ï17:27:34.365 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D000001452C108EFE0000000D
ò17:27:34.365 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
Õ17:27:34.365 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
ˆ17:27:34.365 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
∫17:27:34.365 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
˝17:27:34.365 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 from the inaccessible pool
å17:27:34.365 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
µ17:27:34.365 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
ä17:27:34.365 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
™17:27:34.365 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:34.365 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the accessible pool
®17:27:34.365 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@555afe16 was in state NOT_ACCESSIBLE, no need to test it
Ó17:27:34.365 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Œ17:27:34.365 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
\17:27:34.365 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Ç17:27:34.365 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:34.366 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
È17:27:34.366 [Test worker] DEBUG org.hibernate.SQL - select this_.ORDER_ITEM_DISCOUNT_INFO_ID as ORDER1_1_0_, this_.CREATED_BY as CREATED2_1_0_, this_.CREATED_TIME as CREATED3_1_0_, this_.UPDATED_BY as UPDATED4_1_0_, this_.UPDATED_TIME as UPDATED5_1_0_, this_.IS_DELETED as IS6_1_0_, this_.COUPON as COUPON1_0_, this_.DISCOUNT_AMOUNT as DISCOUNT8_1_0_, this_.DISCOUNT_RATE as DISCOUNT9_1_0_, this_.DISCOUNT_TYPE as DISCOUNT10_1_0_, this_.ORDER_ID as ORDER11_1_0_, this_.ORDER_ITEM_ID as ORDER12_1_0_, this_.PROMOTION_ID as PROMOTION13_1_0_ from ORDER_DISCOUNT_INFO this_ where this_.ORDER_ID=? and this_.IS_DELETED=?
øHibernate: select this_.ORDER_ITEM_DISCOUNT_INFO_ID as ORDER1_1_0_, this_.CREATED_BY as CREATED2_1_0_, this_.CREATED_TIME as CREATED3_1_0_, this_.UPDATED_BY as UPDATED4_1_0_, this_.UPDATED_TIME as UPDATED5_1_0_, this_.IS_DELETED as IS6_1_0_, this_.COUPON as COUPON1_0_, this_.DISCOUNT_AMOUNT as DISCOUNT8_1_0_, this_.DISCOUNT_RATE as DISCOUNT9_1_0_, this_.DISCOUNT_TYPE as DISCOUNT10_1_0_, this_.ORDER_ID as ORDER11_1_0_, this_.ORDER_ITEM_ID as ORDER12_1_0_, this_.PROMOTION_ID as PROMOTION13_1_0_ from ORDER_DISCOUNT_INFO this_ where this_.ORDER_ID=? and this_.IS_DELETED=?
]17:27:34.369 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
Ÿ17:27:34.369 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@10805ac7
Â17:27:34.369 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ç17:27:34.369 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:34.369 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ç17:27:34.369 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:34.369 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ò17:27:34.369 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
•17:27:34.369 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
É17:27:34.369 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
∂17:27:34.369 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
l17:27:34.369 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
˜17:27:34.369 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from the accessible pool
à17:27:34.369 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
π17:27:34.369 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
˘17:27:34.369 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the inaccessible pool
Ë17:27:34.369 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
\17:27:34.369 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
h17:27:34.369 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
ë17:27:34.371 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1291878400, using strategy: org.hibernate.id.Assigned
ë17:27:34.372 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 1291894784, using strategy: org.hibernate.id.Assigned
õ17:27:34.372 [Test worker] DEBUG c.j.o.d.r.impl.OrderRepositoryImpl - name=Save_List_Fields, fieldName=discounts, numCreated=2, numUpdated=0, numDeleted=0
h17:27:34.373 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:34.373 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:34.373 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
ä17:27:34.373 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:34.373 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
ﬁ17:27:34.374 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderEntity{shippingAddressId=1396603653894, trackingUuid=25e7d904-b99f-44bb-8e4d-4fa11236ff8f, honoredTime=Fri Apr 04 17:27:33 CST 2014, shippingMethodId=1396603653895, currency=USD, updatedBy=dev, totalShippingFee=10.0, isTaxInclusive=false, orderTypeId=PAY_IN, userId=1396603653892, originalOrderId=null, totalAmount=50.0, updatedTime=Fri Apr 04 17:27:34 CST 2014, orderId=50348032, totalPreorderAmount=null, totalDiscount=10.0, createdTime=Fri Apr 04 17:27:34 CST 2014, orderStatusId=OPEN, properties=null, totalShippingFeeDiscount=0, country=US, createdBy=dev, totalPreorderTax=null, tentative=true, totalTax=2.00, honorUntilTime=null}
ü17:27:34.374 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderDiscountInfoEntity{promotionId=null, discountType=OFFER_DISCOUNT, createdBy=dev, orderItemId=1291862016, createdTime=Fri Apr 04 17:27:34 CST 2014, discountInfoId=1291894784, discountRate=null, discountAmount=10.0, coupon=null, deleted=false, orderId=50348032, updatedTime=Fri Apr 04 17:27:34 CST 2014, updatedBy=dev}
°17:27:34.374 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderDiscountInfoEntity{promotionId=1396603650918, discountType=ORDER_DISCOUNT, createdBy=dev, orderItemId=null, createdTime=Fri Apr 04 17:27:34 CST 2014, discountInfoId=1291878400, discountRate=null, discountAmount=10.0, coupon=AAA, deleted=false, orderId=50348032, updatedTime=Fri Apr 04 17:27:34 CST 2014, updatedBy=dev}
Ù17:27:34.374 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderItemEntity{totalPreorderAmount=null, shippingAddressId=null, productItemId=1396603653890, totalDiscount=10.0, orderItemId=1291862016, createdTime=Fri Apr 04 17:27:34 CST 2014, unitPrice=60.0, honoredTime=Fri Apr 04 17:27:33 CST 2014, properties=null, isTaxExempted=false, orderItemType=DIGITAL, shippingMethodId=null, deleted=false, updatedBy=dev, createdBy=dev, federatedId=null, totalAmount=50.0, totalPreorderTax=null, quantity=1, totalTax=1.00, honorUntilTime=null, updatedTime=Fri Apr 04 17:27:34 CST 2014, orderId=50348032}
]17:27:34.374 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
œ17:27:34.374 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
≈17:27:34.374 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
í17:27:34.374 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C108EFE0000000D]
Ü17:27:34.374 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
ö17:27:34.374 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
ï17:27:34.374 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D000001452C108EFE0000000D
ò17:27:34.374 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
Õ17:27:34.374 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
ˆ17:27:34.374 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
∫17:27:34.374 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
˝17:27:34.374 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 from the inaccessible pool
å17:27:34.375 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
µ17:27:34.375 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
ä17:27:34.375 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
™17:27:34.375 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:34.375 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the accessible pool
®17:27:34.375 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@555afe16 was in state NOT_ACCESSIBLE, no need to test it
Ó17:27:34.375 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Œ17:27:34.375 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
\17:27:34.375 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Ç17:27:34.375 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:34.375 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
ﬂ17:27:34.375 [Test worker] DEBUG org.hibernate.SQL - select this_.ORDER_PAYMENT_INFO_ID as ORDER1_10_0_, this_.CREATED_BY as CREATED2_10_0_, this_.CREATED_TIME as CREATED3_10_0_, this_.UPDATED_BY as UPDATED4_10_0_, this_.UPDATED_TIME as UPDATED5_10_0_, this_.IS_DELETED as IS6_10_0_, this_.ORDER_ID as ORDER7_10_0_, this_.PAYMENT_METHOD_ID as PAYMENT8_10_0_, this_.PAYMENT_METHOD_TYPE as PAYMENT9_10_0_ from ORDER_PAYMENT_INFO this_ where this_.ORDER_ID=? and this_.IS_DELETED=?
µHibernate: select this_.ORDER_PAYMENT_INFO_ID as ORDER1_10_0_, this_.CREATED_BY as CREATED2_10_0_, this_.CREATED_TIME as CREATED3_10_0_, this_.UPDATED_BY as UPDATED4_10_0_, this_.UPDATED_TIME as UPDATED5_10_0_, this_.IS_DELETED as IS6_10_0_, this_.ORDER_ID as ORDER7_10_0_, this_.PAYMENT_METHOD_ID as PAYMENT8_10_0_, this_.PAYMENT_METHOD_TYPE as PAYMENT9_10_0_ from ORDER_PAYMENT_INFO this_ where this_.ORDER_ID=? and this_.IS_DELETED=?
]17:27:34.383 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
Ÿ17:27:34.383 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@10805ac7
Â17:27:34.383 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ç17:27:34.383 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:34.383 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ç17:27:34.383 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:34.383 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ò17:27:34.383 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
•17:27:34.383 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
É17:27:34.383 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
∂17:27:34.383 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
l17:27:34.383 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
˜17:27:34.384 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from the accessible pool
à17:27:34.384 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
π17:27:34.384 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
˘17:27:34.384 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the inaccessible pool
Ë17:27:34.384 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
\17:27:34.384 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
h17:27:34.384 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
ô17:27:34.389 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 741627597424640032, using strategy: org.hibernate.id.Assigned
§17:27:34.389 [Test worker] DEBUG c.j.o.d.r.impl.OrderRepositoryImpl - name=Save_List_Fields, fieldName=paymentInstruments, numCreated=1, numUpdated=0, numDeleted=0
Ö17:27:34.389 [Test worker] INFO  c.j.o.c.i.o.aspect.OrderEventAspect - name=Save_Order_Event_AfterReturning. action: SaveOrderAction
â17:27:34.390 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
È17:27:34.390 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Suspending current transaction, creating new transaction with name [com.junbo.order.core.impl.common.TransactionHelper$TransactionHelperImpl.executeInNewTransaction]
˘17:27:34.390 [Test worker] DEBUG b.tm.BitronixTransactionManager - suspending transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
ª17:27:34.390 [Test worker] DEBUG b.tm.internal.XAResourceManager - suspending an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
»17:27:34.390 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ending an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010] with SUCCESS
«17:27:34.390 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ended an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010] with SUCCESS
∆17:27:34.390 [Test worker] DEBUG b.tm.BitronixTransactionManager - clearing current thread context: a ThreadContext (1165822536) with transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014), default timeout 60s
_17:27:34.391 [Test worker] DEBUG b.tm.BitronixTransactionManager - beginning a new transaction
d17:27:34.391 [Test worker] DEBUG b.tm.BitronixTransactionManager - dumping 1 transaction context(s)
‚17:27:34.391 [Test worker] DEBUG b.tm.BitronixTransactionManager - a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
ñ17:27:34.391 [Test worker] DEBUG bitronix.tm.BitronixTransaction - creating new transaction with GTRID [737072696E672D62746D000001452C1090F700000013]
Æ17:27:34.391 [Test worker] DEBUG bitronix.tm.internal.ThreadContext - assigning <a Bitronix Transaction with GTRID [737072696E672D62746D000001452C1090F700000013], status=NO_TRANSACTION, 0 resource(s) enlisted (started null)> to <a ThreadContext (1165822536) with transaction null, default timeout 60s>
i17:27:34.391 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to ACTIVE
ö17:27:34.391 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from NO_TRANSACTION to ACTIVE - executing 0 listener(s)
™17:27:34.391 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - scheduling transaction timeout task on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C1090F700000013], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014) for Fri Apr 04 17:28:34 CST 2014
Û17:27:34.391 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - removing task by a Bitronix Transaction with GTRID [737072696E672D62746D000001452C1090F700000013], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Ã17:27:34.391 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - scheduled a TransactionTimeoutTask on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C1090F700000013], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014) scheduled for Fri Apr 04 17:28:34 CST 2014, total task(s) queued: 5
y17:27:34.391 [Test worker] DEBUG b.tm.BitronixTransactionManager - begun new transaction at Fri Apr 04 17:27:34 CST 2014
≥17:27:34.391 [Test worker] INFO  c.j.o.d.r.impl.OrderRepositoryImpl - name=Create_Order_Event, event: MOCK_RATE_ORDER,50348032,RATE,COMPLETED,25e7d904-b99f-44bb-8e4d-4fa11236ff8f
ª17:27:34.391 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@265fd80
p17:27:34.391 [Test worker] DEBUG o.h.e.t.i.TransactionCoordinatorImpl - successfully registered Synchronization
o17:27:34.392 [Test worker] DEBUG org.hibernate.internal.SessionImpl - Opened session at timestamp: 13966036543
¶17:27:34.392 [Test worker] DEBUG bitronix.tm.BitronixTransaction - registering synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@75e5dfba
ô17:27:34.392 [Test worker] DEBUG o.h.e.i.AbstractSaveEventListener - Generated identifier: 741627597424641032, using strategy: org.hibernate.id.Assigned
a17:27:34.392 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Initiating transaction commit
˘17:27:34.392 [Test worker] DEBUG b.tm.BitronixTransactionManager - committing transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C1090F700000013], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
â17:27:34.392 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - cancelling transaction timeout task on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C1090F700000013], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
Û17:27:34.392 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - removing task by a Bitronix Transaction with GTRID [737072696E672D62746D000001452C1090F700000013], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
“17:27:34.392 [Test worker] DEBUG bitronix.tm.timer.TaskScheduler - cancelled a TransactionTimeoutTask on a Bitronix Transaction with GTRID [737072696E672D62746D000001452C1090F700000013], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014) scheduled for Fri Apr 04 17:28:34 CST 2014, total task(s) still queued: 4
v17:27:34.392 [Test worker] DEBUG bitronix.tm.BitronixTransaction - before completion, 3 synchronization(s) to execute
û17:27:34.392 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a ClearContextSynchronization for a Bitronix Transaction with GTRID [737072696E672D62746D000001452C1090F700000013], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
π17:27:34.392 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@265fd80
h17:27:34.392 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:34.392 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:34.395 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
ä17:27:34.395 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:34.395 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
∂17:27:34.395 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderEventEntity{statusId=COMPLETED, flowType=MOCK_RATE_ORDER, createdBy=dev, eventId=741627597424641032, trackingUuid=25e7d904-b99f-44bb-8e4d-4fa11236ff8f, createdTime=Fri Apr 04 17:27:34 CST 2014, actionId=RATE, eventTrackingUuid=5394dba2-fa94-4ed2-ad04-bfb063886c04, orderId=50348032, updatedTime=Fri Apr 04 17:27:34 CST 2014, updatedBy=dev}
]17:27:34.397 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
œ17:27:34.397 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
≈17:27:34.397 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
í17:27:34.397 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C1090F700000013]
Ü17:27:34.397 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
ö17:27:34.397 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ä17:27:34.397 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - no NOT_ACCESSIBLE connection enlisted in this transaction
 17:27:34.397 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - getting IN_POOL connection from an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available), waiting if necessary
∞17:27:34.397 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - checking if connection can be closed: a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 - closing time: 1396603713641, now time: 1396603654397
ø17:27:34.397 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found IN_POOL connection a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 from an XAPool of resource jdbc/order_ds1 with 3 connection(s) (1 still available)
Ô17:27:34.397 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
¨17:27:34.398 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221
˛17:27:34.398 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221
Æ17:27:34.398 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from IN_POOL to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221
Û17:27:34.398 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221 to the accessible pool
ô17:27:34.398 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@48df8221 was in state IN_POOL, testing it
Å17:27:34.398 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - no query to test connection of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221, skipping test
Ó17:27:34.398 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221
Œ17:27:34.398 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (1 still available)
\17:27:34.398 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Ç17:27:34.398 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C1090F700000013], status=ACTIVE, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
ó17:27:34.398 [Test worker] DEBUG b.tm.resource.ResourceRegistrar - XAResource org.postgresql.xa.PGXAConnection@48df8221 belongs to a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221 that itself belongs to a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (1 still available)
…17:27:34.398 [Test worker] DEBUG b.tm.internal.XAResourceManager - creating new branch with a Bitronix XID [737072696E672D62746D000001452C1090F700000013 : 737072696E672D62746D000001452C1090FE00000014]
¿17:27:34.398 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - assigning <a Bitronix XID [737072696E672D62746D000001452C1090F700000013 : 737072696E672D62746D000001452C1090FE00000014]> to <an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@48df8221 with XID null>
¿17:27:34.398 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - starting an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@48df8221 with XID a Bitronix XID [737072696E672D62746D000001452C1090F700000013 : 737072696E672D62746D000001452C1090FE00000014] with NOFLAGS
…17:27:34.398 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - started an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@48df8221 (started) with XID a Bitronix XID [737072696E672D62746D000001452C1090F700000013 : 737072696E672D62746D000001452C1090FE00000014] with NOFLAGS
‰17:27:34.398 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - putting XAResourceHolderState [an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@48df8221 (started) with XID a Bitronix XID [737072696E672D62746D000001452C1090F700000013 : 737072696E672D62746D000001452C1090FE00000014]] on a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221
Œ17:27:34.398 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - GTRID [737072696E672D62746D000001452C1090F700000013] previously unknown to a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221, adding it to the resource's transactions list
Ñ17:27:34.399 [Test worker] DEBUG org.hibernate.SQL - insert into ORDER_EVENT (CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, ACTION_ID, EVENT_TRACKING_UUID, FLOW_NAME, ORDER_ID, STATUS_ID, TRACKING_UUID, EVENT_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
⁄Hibernate: insert into ORDER_EVENT (CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, ACTION_ID, EVENT_TRACKING_UUID, FLOW_NAME, ORDER_ID, STATUS_ID, TRACKING_UUID, EVENT_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
`17:27:34.400 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w17:27:34.402 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
]17:27:34.402 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
Ÿ17:27:34.402 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@7eae50a8
Â17:27:34.402 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@48df8221
Ç17:27:34.402 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C1090F700000013], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
â17:27:34.402 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
Ç17:27:34.402 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C1090F700000013], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
â17:27:34.402 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
Ò17:27:34.403 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
•17:27:34.403 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C1090F700000013], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
É17:27:34.403 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
∂17:27:34.403 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
l17:27:34.403 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
˜17:27:34.403 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 from the accessible pool
à17:27:34.403 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
π17:27:34.403 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
˘17:27:34.403 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 to the inaccessible pool
Ë17:27:34.404 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
\17:27:34.404 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
Ü17:27:34.404 [Test worker] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
§17:27:34.404 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@75e5dfba
”17:27:34.404 [Test worker] DEBUG bitronix.tm.BitronixTransaction - found unclosed resource to delist: an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@48df8221 (started) with XID a Bitronix XID [737072696E672D62746D000001452C1090F700000013 : 737072696E672D62746D000001452C1090FE00000014]
√17:27:34.404 [Test worker] DEBUG b.tm.internal.XAResourceManager - delisting resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@48df8221 (started) with XID a Bitronix XID [737072696E672D62746D000001452C1090F700000013 : 737072696E672D62746D000001452C1090FE00000014]
»17:27:34.404 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ending an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@48df8221 (started) with XID a Bitronix XID [737072696E672D62746D000001452C1090F700000013 : 737072696E672D62746D000001452C1090FE00000014] with SUCCESS
«17:27:34.404 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - ended an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@48df8221 (started) with XID a Bitronix XID [737072696E672D62746D000001452C1090F700000013 : 737072696E672D62746D000001452C1090FE00000014] with SUCCESS
ÿ17:27:34.404 [bitronix-async-jmx-worker] DEBUG b.tm.utils.ManagementRegistrar - Calling ManagementUnregisterCommand on object with name bitronix.tm:type=Transaction,Gtrid=737072696E672D62746D000001452C108FB90000000E
÷17:27:34.404 [bitronix-async-jmx-worker] DEBUG b.tm.utils.ManagementRegistrar - Calling ManagementRegisterCommand on object with name bitronix.tm:type=Transaction,Gtrid=737072696E672D62746D000001452C1090F700000013
f17:27:34.404 [Test worker] DEBUG bitronix.tm.BitronixTransaction - committing, 1 enlisted resource(s)
l17:27:34.404 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to PREPARING
ï17:27:34.405 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from ACTIVE to PREPARING - executing 0 listener(s)
k17:27:34.405 [Test worker] DEBUG bitronix.tm.twopc.Preparer - 1 resource enlisted, no prepare needed (1PC)
k17:27:34.405 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to PREPARED
ó17:27:34.405 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from PREPARING to PREPARED - executing 0 listener(s)
\17:27:34.405 [Test worker] DEBUG bitronix.tm.BitronixTransaction - 1 interested resource(s)
m17:27:34.405 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to COMMITTING
ò17:27:34.405 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from PREPARED to COMMITTING - executing 0 listener(s)
ó17:27:34.405 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - executing phase on 1 resource(s) enlisted in 1 position(s) in reverse position order
d17:27:34.405 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - running 1 job(s) for position '1'
‹17:27:34.405 [Test worker] DEBUG bitronix.tm.twopc.Committer - committing resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@48df8221 (ended) with XID a Bitronix XID [737072696E672D62746D000001452C1090F700000013 : 737072696E672D62746D000001452C1090FE00000014] (with one-phase optimization)
Ω17:27:34.406 [Test worker] DEBUG bitronix.tm.twopc.Committer - committed resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@48df8221 (ended) with XID a Bitronix XID [737072696E672D62746D000001452C1090F700000013 : 737072696E672D62746D000001452C1090FE00000014]
e17:27:34.406 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - phase executed with 0 exception(s)
`17:27:34.406 [Test worker] DEBUG b.tm.twopc.AbstractPhaseEngine - ran 1 job(s) for position '1'
u17:27:34.406 [Test worker] DEBUG bitronix.tm.twopc.Committer - phase 2 commit executed on resources [jdbc/order_ds1]
v17:27:34.406 [Test worker] DEBUG bitronix.tm.twopc.Committer - phase 2 commit succeeded on resources [jdbc/order_ds1]
l17:27:34.406 [Test worker] DEBUG bitronix.tm.BitronixTransaction - changing transaction status to COMMITTED
ô17:27:34.406 [Test worker] DEBUG bitronix.tm.BitronixTransaction - transaction status is changing from COMMITTING to COMMITTED - executing 0 listener(s)
¸17:27:34.406 [Test worker] DEBUG bitronix.tm.BitronixTransaction - successfully committed a Bitronix Transaction with GTRID [737072696E672D62746D000001452C1090F700000013], status=COMMITTED, 1 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
u17:27:34.406 [Test worker] DEBUG b.tm.internal.XAResourceManager - clearing XAResourceHolder states on 1 resource(s)
17:27:34.406 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - removing XAResourceHolderState of xid a Bitronix XID [737072696E672D62746D000001452C1090F700000013 : 737072696E672D62746D000001452C1090FE00000014] from a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
ª17:27:34.406 [Test worker] DEBUG b.tm.internal.XAResourceManager - resource a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 cleaned up all transaction states for GTRID [737072696E672D62746D000001452C1090F700000013]
u17:27:34.406 [Test worker] DEBUG bitronix.tm.BitronixTransaction - after completion, 4 synchronization(s) to execute
œ17:27:34.406 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.engine.transaction.synchronization.internal.RegisteredSynchronization@265fd80 with status=COMMITTED
j17:27:34.406 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Aggressively releasing JDBC connection
m17:27:34.406 [Test worker] DEBUG o.h.e.j.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
∫17:27:34.406 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization org.hibernate.context.internal.JTASessionContext$CleanupSynch@75e5dfba with status=COMMITTED
∑17:27:34.406 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a ClearContextSynchronization for a Bitronix Transaction with GTRID [737072696E672D62746D000001452C1090F700000013], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014) with status=COMMITTED
“17:27:34.407 [Test worker] DEBUG b.tm.BitronixTransactionManager - clearing transaction from thread context: a ThreadContext (1165822536) with transaction a Bitronix Transaction with GTRID [737072696E672D62746D000001452C1090F700000013], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014), default timeout 60s
ó17:27:34.407 [Test worker] DEBUG b.tm.BitronixTransactionManager - removing transaction from in-flight transactions: a Bitronix Transaction with GTRID [737072696E672D62746D000001452C1090F700000013], status=COMMITTED, 0 resource(s) enlisted (started Fri Apr 04 17:27:34 CST 2014)
´17:27:34.407 [Test worker] DEBUG bitronix.tm.BitronixTransaction - executing synchronization a DeferredReleaseSynchronization of a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 with status=COMMITTED
á17:27:34.407 [Test worker] DEBUG b.t.r.c.DeferredReleaseSynchronization - DeferredReleaseSynchronization requeuing a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
∑17:27:34.407 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
l17:27:34.407 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
˝17:27:34.407 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 from the inaccessible pool
â17:27:34.407 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
Ø17:27:34.407 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to IN_POOL in a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
Ô17:27:34.407 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221 to the available pool
ˇ17:27:34.407 [Test worker] DEBUG b.t.r.c.DeferredReleaseSynchronization - DeferredReleaseSynchronization requeued a JdbcPooledConnection from datasource jdbc/order_ds1 in state IN_POOL with usage count 0 wrapping org.postgresql.xa.PGXAConnection@48df8221
à17:27:34.407 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Resuming suspended transaction after completion of inner transaction
Î17:27:34.407 [Test worker] DEBUG b.tm.BitronixTransactionManager - resuming a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
∑17:27:34.407 [Test worker] DEBUG b.tm.internal.XAResourceManager - resuming an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (ended) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
^17:27:34.407 [Test worker] DEBUG b.tm.internal.XAResourceManager - re-enlisting 1 resource(s)
‘17:27:34.407 [Test worker] DEBUG b.tm.internal.XAResourceManager - re-enlisting resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 with XID null
Ó17:27:34.407 [Test worker] DEBUG b.tm.internal.XAResourceManager - resource already enlisted but has been ended eligible for join: an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (ended) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
∆17:27:34.407 [Test worker] DEBUG b.tm.internal.XAResourceManager - checking joinability of an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 with XID null with an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (ended) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
Z17:27:34.407 [Test worker] DEBUG b.tm.internal.XAResourceManager - resources are joinable
∂17:27:34.408 [Test worker] DEBUG b.tm.internal.XAResourceManager - joining an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 with XID null with an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (ended) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
¿17:27:34.408 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - assigning <a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]> to <an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 with XID null>
Ω17:27:34.408 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - starting an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010] with JOIN
∆17:27:34.408 [Test worker] DEBUG b.tm.internal.XAResourceHolderState - started an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010] with JOIN
Ë17:27:34.408 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - putting XAResourceHolderState [an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]] on a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
–17:27:34.408 [Test worker] DEBUG b.t.r.c.AbstractXAResourceHolder - GTRID [737072696E672D62746D000001452C108EFE0000000D] previously known to a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16, adding it to the resource's transactions list
æ17:27:34.408 [Test worker] DEBUG bitronix.tm.internal.ThreadContext - assigning <a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)> to <a ThreadContext (1165822536) with transaction null, default timeout 60s>
ã17:27:34.415 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'flow_MOCK_RATE_ORDER'
â17:27:34.449 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
i17:27:34.449 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Participating in existing transaction
h17:27:34.452 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:34.452 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:34.453 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 5 insertions, 0 updates, 0 deletions to 5 objects
ä17:27:34.453 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:34.453 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
Ô17:27:34.454 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderPaymentInfoEntity{paymentInstrumentType=CREDIT_CAR, createdBy=dev, createdTime=Fri Apr 04 17:27:34 CST 2014, orderPaymentId=741627597424640032, paymentInstrumentId=1396603653893, deleted=false, orderId=50348032, updatedTime=Fri Apr 04 17:27:34 CST 2014, updatedBy=dev}
ﬁ17:27:34.454 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderEntity{shippingAddressId=1396603653894, trackingUuid=25e7d904-b99f-44bb-8e4d-4fa11236ff8f, honoredTime=Fri Apr 04 17:27:33 CST 2014, shippingMethodId=1396603653895, currency=USD, updatedBy=dev, totalShippingFee=10.0, isTaxInclusive=false, orderTypeId=PAY_IN, userId=1396603653892, originalOrderId=null, totalAmount=50.0, updatedTime=Fri Apr 04 17:27:34 CST 2014, orderId=50348032, totalPreorderAmount=null, totalDiscount=10.0, createdTime=Fri Apr 04 17:27:34 CST 2014, orderStatusId=OPEN, properties=null, totalShippingFeeDiscount=0, country=US, createdBy=dev, totalPreorderTax=null, tentative=true, totalTax=2.00, honorUntilTime=null}
ü17:27:34.454 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderDiscountInfoEntity{promotionId=null, discountType=OFFER_DISCOUNT, createdBy=dev, orderItemId=1291862016, createdTime=Fri Apr 04 17:27:34 CST 2014, discountInfoId=1291894784, discountRate=null, discountAmount=10.0, coupon=null, deleted=false, orderId=50348032, updatedTime=Fri Apr 04 17:27:34 CST 2014, updatedBy=dev}
°17:27:34.454 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderDiscountInfoEntity{promotionId=1396603650918, discountType=ORDER_DISCOUNT, createdBy=dev, orderItemId=null, createdTime=Fri Apr 04 17:27:34 CST 2014, discountInfoId=1291878400, discountRate=null, discountAmount=10.0, coupon=AAA, deleted=false, orderId=50348032, updatedTime=Fri Apr 04 17:27:34 CST 2014, updatedBy=dev}
Ù17:27:34.454 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderItemEntity{totalPreorderAmount=null, shippingAddressId=null, productItemId=1396603653890, totalDiscount=10.0, orderItemId=1291862016, createdTime=Fri Apr 04 17:27:34 CST 2014, unitPrice=60.0, honoredTime=Fri Apr 04 17:27:33 CST 2014, properties=null, isTaxExempted=false, orderItemType=DIGITAL, shippingMethodId=null, deleted=false, updatedBy=dev, createdBy=dev, federatedId=null, totalAmount=50.0, totalPreorderTax=null, quantity=1, totalTax=1.00, honorUntilTime=null, updatedTime=Fri Apr 04 17:27:34 CST 2014, orderId=50348032}
u17:27:34.454 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Changes must be flushed to space: ORDER_ITEM
í17:27:34.461 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@619cbb1f, groups=[Ljava.lang.Class;@78c12249}, constraintType=GENERIC}.
£17:27:34.462 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@5c4a5c17, max=2147483647, groups=[Ljava.lang.Class;@15e41957}, constraintType=GENERIC}.
í17:27:34.462 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@323ba9fb, groups=[Ljava.lang.Class;@6b14b780}, constraintType=GENERIC}.
£17:27:34.463 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@71cd72e8, max=2147483647, groups=[Ljava.lang.Class;@673317b6}, constraintType=GENERIC}.
í17:27:34.463 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@4b59e2a8, groups=[Ljava.lang.Class;@7a2faa3d}, constraintType=GENERIC}.
¢17:27:34.463 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@4f51c976, max=2147483647, groups=[Ljava.lang.Class;@2818aa9}, constraintType=GENERIC}.
ë17:27:34.464 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@1cab6b8, groups=[Ljava.lang.Class;@23a1eaf3}, constraintType=GENERIC}.
£17:27:34.464 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@7179346b, max=2147483647, groups=[Ljava.lang.Class;@4c609700}, constraintType=GENERIC}.
]17:27:34.468 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
œ17:27:34.468 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
≈17:27:34.468 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
í17:27:34.468 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C108EFE0000000D]
Ü17:27:34.468 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
ö17:27:34.468 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
ï17:27:34.469 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D000001452C108EFE0000000D
ò17:27:34.469 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
Õ17:27:34.469 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
ˆ17:27:34.469 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
∫17:27:34.469 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
˝17:27:34.469 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 from the inaccessible pool
å17:27:34.469 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
µ17:27:34.469 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
ä17:27:34.469 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
™17:27:34.469 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:34.469 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the accessible pool
®17:27:34.469 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@555afe16 was in state NOT_ACCESSIBLE, no need to test it
Ó17:27:34.469 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Œ17:27:34.469 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
\17:27:34.469 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Ç17:27:34.469 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:34.469 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
π17:27:34.470 [Test worker] DEBUG org.hibernate.SQL - insert into USER_ORDER (CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, COUNTRY, CURRENCY, HONOR_UNTIL_TIME, HONORED_TIME, IS_TAX_INCLUSIVE, ORDER_STATUS_ID, ORDER_TYPE_ID, ORIGINAL_ORDER_ID, PROPERTIES, SHIPPING_ADDRESS_ID, SHIPPING_METHOD_ID, IS_TENTATIVE, TOTAL_AMOUNT, TOTAL_DISCOUNT, TOTAL_PREORDER_AMOUNT, TOTAL_PREORDER_TAX, TOTAL_SHIPPING_FEE, TOTAL_SHIPPING_FEE_DISCOUNT, TOTAL_TAX, TRACKING_UUID, USER_ID, ORDER_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
èHibernate: insert into USER_ORDER (CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, COUNTRY, CURRENCY, HONOR_UNTIL_TIME, HONORED_TIME, IS_TAX_INCLUSIVE, ORDER_STATUS_ID, ORDER_TYPE_ID, ORIGINAL_ORDER_ID, PROPERTIES, SHIPPING_ADDRESS_ID, SHIPPING_METHOD_ID, IS_TENTATIVE, TOTAL_AMOUNT, TOTAL_DISCOUNT, TOTAL_PREORDER_AMOUNT, TOTAL_PREORDER_TAX, TOTAL_SHIPPING_FEE, TOTAL_SHIPPING_FEE_DISCOUNT, TOTAL_TAX, TRACKING_UUID, USER_ID, ORDER_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
ç17:27:34.473 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@585c6d5e, groups=[Ljava.lang.Class;@1c1063a4}, constraintType=GENERIC}.
û17:27:34.474 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@77fdb260, max=2147483647, groups=[Ljava.lang.Class;@30c9fa2b}, constraintType=GENERIC}.
í17:27:34.482 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@27e1f405, groups=[Ljava.lang.Class;@635b88b7}, constraintType=GENERIC}.
°17:27:34.483 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@e6cd957, max=2147483647, groups=[Ljava.lang.Class;@c30e627}, constraintType=GENERIC}.
í17:27:34.495 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@5241a535, groups=[Ljava.lang.Class;@53c564c3}, constraintType=GENERIC}.
¢17:27:34.497 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@445a692c, max=2147483647, groups=[Ljava.lang.Class;@baeeac3}, constraintType=GENERIC}.
ë17:27:34.498 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@8b6ae33, groups=[Ljava.lang.Class;@11669abd}, constraintType=GENERIC}.
£17:27:34.498 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@6738f737, max=2147483647, groups=[Ljava.lang.Class;@4cee70d2}, constraintType=GENERIC}.
í17:27:34.499 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@3a311273, groups=[Ljava.lang.Class;@6bb259dd}, constraintType=GENERIC}.
¢17:27:34.499 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@a29f368, max=2147483647, groups=[Ljava.lang.Class;@482b360e}, constraintType=GENERIC}.
í17:27:34.513 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@75693e28, groups=[Ljava.lang.Class;@506ff050}, constraintType=GENERIC}.
¢17:27:34.514 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@650a3d71, max=2147483647, groups=[Ljava.lang.Class;@347f98a}, constraintType=GENERIC}.
í17:27:34.514 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@6a4fd4b4, groups=[Ljava.lang.Class;@1f15abf3}, constraintType=GENERIC}.
£17:27:34.514 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@47cbee76, max=2147483647, groups=[Ljava.lang.Class;@1d94a9cd}, constraintType=GENERIC}.
ë17:27:34.515 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@b17e0e7, groups=[Ljava.lang.Class;@4cae6361}, constraintType=GENERIC}.
£17:27:34.516 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@4cfe9c9b, max=2147483647, groups=[Ljava.lang.Class;@5fdbab9a}, constraintType=GENERIC}.
í17:27:34.516 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@4edf3ca0, groups=[Ljava.lang.Class;@220554d4}, constraintType=GENERIC}.
¢17:27:34.516 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@c043bbf, max=2147483647, groups=[Ljava.lang.Class;@69ee7ec2}, constraintType=GENERIC}.
`17:27:34.518 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w17:27:34.573 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
Ç17:27:34.580 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:34.581 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
Û17:27:34.581 [Test worker] DEBUG org.hibernate.SQL - insert into ORDER_ITEM (CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, IS_DELETED, FEDERATED_ID, HONOR_UNTIL_TIME, HONORED_TIME, IS_TAX_EXEMPTED, ORDER_ID, ORDER_ITEM_TYPE, PRODUCT_ITEM_ID, PROPERTIES, QUANTITY, SHIPPING_ADDRESS_ID, SHIPPING_METHOD_ID, TOTAL_AMOUNT, TOTAL_DISCOUNT, TOTAL_PREORDER_AMOUNT, TOTAL_PREORDER_TAX, TOTAL_TAX, UNIT_PRICE, ORDER_ITEM_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
…Hibernate: insert into ORDER_ITEM (CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, IS_DELETED, FEDERATED_ID, HONOR_UNTIL_TIME, HONORED_TIME, IS_TAX_EXEMPTED, ORDER_ID, ORDER_ITEM_TYPE, PRODUCT_ITEM_ID, PROPERTIES, QUANTITY, SHIPPING_ADDRESS_ID, SHIPPING_METHOD_ID, TOTAL_AMOUNT, TOTAL_DISCOUNT, TOTAL_PREORDER_AMOUNT, TOTAL_PREORDER_TAX, TOTAL_TAX, UNIT_PRICE, ORDER_ITEM_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
ë17:27:34.606 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@306bfebd, groups=[Ljava.lang.Class;@2214321}, constraintType=GENERIC}.
£17:27:34.606 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@59e9a511, max=2147483647, groups=[Ljava.lang.Class;@7a542d34}, constraintType=GENERIC}.
í17:27:34.607 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@2c63efaa, groups=[Ljava.lang.Class;@550b98aa}, constraintType=GENERIC}.
£17:27:34.607 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@2bc957f4, max=2147483647, groups=[Ljava.lang.Class;@2fad6aa1}, constraintType=GENERIC}.
í17:27:34.608 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@2233887b, groups=[Ljava.lang.Class;@654554c7}, constraintType=GENERIC}.
£17:27:34.608 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@3e2c8f9a, max=2147483647, groups=[Ljava.lang.Class;@5f87e759}, constraintType=GENERIC}.
í17:27:34.609 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@5365b50e, groups=[Ljava.lang.Class;@3a51d4e8}, constraintType=GENERIC}.
£17:27:34.609 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@346ab202, max=2147483647, groups=[Ljava.lang.Class;@48ccbc30}, constraintType=GENERIC}.
`17:27:34.611 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w17:27:34.613 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
Ç17:27:34.613 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:34.613 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
¿17:27:34.614 [Test worker] DEBUG org.hibernate.SQL - insert into ORDER_DISCOUNT_INFO (CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, IS_DELETED, COUPON, DISCOUNT_AMOUNT, DISCOUNT_RATE, DISCOUNT_TYPE, ORDER_ID, ORDER_ITEM_ID, PROMOTION_ID, ORDER_ITEM_DISCOUNT_INFO_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
ñHibernate: insert into ORDER_DISCOUNT_INFO (CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, IS_DELETED, COUPON, DISCOUNT_AMOUNT, DISCOUNT_RATE, DISCOUNT_TYPE, ORDER_ID, ORDER_ITEM_ID, PROMOTION_ID, ORDER_ITEM_DISCOUNT_INFO_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
`17:27:34.616 [Test worker] DEBUG o.h.e.j.b.internal.AbstractBatchImpl - Reusing batch statement
¿17:27:34.617 [Test worker] DEBUG org.hibernate.SQL - insert into ORDER_DISCOUNT_INFO (CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, IS_DELETED, COUPON, DISCOUNT_AMOUNT, DISCOUNT_RATE, DISCOUNT_TYPE, ORDER_ID, ORDER_ITEM_ID, PROMOTION_ID, ORDER_ITEM_DISCOUNT_INFO_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
ñHibernate: insert into ORDER_DISCOUNT_INFO (CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, IS_DELETED, COUPON, DISCOUNT_AMOUNT, DISCOUNT_RATE, DISCOUNT_TYPE, ORDER_ID, ORDER_ITEM_ID, PROMOTION_ID, ORDER_ITEM_DISCOUNT_INFO_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
ç17:27:34.618 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@47dd6408, groups=[Ljava.lang.Class;@17d26e14}, constraintType=GENERIC}.
û17:27:34.618 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@2cc00afc, max=2147483647, groups=[Ljava.lang.Class;@74113d57}, constraintType=GENERIC}.
ç17:27:34.620 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@23731f7a, groups=[Ljava.lang.Class;@5b1794c4}, constraintType=GENERIC}.
û17:27:34.620 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@4d331f91, max=2147483647, groups=[Ljava.lang.Class;@575d902f}, constraintType=GENERIC}.
í17:27:34.622 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@13d69f4d, groups=[Ljava.lang.Class;@6f748267}, constraintType=GENERIC}.
£17:27:34.622 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@7b2ba954, max=2147483647, groups=[Ljava.lang.Class;@6f7a08f8}, constraintType=GENERIC}.
í17:27:34.623 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@3cea11e9, groups=[Ljava.lang.Class;@2b3df73d}, constraintType=GENERIC}.
£17:27:34.623 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@33b7a9c5, max=2147483647, groups=[Ljava.lang.Class;@5eeadf09}, constraintType=GENERIC}.
í17:27:34.624 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@7be2b1ae, groups=[Ljava.lang.Class;@5fff560c}, constraintType=GENERIC}.
£17:27:34.624 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@72702924, max=2147483647, groups=[Ljava.lang.Class;@219d352e}, constraintType=GENERIC}.
í17:27:34.625 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, payload=[Ljava.lang.Class;@7739a923, groups=[Ljava.lang.Class;@6a8f75fb}, constraintType=GENERIC}.
£17:27:34.625 [Test worker] DEBUG o.h.v.i.m.d.ConstraintDescriptorImpl - Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=METHOD, definedOn=DEFINED_IN_HIERARCHY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.Size.message}, min=1, payload=[Ljava.lang.Class;@708ae864, max=2147483647, groups=[Ljava.lang.Class;@2f9f36f5}, constraintType=GENERIC}.
`17:27:34.629 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 2
w17:27:34.634 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
Ç17:27:34.634 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:34.634 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
Å17:27:34.634 [Test worker] DEBUG org.hibernate.SQL - insert into ORDER_PAYMENT_INFO (CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, IS_DELETED, ORDER_ID, PAYMENT_METHOD_ID, PAYMENT_METHOD_TYPE, ORDER_PAYMENT_INFO_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
◊Hibernate: insert into ORDER_PAYMENT_INFO (CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME, IS_DELETED, ORDER_ID, PAYMENT_METHOD_ID, PAYMENT_METHOD_TYPE, ORDER_PAYMENT_INFO_ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
`17:27:34.636 [Test worker] DEBUG o.h.e.j.batch.internal.BatchingBatch - Executing batch size: 1
w17:27:34.639 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Skipping aggressive release due to manual disabling
]17:27:34.639 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
Ÿ17:27:34.639 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@10805ac7
Â17:27:34.639 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ç17:27:34.639 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:34.639 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ç17:27:34.639 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:34.639 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ò17:27:34.639 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
•17:27:34.639 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
É17:27:34.639 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
∂17:27:34.639 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
l17:27:34.639 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
˜17:27:34.640 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from the accessible pool
à17:27:34.640 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
π17:27:34.640 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
˘17:27:34.640 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the inaccessible pool
Ë17:27:34.640 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
\17:27:34.640 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
]17:27:34.640 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
œ17:27:34.640 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
≈17:27:34.640 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
í17:27:34.640 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C108EFE0000000D]
Ü17:27:34.640 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
ö17:27:34.640 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
ï17:27:34.640 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D000001452C108EFE0000000D
ò17:27:34.640 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
Õ17:27:34.640 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
ˆ17:27:34.640 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
∫17:27:34.640 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
˝17:27:34.640 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 from the inaccessible pool
å17:27:34.640 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
µ17:27:34.640 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
ä17:27:34.640 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
™17:27:34.640 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:34.640 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the accessible pool
®17:27:34.640 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@555afe16 was in state NOT_ACCESSIBLE, no need to test it
Ó17:27:34.641 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Œ17:27:34.641 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
\17:27:34.641 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Ç17:27:34.641 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:34.641 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
⁄17:27:34.641 [Test worker] DEBUG org.hibernate.SQL - select this_.ORDER_ITEM_ID as ORDER1_4_0_, this_.CREATED_BY as CREATED2_4_0_, this_.CREATED_TIME as CREATED3_4_0_, this_.UPDATED_BY as UPDATED4_4_0_, this_.UPDATED_TIME as UPDATED5_4_0_, this_.IS_DELETED as IS6_4_0_, this_.FEDERATED_ID as FEDERATED7_4_0_, this_.HONOR_UNTIL_TIME as HONOR8_4_0_, this_.HONORED_TIME as HONORED9_4_0_, this_.IS_TAX_EXEMPTED as IS10_4_0_, this_.ORDER_ID as ORDER11_4_0_, this_.ORDER_ITEM_TYPE as ORDER12_4_0_, this_.PRODUCT_ITEM_ID as PRODUCT13_4_0_, this_.PROPERTIES as PROPERTIES4_0_, this_.QUANTITY as QUANTITY4_0_, this_.SHIPPING_ADDRESS_ID as SHIPPING16_4_0_, this_.SHIPPING_METHOD_ID as SHIPPING17_4_0_, this_.TOTAL_AMOUNT as TOTAL18_4_0_, this_.TOTAL_DISCOUNT as TOTAL19_4_0_, this_.TOTAL_PREORDER_AMOUNT as TOTAL20_4_0_, this_.TOTAL_PREORDER_TAX as TOTAL21_4_0_, this_.TOTAL_TAX as TOTAL22_4_0_, this_.UNIT_PRICE as UNIT23_4_0_ from ORDER_ITEM this_ where this_.ORDER_ID=? and this_.IS_DELETED=?
∞Hibernate: select this_.ORDER_ITEM_ID as ORDER1_4_0_, this_.CREATED_BY as CREATED2_4_0_, this_.CREATED_TIME as CREATED3_4_0_, this_.UPDATED_BY as UPDATED4_4_0_, this_.UPDATED_TIME as UPDATED5_4_0_, this_.IS_DELETED as IS6_4_0_, this_.FEDERATED_ID as FEDERATED7_4_0_, this_.HONOR_UNTIL_TIME as HONOR8_4_0_, this_.HONORED_TIME as HONORED9_4_0_, this_.IS_TAX_EXEMPTED as IS10_4_0_, this_.ORDER_ID as ORDER11_4_0_, this_.ORDER_ITEM_TYPE as ORDER12_4_0_, this_.PRODUCT_ITEM_ID as PRODUCT13_4_0_, this_.PROPERTIES as PROPERTIES4_0_, this_.QUANTITY as QUANTITY4_0_, this_.SHIPPING_ADDRESS_ID as SHIPPING16_4_0_, this_.SHIPPING_METHOD_ID as SHIPPING17_4_0_, this_.TOTAL_AMOUNT as TOTAL18_4_0_, this_.TOTAL_DISCOUNT as TOTAL19_4_0_, this_.TOTAL_PREORDER_AMOUNT as TOTAL20_4_0_, this_.TOTAL_PREORDER_TAX as TOTAL21_4_0_, this_.TOTAL_TAX as TOTAL22_4_0_, this_.UNIT_PRICE as UNIT23_4_0_ from ORDER_ITEM this_ where this_.ORDER_ID=? and this_.IS_DELETED=?
Q17:27:34.652 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
ã17:27:34.652 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.order.db.entity.OrderItemEntity#1291862016]
]17:27:34.652 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
Ÿ17:27:34.653 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@10805ac7
Â17:27:34.653 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ç17:27:34.653 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:34.653 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ç17:27:34.653 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:34.653 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ò17:27:34.653 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
•17:27:34.653 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
É17:27:34.653 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
∂17:27:34.653 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
l17:27:34.653 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
˜17:27:34.653 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from the accessible pool
à17:27:34.653 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
π17:27:34.653 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
˘17:27:34.653 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the inaccessible pool
Ë17:27:34.653 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
\17:27:34.653 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
h17:27:34.653 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
ÿ17:27:34.655 [bitronix-async-jmx-worker] DEBUG b.tm.utils.ManagementRegistrar - Calling ManagementUnregisterCommand on object with name bitronix.tm:type=Transaction,Gtrid=737072696E672D62746D000001452C1090F700000013
h17:27:34.656 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:34.656 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:34.656 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
ä17:27:34.657 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:34.657 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
Ô17:27:34.657 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderPaymentInfoEntity{paymentInstrumentType=CREDIT_CAR, createdBy=dev, createdTime=Fri Apr 04 17:27:34 CST 2014, orderPaymentId=741627597424640032, paymentInstrumentId=1396603653893, deleted=false, orderId=50348032, updatedTime=Fri Apr 04 17:27:34 CST 2014, updatedBy=dev}
ﬁ17:27:34.657 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderEntity{shippingAddressId=1396603653894, trackingUuid=25e7d904-b99f-44bb-8e4d-4fa11236ff8f, honoredTime=Fri Apr 04 17:27:33 CST 2014, shippingMethodId=1396603653895, currency=USD, updatedBy=dev, totalShippingFee=10.0, isTaxInclusive=false, orderTypeId=PAY_IN, userId=1396603653892, originalOrderId=null, totalAmount=50.0, updatedTime=Fri Apr 04 17:27:34 CST 2014, orderId=50348032, totalPreorderAmount=null, totalDiscount=10.0, createdTime=Fri Apr 04 17:27:34 CST 2014, orderStatusId=OPEN, properties=null, totalShippingFeeDiscount=0, country=US, createdBy=dev, totalPreorderTax=null, tentative=true, totalTax=2.00, honorUntilTime=null}
ü17:27:34.657 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderDiscountInfoEntity{promotionId=null, discountType=OFFER_DISCOUNT, createdBy=dev, orderItemId=1291862016, createdTime=Fri Apr 04 17:27:34 CST 2014, discountInfoId=1291894784, discountRate=null, discountAmount=10.0, coupon=null, deleted=false, orderId=50348032, updatedTime=Fri Apr 04 17:27:34 CST 2014, updatedBy=dev}
°17:27:34.658 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderDiscountInfoEntity{promotionId=1396603650918, discountType=ORDER_DISCOUNT, createdBy=dev, orderItemId=null, createdTime=Fri Apr 04 17:27:34 CST 2014, discountInfoId=1291878400, discountRate=null, discountAmount=10.0, coupon=AAA, deleted=false, orderId=50348032, updatedTime=Fri Apr 04 17:27:34 CST 2014, updatedBy=dev}
Ù17:27:34.658 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderItemEntity{totalPreorderAmount=null, shippingAddressId=null, productItemId=1396603653890, totalDiscount=10.0, orderItemId=1291862016, createdTime=Fri Apr 04 17:27:34 CST 2014, unitPrice=60.0, honoredTime=Fri Apr 04 17:27:33 CST 2014, properties=null, isTaxExempted=false, orderItemType=DIGITAL, shippingMethodId=null, deleted=false, updatedBy=dev, createdBy=dev, federatedId=null, totalAmount=50.0, totalPreorderTax=null, quantity=1, totalTax=1.00, honorUntilTime=null, updatedTime=Fri Apr 04 17:27:34 CST 2014, orderId=50348032}
]17:27:34.658 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
œ17:27:34.658 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
≈17:27:34.658 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
í17:27:34.658 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C108EFE0000000D]
Ü17:27:34.658 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
ö17:27:34.658 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
ï17:27:34.658 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D000001452C108EFE0000000D
ò17:27:34.658 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
Õ17:27:34.658 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
ˆ17:27:34.658 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
∫17:27:34.658 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
˝17:27:34.658 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 from the inaccessible pool
å17:27:34.658 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
µ17:27:34.659 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
ä17:27:34.659 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
™17:27:34.659 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:34.659 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the accessible pool
®17:27:34.659 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@555afe16 was in state NOT_ACCESSIBLE, no need to test it
Ó17:27:34.659 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Œ17:27:34.659 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
\17:27:34.659 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Ç17:27:34.659 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:34.659 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
’17:27:34.659 [Test worker] DEBUG org.hibernate.SQL - select this_.ORDER_ITEM_PREORDER_INFO_ID as ORDER1_7_0_, this_.CREATED_BY as CREATED2_7_0_, this_.CREATED_TIME as CREATED3_7_0_, this_.UPDATED_BY as UPDATED4_7_0_, this_.UPDATED_TIME as UPDATED5_7_0_, this_.BILLING_TIME as BILLING6_7_0_, this_.ORDER_ITEM_ID as ORDER7_7_0_, this_.PRE_NOTIFICATION_TIME as PRE8_7_0_, this_.RELEASE_TIME as RELEASE9_7_0_ from ORDER_ITEM_PREORDER_INFO this_ where this_.ORDER_ITEM_ID=?
´Hibernate: select this_.ORDER_ITEM_PREORDER_INFO_ID as ORDER1_7_0_, this_.CREATED_BY as CREATED2_7_0_, this_.CREATED_TIME as CREATED3_7_0_, this_.UPDATED_BY as UPDATED4_7_0_, this_.UPDATED_TIME as UPDATED5_7_0_, this_.BILLING_TIME as BILLING6_7_0_, this_.ORDER_ITEM_ID as ORDER7_7_0_, this_.PRE_NOTIFICATION_TIME as PRE8_7_0_, this_.RELEASE_TIME as RELEASE9_7_0_ from ORDER_ITEM_PREORDER_INFO this_ where this_.ORDER_ITEM_ID=?
]17:27:34.666 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
Ÿ17:27:34.667 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@10805ac7
Â17:27:34.667 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ç17:27:34.667 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:34.667 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ç17:27:34.667 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:34.667 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ò17:27:34.667 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
•17:27:34.667 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
É17:27:34.667 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
∂17:27:34.667 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
l17:27:34.667 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
˜17:27:34.667 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from the accessible pool
à17:27:34.667 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
π17:27:34.667 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
˘17:27:34.667 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the inaccessible pool
Ë17:27:34.667 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
\17:27:34.667 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
h17:27:34.667 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
h17:27:34.670 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:34.670 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:34.672 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
ä17:27:34.672 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:34.672 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
Ô17:27:34.673 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderPaymentInfoEntity{paymentInstrumentType=CREDIT_CAR, createdBy=dev, createdTime=Fri Apr 04 17:27:34 CST 2014, orderPaymentId=741627597424640032, paymentInstrumentId=1396603653893, deleted=false, orderId=50348032, updatedTime=Fri Apr 04 17:27:34 CST 2014, updatedBy=dev}
ﬁ17:27:34.673 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderEntity{shippingAddressId=1396603653894, trackingUuid=25e7d904-b99f-44bb-8e4d-4fa11236ff8f, honoredTime=Fri Apr 04 17:27:33 CST 2014, shippingMethodId=1396603653895, currency=USD, updatedBy=dev, totalShippingFee=10.0, isTaxInclusive=false, orderTypeId=PAY_IN, userId=1396603653892, originalOrderId=null, totalAmount=50.0, updatedTime=Fri Apr 04 17:27:34 CST 2014, orderId=50348032, totalPreorderAmount=null, totalDiscount=10.0, createdTime=Fri Apr 04 17:27:34 CST 2014, orderStatusId=OPEN, properties=null, totalShippingFeeDiscount=0, country=US, createdBy=dev, totalPreorderTax=null, tentative=true, totalTax=2.00, honorUntilTime=null}
ü17:27:34.673 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderDiscountInfoEntity{promotionId=null, discountType=OFFER_DISCOUNT, createdBy=dev, orderItemId=1291862016, createdTime=Fri Apr 04 17:27:34 CST 2014, discountInfoId=1291894784, discountRate=null, discountAmount=10.0, coupon=null, deleted=false, orderId=50348032, updatedTime=Fri Apr 04 17:27:34 CST 2014, updatedBy=dev}
°17:27:34.673 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderDiscountInfoEntity{promotionId=1396603650918, discountType=ORDER_DISCOUNT, createdBy=dev, orderItemId=null, createdTime=Fri Apr 04 17:27:34 CST 2014, discountInfoId=1291878400, discountRate=null, discountAmount=10.0, coupon=AAA, deleted=false, orderId=50348032, updatedTime=Fri Apr 04 17:27:34 CST 2014, updatedBy=dev}
Ù17:27:34.674 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderItemEntity{totalPreorderAmount=null, shippingAddressId=null, productItemId=1396603653890, totalDiscount=10.0, orderItemId=1291862016, createdTime=Fri Apr 04 17:27:34 CST 2014, unitPrice=60.0, honoredTime=Fri Apr 04 17:27:33 CST 2014, properties=null, isTaxExempted=false, orderItemType=DIGITAL, shippingMethodId=null, deleted=false, updatedBy=dev, createdBy=dev, federatedId=null, totalAmount=50.0, totalPreorderTax=null, quantity=1, totalTax=1.00, honorUntilTime=null, updatedTime=Fri Apr 04 17:27:34 CST 2014, orderId=50348032}
]17:27:34.674 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
œ17:27:34.674 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
≈17:27:34.674 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
í17:27:34.676 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C108EFE0000000D]
Ü17:27:34.676 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
ö17:27:34.676 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
ï17:27:34.676 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D000001452C108EFE0000000D
ò17:27:34.676 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
Õ17:27:34.676 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
ˆ17:27:34.676 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
∫17:27:34.676 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
˝17:27:34.676 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 from the inaccessible pool
å17:27:34.676 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
µ17:27:34.677 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
ä17:27:34.677 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
™17:27:34.677 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:34.677 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the accessible pool
®17:27:34.677 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@555afe16 was in state NOT_ACCESSIBLE, no need to test it
Ó17:27:34.677 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Œ17:27:34.677 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
\17:27:34.677 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Ç17:27:34.677 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:34.677 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
ﬂ17:27:34.677 [Test worker] DEBUG org.hibernate.SQL - select this_.ORDER_PAYMENT_INFO_ID as ORDER1_10_0_, this_.CREATED_BY as CREATED2_10_0_, this_.CREATED_TIME as CREATED3_10_0_, this_.UPDATED_BY as UPDATED4_10_0_, this_.UPDATED_TIME as UPDATED5_10_0_, this_.IS_DELETED as IS6_10_0_, this_.ORDER_ID as ORDER7_10_0_, this_.PAYMENT_METHOD_ID as PAYMENT8_10_0_, this_.PAYMENT_METHOD_TYPE as PAYMENT9_10_0_ from ORDER_PAYMENT_INFO this_ where this_.ORDER_ID=? and this_.IS_DELETED=?
µHibernate: select this_.ORDER_PAYMENT_INFO_ID as ORDER1_10_0_, this_.CREATED_BY as CREATED2_10_0_, this_.CREATED_TIME as CREATED3_10_0_, this_.UPDATED_BY as UPDATED4_10_0_, this_.UPDATED_TIME as UPDATED5_10_0_, this_.IS_DELETED as IS6_10_0_, this_.ORDER_ID as ORDER7_10_0_, this_.PAYMENT_METHOD_ID as PAYMENT8_10_0_, this_.PAYMENT_METHOD_TYPE as PAYMENT9_10_0_ from ORDER_PAYMENT_INFO this_ where this_.ORDER_ID=? and this_.IS_DELETED=?
Q17:27:34.693 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
ö17:27:34.700 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.order.db.entity.OrderPaymentInfoEntity#741627597424640032]
]17:27:34.703 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
Ÿ17:27:34.703 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@10805ac7
Â17:27:34.703 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ç17:27:34.703 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:34.703 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ç17:27:34.703 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:34.703 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ò17:27:34.704 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
•17:27:34.706 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
É17:27:34.706 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
∂17:27:34.706 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
l17:27:34.706 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
˜17:27:34.706 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from the accessible pool
à17:27:34.706 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
π17:27:34.706 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
˘17:27:34.706 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the inaccessible pool
Ë17:27:34.706 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
\17:27:34.706 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
h17:27:34.706 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
h17:27:34.708 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:34.708 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:34.709 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
ä17:27:34.709 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:34.709 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
Ô17:27:34.709 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderPaymentInfoEntity{paymentInstrumentType=CREDIT_CAR, createdBy=dev, createdTime=Fri Apr 04 17:27:34 CST 2014, orderPaymentId=741627597424640032, paymentInstrumentId=1396603653893, deleted=false, orderId=50348032, updatedTime=Fri Apr 04 17:27:34 CST 2014, updatedBy=dev}
ﬁ17:27:34.712 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderEntity{shippingAddressId=1396603653894, trackingUuid=25e7d904-b99f-44bb-8e4d-4fa11236ff8f, honoredTime=Fri Apr 04 17:27:33 CST 2014, shippingMethodId=1396603653895, currency=USD, updatedBy=dev, totalShippingFee=10.0, isTaxInclusive=false, orderTypeId=PAY_IN, userId=1396603653892, originalOrderId=null, totalAmount=50.0, updatedTime=Fri Apr 04 17:27:34 CST 2014, orderId=50348032, totalPreorderAmount=null, totalDiscount=10.0, createdTime=Fri Apr 04 17:27:34 CST 2014, orderStatusId=OPEN, properties=null, totalShippingFeeDiscount=0, country=US, createdBy=dev, totalPreorderTax=null, tentative=true, totalTax=2.00, honorUntilTime=null}
ü17:27:34.712 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderDiscountInfoEntity{promotionId=null, discountType=OFFER_DISCOUNT, createdBy=dev, orderItemId=1291862016, createdTime=Fri Apr 04 17:27:34 CST 2014, discountInfoId=1291894784, discountRate=null, discountAmount=10.0, coupon=null, deleted=false, orderId=50348032, updatedTime=Fri Apr 04 17:27:34 CST 2014, updatedBy=dev}
°17:27:34.712 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderDiscountInfoEntity{promotionId=1396603650918, discountType=ORDER_DISCOUNT, createdBy=dev, orderItemId=null, createdTime=Fri Apr 04 17:27:34 CST 2014, discountInfoId=1291878400, discountRate=null, discountAmount=10.0, coupon=AAA, deleted=false, orderId=50348032, updatedTime=Fri Apr 04 17:27:34 CST 2014, updatedBy=dev}
Ù17:27:34.713 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderItemEntity{totalPreorderAmount=null, shippingAddressId=null, productItemId=1396603653890, totalDiscount=10.0, orderItemId=1291862016, createdTime=Fri Apr 04 17:27:34 CST 2014, unitPrice=60.0, honoredTime=Fri Apr 04 17:27:33 CST 2014, properties=null, isTaxExempted=false, orderItemType=DIGITAL, shippingMethodId=null, deleted=false, updatedBy=dev, createdBy=dev, federatedId=null, totalAmount=50.0, totalPreorderTax=null, quantity=1, totalTax=1.00, honorUntilTime=null, updatedTime=Fri Apr 04 17:27:34 CST 2014, orderId=50348032}
]17:27:34.713 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
œ17:27:34.717 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
≈17:27:34.718 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
í17:27:34.718 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C108EFE0000000D]
Ü17:27:34.718 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
ö17:27:34.718 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
ï17:27:34.718 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D000001452C108EFE0000000D
ò17:27:34.718 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
Õ17:27:34.718 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
ˆ17:27:34.719 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
∫17:27:34.719 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
˝17:27:34.719 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 from the inaccessible pool
å17:27:34.719 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
µ17:27:34.721 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
ä17:27:34.721 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
™17:27:34.721 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:34.721 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the accessible pool
®17:27:34.721 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@555afe16 was in state NOT_ACCESSIBLE, no need to test it
Ó17:27:34.721 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Œ17:27:34.721 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
\17:27:34.721 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Ç17:27:34.722 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:34.722 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
È17:27:34.722 [Test worker] DEBUG org.hibernate.SQL - select this_.ORDER_ITEM_DISCOUNT_INFO_ID as ORDER1_1_0_, this_.CREATED_BY as CREATED2_1_0_, this_.CREATED_TIME as CREATED3_1_0_, this_.UPDATED_BY as UPDATED4_1_0_, this_.UPDATED_TIME as UPDATED5_1_0_, this_.IS_DELETED as IS6_1_0_, this_.COUPON as COUPON1_0_, this_.DISCOUNT_AMOUNT as DISCOUNT8_1_0_, this_.DISCOUNT_RATE as DISCOUNT9_1_0_, this_.DISCOUNT_TYPE as DISCOUNT10_1_0_, this_.ORDER_ID as ORDER11_1_0_, this_.ORDER_ITEM_ID as ORDER12_1_0_, this_.PROMOTION_ID as PROMOTION13_1_0_ from ORDER_DISCOUNT_INFO this_ where this_.ORDER_ID=? and this_.IS_DELETED=?
øHibernate: select this_.ORDER_ITEM_DISCOUNT_INFO_ID as ORDER1_1_0_, this_.CREATED_BY as CREATED2_1_0_, this_.CREATED_TIME as CREATED3_1_0_, this_.UPDATED_BY as UPDATED4_1_0_, this_.UPDATED_TIME as UPDATED5_1_0_, this_.IS_DELETED as IS6_1_0_, this_.COUPON as COUPON1_0_, this_.DISCOUNT_AMOUNT as DISCOUNT8_1_0_, this_.DISCOUNT_RATE as DISCOUNT9_1_0_, this_.DISCOUNT_TYPE as DISCOUNT10_1_0_, this_.ORDER_ID as ORDER11_1_0_, this_.ORDER_ITEM_ID as ORDER12_1_0_, this_.PROMOTION_ID as PROMOTION13_1_0_ from ORDER_DISCOUNT_INFO this_ where this_.ORDER_ID=? and this_.IS_DELETED=?
Q17:27:34.735 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
ì17:27:34.737 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.order.db.entity.OrderDiscountInfoEntity#1291878400]
Q17:27:34.737 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 1
ì17:27:34.737 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.order.db.entity.OrderDiscountInfoEntity#1291894784]
]17:27:34.737 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
Ÿ17:27:34.737 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@10805ac7
Â17:27:34.737 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ç17:27:34.737 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:34.737 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ç17:27:34.738 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:34.738 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ò17:27:34.738 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
•17:27:34.742 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
É17:27:34.743 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
∂17:27:34.743 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
l17:27:34.743 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
˜17:27:34.743 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from the accessible pool
à17:27:34.743 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
π17:27:34.743 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
˘17:27:34.743 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the inaccessible pool
Ë17:27:34.743 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
\17:27:34.743 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
h17:27:34.743 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
â17:27:34.745 [Test worker] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
i17:27:34.745 [Test worker] DEBUG o.s.t.jta.JtaTransactionManager - Participating in existing transaction
h17:27:34.749 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
d17:27:34.749 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
Ñ17:27:34.756 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
ä17:27:34.758 [Test worker] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
U17:27:34.758 [Test worker] DEBUG o.h.internal.util.EntityPrinter - Listing entities:
Ô17:27:34.759 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderPaymentInfoEntity{paymentInstrumentType=CREDIT_CAR, createdBy=dev, createdTime=Fri Apr 04 17:27:34 CST 2014, orderPaymentId=741627597424640032, paymentInstrumentId=1396603653893, deleted=false, orderId=50348032, updatedTime=Fri Apr 04 17:27:34 CST 2014, updatedBy=dev}
ﬁ17:27:34.759 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderEntity{shippingAddressId=1396603653894, trackingUuid=25e7d904-b99f-44bb-8e4d-4fa11236ff8f, honoredTime=Fri Apr 04 17:27:33 CST 2014, shippingMethodId=1396603653895, currency=USD, updatedBy=dev, totalShippingFee=10.0, isTaxInclusive=false, orderTypeId=PAY_IN, userId=1396603653892, originalOrderId=null, totalAmount=50.0, updatedTime=Fri Apr 04 17:27:34 CST 2014, orderId=50348032, totalPreorderAmount=null, totalDiscount=10.0, createdTime=Fri Apr 04 17:27:34 CST 2014, orderStatusId=OPEN, properties=null, totalShippingFeeDiscount=0, country=US, createdBy=dev, totalPreorderTax=null, tentative=true, totalTax=2.00, honorUntilTime=null}
ü17:27:34.759 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderDiscountInfoEntity{promotionId=null, discountType=OFFER_DISCOUNT, createdBy=dev, orderItemId=1291862016, createdTime=Fri Apr 04 17:27:34 CST 2014, discountInfoId=1291894784, discountRate=null, discountAmount=10.0, coupon=null, deleted=false, orderId=50348032, updatedTime=Fri Apr 04 17:27:34 CST 2014, updatedBy=dev}
°17:27:34.759 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderDiscountInfoEntity{promotionId=1396603650918, discountType=ORDER_DISCOUNT, createdBy=dev, orderItemId=null, createdTime=Fri Apr 04 17:27:34 CST 2014, discountInfoId=1291878400, discountRate=null, discountAmount=10.0, coupon=AAA, deleted=false, orderId=50348032, updatedTime=Fri Apr 04 17:27:34 CST 2014, updatedBy=dev}
Ù17:27:34.768 [Test worker] DEBUG o.h.internal.util.EntityPrinter - com.junbo.order.db.entity.OrderItemEntity{totalPreorderAmount=null, shippingAddressId=null, productItemId=1396603653890, totalDiscount=10.0, orderItemId=1291862016, createdTime=Fri Apr 04 17:27:34 CST 2014, unitPrice=60.0, honoredTime=Fri Apr 04 17:27:33 CST 2014, properties=null, isTaxExempted=false, orderItemType=DIGITAL, shippingMethodId=null, deleted=false, updatedBy=dev, createdBy=dev, federatedId=null, totalAmount=50.0, totalPreorderTax=null, quantity=1, totalTax=1.00, honorUntilTime=null, updatedTime=Fri Apr 04 17:27:34 CST 2014, orderId=50348032}
]17:27:34.768 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
œ17:27:34.768 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquiring connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
≈17:27:34.768 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - trying to recycle a NOT_ACCESSIBLE connection of an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
í17:27:34.768 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - current transaction GTRID is [737072696E672D62746D000001452C108EFE0000000D]
Ü17:27:34.768 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found a connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
ö17:27:34.768 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - 1 xa resource(s) created by connection in NOT_ACCESSIBLE state: a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
ï17:27:34.768 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource GTRID: 737072696E672D62746D000001452C108EFE0000000D
ò17:27:34.769 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - NOT_ACCESSIBLE xa resource's GTRID matched this transaction's GTRID, recycling it
Õ17:27:34.769 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - found NOT_ACCESSIBLE connection a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
ˆ17:27:34.769 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - getting connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
∫17:27:34.769 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
˝17:27:34.769 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 from the inaccessible pool
å17:27:34.769 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
µ17:27:34.769 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from NOT_ACCESSIBLE to ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
ä17:27:34.769 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - marking a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 as recycled in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
™17:27:34.769 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 has been recycled, unregistering deferred release from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:34.769 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the accessible pool
®17:27:34.769 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - connection org.postgresql.xa.PGXAConnection@555afe16 was in state NOT_ACCESSIBLE, no need to test it
Ó17:27:34.769 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - got connection handle from a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Œ17:27:34.769 [Test worker] DEBUG b.tm.resource.jdbc.PoolingDataSource - acquired connection from a PoolingDataSource containing an XAPool of resource jdbc/order_ds1 with 3 connection(s) (2 still available)
\17:27:34.769 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
Ç17:27:34.769 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - enlisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 into a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
Û17:27:34.769 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - avoiding re-enlistment of already enlisted but not ended resource an XAResourceHolderState with uniqueName=jdbc/order_ds1 XAResource=org.postgresql.xa.PGXAConnection@555afe16 (started) with XID a Bitronix XID [737072696E672D62746D000001452C108EFE0000000D : 737072696E672D62746D000001452C10907B00000010]
à17:27:34.769 [Test worker] DEBUG org.hibernate.SQL - select this_.EVENT_ID as EVENT1_3_0_, this_.CREATED_BY as CREATED2_3_0_, this_.CREATED_TIME as CREATED3_3_0_, this_.UPDATED_BY as UPDATED4_3_0_, this_.UPDATED_TIME as UPDATED5_3_0_, this_.ACTION_ID as ACTION6_3_0_, this_.EVENT_TRACKING_UUID as EVENT7_3_0_, this_.FLOW_NAME as FLOW8_3_0_, this_.ORDER_ID as ORDER9_3_0_, this_.STATUS_ID as STATUS10_3_0_, this_.TRACKING_UUID as TRACKING11_3_0_ from ORDER_EVENT this_ where this_.ORDER_ID=? order by this_.EVENT_ID desc
ﬁHibernate: select this_.EVENT_ID as EVENT1_3_0_, this_.CREATED_BY as CREATED2_3_0_, this_.CREATED_TIME as CREATED3_3_0_, this_.UPDATED_BY as UPDATED4_3_0_, this_.UPDATED_TIME as UPDATED5_3_0_, this_.ACTION_ID as ACTION6_3_0_, this_.EVENT_TRACKING_UUID as EVENT7_3_0_, this_.FLOW_NAME as FLOW8_3_0_, this_.ORDER_ID as ORDER9_3_0_, this_.STATUS_ID as STATUS10_3_0_, this_.TRACKING_UUID as TRACKING11_3_0_ from ORDER_EVENT this_ where this_.ORDER_ID=? order by this_.EVENT_ID desc
Q17:27:34.784 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
î17:27:34.784 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.junbo.order.db.entity.OrderEventEntity#741627597424641032]
]17:27:34.788 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
Ÿ17:27:34.788 [Test worker] DEBUG b.t.r.jdbc.proxy.ConnectionJavaProxy - closing a ConnectionJavaProxy of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16 on Pooled connection wrapping physical connection org.postgresql.jdbc4.Jdbc4Connection@10805ac7
Â17:27:34.788 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - releasing to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 1 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ç17:27:34.789 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - delisting a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:34.789 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ç17:27:34.789 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - requeuing a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
â17:27:34.789 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - resource is in enlisting global transaction context: a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
Ò17:27:34.789 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - deferring release to pool of a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
•17:27:34.789 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 is not already registered for deferred release in a Bitronix Transaction with GTRID [737072696E672D62746D000001452C108EFE0000000D], status=ACTIVE, 1 resource(s) enlisted (started Fri Apr 04 17:27:33 CST 2014)
É17:27:34.789 [Test worker] DEBUG b.t.r.c.TransactionContextHelper - registering DeferredReleaseSynchronization for a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
∂17:27:34.789 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
l17:27:34.789 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - closing 0 dangling uncached statement(s)
˜17:27:34.789 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - removed a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 from the accessible pool
à17:27:34.789 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - state changing from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
π17:27:34.789 [Test worker] DEBUG b.t.r.c.AbstractXAStatefulHolder - notifying 2 stateChangeEventListener(s) about state changed from ACCESSIBLE to NOT_ACCESSIBLE in a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
˘17:27:34.789 [Test worker] DEBUG bitronix.tm.resource.common.XAPool - added a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16 to the inaccessible pool
Ë17:27:34.789 [Test worker] DEBUG b.t.r.jdbc.JdbcPooledConnection - released to pool a JdbcPooledConnection from datasource jdbc/order_ds1 in state NOT_ACCESSIBLE with usage count 0 wrapping org.postgresql.xa.PGXAConnection@555afe16
\17:27:34.789 [Test worker] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
ü17:27:34.789 [Test worker] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.junbo.order.db.entity.OrderEventEntity#741627597424641032]
û17:27:34.790 [Test worker] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.junbo.order.db.entity.OrderEventEntity#741627597424641032]
h17:27:34.790 [Test worker] DEBUG o.h.e.i.StatefulPersistenceContext - Initializing non-lazy collections
