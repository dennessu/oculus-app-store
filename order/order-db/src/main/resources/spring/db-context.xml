<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.junbo.oom.core.builtin"/>
    <context:component-scan base-package="com.junbo.order.db"/>

    <bean id="orderDataSource" class="com.junbo.sharding.pool.JunboShardMultiTenantConnectionProviderFactoryBean">
        <property name="jdbcUrls" value="${order.db.jdbcUrls}"/>

        <property name="uniqueName" value="jdbc/order"/>
        <property name="className" value="${order.db.driverClassName}"/>
        <property name="minPoolSize" value="${order.db.minPoolSize}"/>
        <property name="maxPoolSize" value="${order.db.maxPoolSize}"/>
        <property name="connectionTimeout" value="${common.db.connectionTimeout}"/>
        <property name="driverProperties">
            <props>
                <prop key="user">${order.db.username}</prop>
                <prop key="password">${order.db.password}</prop>
            </props>
        </property>
    </bean>

    <!-- SessonFactory for Hibernate -->
    <bean id="orderSessionFactory" class="com.junbo.sharding.hibernate.LocalSessionFactoryWithListenerBean">
        <property name="jtaTransactionManager" ref="transactionManager"/>
        <property name="hibernateProperties">
            <map>
                <entry key="hibernate.dialect" value="${sharding.hibernate.dialect}"/>
                <entry key="hibernate.max_fetch_depth" value="${sharding.hibernate.max_fetch_depth}"/>
                <entry key="hibernate.jdbc.fetch_size" value="${sharding.hibernate.jdbc.fetch_size}"/>
                <entry key="hibernate.jdbc.batch_size" value="${sharding.hibernate.jdbc.batch_size}"/>
                <entry key="hibernate.show_sql" value="${sharding.hibernate.show_sql}"/>

                <entry key="hibernate.multiTenancy" value="SCHEMA"/>
                <entry key="hibernate.current_session_context_class" value="com.junbo.sharding.hibernate.MultiTenantJTASessionContext"/>
                <entry key="hibernate.tenant_identifier_resolver" value="com.junbo.sharding.hibernate.ShardCurrentTenantIdentifierResolver"/>
                <entry key="hibernate.multi_tenant_connection_provider" value-ref="orderDataSource"/>
                <entry key="hibernate.temp.use_jdbc_metadata_defaults" value="false"/>
            </map>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.junbo.order.db.entity</value>
                <value>com.junbo.common.health.ping</value>
            </list>
        </property>
        <property name="postInsertEventListeners" ref="orderEntityListener" />
        <property name="postUpdateEventListeners" ref="orderEntityListener" />
        <property name="postDeleteEventListeners" ref="orderEntityListener" />
    </bean>

    <bean id="orderPingSqlRepo" class="com.junbo.common.health.ping.PingSqlRepo">
        <property name="sessionFactory" ref="orderSessionFactory" />
        <property name="shardAlgorithm" ref="userShardAlgorithm"/>
        <property name="idGenerator" ref="oculus48IdGenerator" />
        <property name="dbName" value="order" />
    </bean>

    <!-- Index View -->
    <bean id="orderEntityViewRepository" class="com.junbo.sharding.view.DefaultEntityViewRepository">
        <property name="entityViews">
            <list>
                <bean class="com.junbo.order.db.view.SubledgerItemStatusView" />
            </list>
        </property>
    </bean>

    <bean id="orderMultimapDAO" class="com.junbo.sharding.view.DefaultMultimapDAO">
        <property name="sessionFactory" ref="indexSessionFactory" />
        <property name="shardAlgorithm" ref="externalShardAlgorithm" />
    </bean>

    <bean id="orderEntityListener" class="com.junbo.sharding.view.EntityListener">
        <property name="entityViewRepository" ref="orderEntityViewRepository" />
        <property name="multimapDAO" ref="orderMultimapDAO" />
    </bean>

    <bean id="orderViewQueryFactory" class="com.junbo.sharding.view.DefaultViewQueryFactory">
        <property name="entityViewRepository" ref="orderEntityViewRepository" />
        <property name="multimapDAO" ref="orderMultimapDAO" />
    </bean>

    <!-- cloudant repositories -->

    <bean id="cloudantBillingHistoryRepository" class="com.junbo.order.db.repo.cloudant.BillingHistoryRepositoryCloudantImpl" parent="cloudantClient">
        <property name="dbName" value="order_billing_history"/>
    </bean>

    <bean id="cloudantDiscountRepository" class="com.junbo.order.db.repo.cloudant.DiscountRepositoryCloudantImpl" parent="cloudantClient">
        <property name="dbName" value="order_discount"/>
    </bean>

    <bean id="cloudantFulfillmentHistoryRepository" class="com.junbo.order.db.repo.cloudant.FulfillmentHistoryRepositoryCloudantImpl" parent="cloudantClient">
        <property name="dbName" value="order_fulfillment_history"/>
    </bean>

    <bean id="cloudantOfferSnapshotRepository" class="com.junbo.order.db.repo.cloudant.OfferSnapshotRepositoryCloudantImpl" parent="cloudantClient">
        <property name="dbName" value="order_offer_snapshot"/>
    </bean>

    <bean id="cloudantItemSnapshotRepository" class="com.junbo.order.db.repo.cloudant.ItemSnapshotRepositoryCloudantImpl" parent="cloudantClient">
        <property name="dbName" value="order_item_snapshot"/>
    </bean>

    <bean id="cloudantOrderEventRepository" class="com.junbo.order.db.repo.cloudant.OrderEventRepositoryCloudantImpl" parent="cloudantClient">
        <property name="dbName" value="order_event"/>
    </bean>

    <bean id="cloudantOrderItemRepository" class="com.junbo.order.db.repo.cloudant.OrderItemRepositoryCloudantImpl" parent="cloudantClient">
        <property name="dbName" value="order_item"/>
    </bean>

    <bean id="cloudantOrderRepository" class="com.junbo.order.db.repo.cloudant.OrderRepositoryCloudantImpl" parent="cloudantClient">
        <property name="dbName" value="order"/>
    </bean>

    <bean id="cloudantPreorderInfoRepository" class="com.junbo.order.db.repo.cloudant.PreorderInfoRepositoryCloudantImpl" parent="cloudantClient">
        <property name="dbName" value="order_preorder_info"/>
    </bean>

    <bean id="cloudantSubledgerItemRepository" class="com.junbo.order.db.repo.cloudant.SubledgerItemRepositoryCloudantImpl" parent="cloudantClient">
        <property name="dbName" value="subledger_item"/>
    </bean>

    <bean id="cloudantSubledgerRepository" class="com.junbo.order.db.repo.cloudant.SubledgerRepositoryCloudantImpl" parent="cloudantClient">
        <property name="dbName" value="subledger"/>
    </bean>

    <bean id="cloudantSubledgerEventRepository" class="com.junbo.order.db.repo.cloudant.SubledgerEventRepositoryCloundantImpl" parent="cloudantClient">
        <property name="dbName" value="subledger_event"/>
    </bean>

    <bean id="cloudantOrderPendingActionRepository" class="com.junbo.order.db.repo.cloudant.OrderPendingActionRepositoryCloudantImpl" parent="cloudantClient">
        <property name="dbName" value="order_pending_action"/>
    </bean>
    <!-- dual-write repositories -->

    <bean id="billingHistoryRepository" parent="baseRepository">
        <property name="repositoryInterface" value="com.junbo.order.db.repo.BillingHistoryRepository"/>
        <property name="cloudantRepositoryImpl" ref="cloudantBillingHistoryRepository" />
        <property name="sqlRepositoryImpl" ref="sqlBillingHistoryRepository" />
    </bean>

    <bean id="discountRepository" parent="baseRepository">
        <property name="repositoryInterface" value="com.junbo.order.db.repo.DiscountRepository"/>
        <property name="cloudantRepositoryImpl" ref="cloudantDiscountRepository" />
        <property name="sqlRepositoryImpl" ref="sqlDiscountRepository" />
    </bean>

    <bean id="fulfillmentHistoryRepository" parent="baseRepository">
        <property name="repositoryInterface" value="com.junbo.order.db.repo.FulfillmentHistoryRepository"/>
        <property name="cloudantRepositoryImpl" ref="cloudantFulfillmentHistoryRepository" />
        <property name="sqlRepositoryImpl" ref="sqlFulfillmentHistoryRepository" />
    </bean>

    <bean id="offerSnapshotRepository" parent="baseRepository">
        <property name="repositoryInterface" value="com.junbo.order.db.repo.OfferSnapshotRepository"/>
        <property name="cloudantRepositoryImpl" ref="cloudantOfferSnapshotRepository" />
        <property name="sqlRepositoryImpl" ref="sqlOfferSnapshotRepository" />
    </bean>

    <bean id="itemSnapshotRepository" parent="baseRepository">
        <property name="repositoryInterface" value="com.junbo.order.db.repo.ItemSnapshotRepository"/>
        <property name="cloudantRepositoryImpl" ref="cloudantItemSnapshotRepository" />
        <property name="sqlRepositoryImpl" ref="sqlItemSnapshotRepository" />
    </bean>

    <bean id="orderEventRepository" parent="baseRepository">
        <property name="repositoryInterface" value="com.junbo.order.db.repo.OrderEventRepository"/>
        <property name="cloudantRepositoryImpl" ref="cloudantOrderEventRepository" />
        <property name="sqlRepositoryImpl" ref="sqlOrderEventRepository" />
    </bean>

    <bean id="orderItemRepository" parent="baseRepository">
        <property name="repositoryInterface" value="com.junbo.order.db.repo.OrderItemRepository"/>
        <property name="cloudantRepositoryImpl" ref="cloudantOrderItemRepository" />
        <property name="sqlRepositoryImpl" ref="sqlOrderItemRepository" />
    </bean>

    <bean id="orderRepository" parent="baseRepository">
        <property name="repositoryInterface" value="com.junbo.order.db.repo.OrderRepository"/>
        <property name="cloudantRepositoryImpl" ref="cloudantOrderRepository" />
        <property name="sqlRepositoryImpl" ref="sqlOrderRepository" />
    </bean>

    <bean id="preorderInfoRepository" parent="baseRepository">
        <property name="repositoryInterface" value="com.junbo.order.db.repo.PreorderInfoRepository"/>
        <property name="cloudantRepositoryImpl" ref="cloudantPreorderInfoRepository" />
        <property name="sqlRepositoryImpl" ref="sqlPreorderInfoRepository" />
    </bean>

    <bean id="orderPendingActionRepository" parent="baseRepository" >
        <property name="repositoryInterface" value="com.junbo.order.db.repo.OrderPendingActionRepository"/>
        <property name="cloudantRepositoryImpl" ref="cloudantOrderPendingActionRepository" />
        <property name="sqlRepositoryImpl" ref="sqlOrderPendingActionRepository" />
    </bean>

    <bean id="subledgerItemRepository" parent="baseRepository">
        <property name="repositoryInterface" value="com.junbo.order.db.repo.SubledgerItemRepository"/>
        <property name="cloudantRepositoryImpl" ref="cloudantSubledgerItemRepository" />
        <property name="sqlRepositoryImpl" ref="sqlSubledgerItemRepository" />
    </bean>

    <bean id="subledgerRepository" parent="baseRepository" >
        <property name="repositoryInterface" value="com.junbo.order.db.repo.SubledgerRepository"/>
        <property name="cloudantRepositoryImpl" ref="cloudantSubledgerRepository" />
        <property name="sqlRepositoryImpl" ref="sqlSubledgerRepository" />
    </bean>

    <bean id="subledgerEventRepository" parent="baseRepository" >
        <property name="repositoryInterface" value="com.junbo.order.db.repo.SubledgerEventRepository"/>
        <property name="cloudantRepositoryImpl" ref="cloudantSubledgerEventRepository" />
        <property name="sqlRepositoryImpl" ref="sqlSubledgerEventRepository" />
    </bean>

    <bean id="subledgerRepositoryFacade" class="com.junbo.order.db.repo.facade.impl.SubledgerRepositoryFacadeImpl">
        <property name="subledgerRepository" ref="subledgerRepository" />
        <property name="subledgerItemRepository" ref="subledgerItemRepository" />
        <property name="subledgerEventRepository" ref="subledgerEventRepository"/>
    </bean>

</beans>